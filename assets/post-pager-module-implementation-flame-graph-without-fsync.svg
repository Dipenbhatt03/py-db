<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="474" onload="init(evt)" viewBox="0 0 1200 474" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="474" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o post-pager-module-implementation-flame-graph-without-fsync.svg python test.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="463.00"> </text><svg id="frames" x="10" width="1180" total_samples="14006"><g><title>test_insert_lotta_rows (db/test.py:107) (15 samples, 0.11%)</title><rect x="0.0785%" y="244" width="0.1071%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="15"/><text x="0.3285%" y="254.50"></text></g><g><title>test_insert_lotta_rows (db/test.py:109) (57 samples, 0.41%)</title><rect x="0.1928%" y="244" width="0.4070%" height="15" fill="rgb(217,0,24)" fg:x="27" fg:w="57"/><text x="0.4428%" y="254.50"></text></g><g><title>__repr__ (row.py:62) (21 samples, 0.15%)</title><rect x="0.8068%" y="292" width="0.1499%" height="15" fill="rgb(221,193,54)" fg:x="113" fg:w="21"/><text x="1.0568%" y="302.50"></text></g><g><title>insert (binary_tree.py:76) (28 samples, 0.20%)</title><rect x="0.7640%" y="276" width="0.1999%" height="15" fill="rgb(248,212,6)" fg:x="107" fg:w="28"/><text x="1.0140%" y="286.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="1.0852%" y="388" width="0.1499%" height="15" fill="rgb(208,68,35)" fg:x="152" fg:w="21"/><text x="1.3352%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="1.2352%" y="388" width="0.1499%" height="15" fill="rgb(232,128,0)" fg:x="173" fg:w="21"/><text x="1.4852%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (51 samples, 0.36%)</title><rect x="1.0852%" y="372" width="0.3641%" height="15" fill="rgb(207,160,47)" fg:x="152" fg:w="51"/><text x="1.3352%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="1.5493%" y="388" width="0.1142%" height="15" fill="rgb(228,23,34)" fg:x="217" fg:w="16"/><text x="1.7993%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="1.4637%" y="372" width="0.2428%" height="15" fill="rgb(218,30,26)" fg:x="205" fg:w="34"/><text x="1.7137%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (15 samples, 0.11%)</title><rect x="1.7207%" y="372" width="0.1071%" height="15" fill="rgb(220,122,19)" fg:x="241" fg:w="15"/><text x="1.9707%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (107 samples, 0.76%)</title><rect x="1.0852%" y="356" width="0.7640%" height="15" fill="rgb(250,228,42)" fg:x="152" fg:w="107"/><text x="1.3352%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="1.9634%" y="388" width="0.1214%" height="15" fill="rgb(240,193,28)" fg:x="275" fg:w="17"/><text x="2.2134%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="1.8778%" y="372" width="0.2142%" height="15" fill="rgb(216,20,37)" fg:x="263" fg:w="30"/><text x="2.1278%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="2.1062%" y="388" width="0.1571%" height="15" fill="rgb(206,188,39)" fg:x="295" fg:w="22"/><text x="2.3562%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="2.2633%" y="388" width="0.1357%" height="15" fill="rgb(217,207,13)" fg:x="317" fg:w="19"/><text x="2.5133%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (48 samples, 0.34%)</title><rect x="2.1062%" y="372" width="0.3427%" height="15" fill="rgb(231,73,38)" fg:x="295" fg:w="48"/><text x="2.3562%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (86 samples, 0.61%)</title><rect x="1.8706%" y="356" width="0.6140%" height="15" fill="rgb(225,20,46)" fg:x="262" fg:w="86"/><text x="2.1206%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (207 samples, 1.48%)</title><rect x="1.0852%" y="340" width="1.4779%" height="15" fill="rgb(210,31,41)" fg:x="152" fg:w="207"/><text x="1.3352%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="2.6988%" y="388" width="0.1499%" height="15" fill="rgb(221,200,47)" fg:x="378" fg:w="21"/><text x="2.9488%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (39 samples, 0.28%)</title><rect x="2.6060%" y="372" width="0.2785%" height="15" fill="rgb(226,26,5)" fg:x="365" fg:w="39"/><text x="2.8560%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="2.8845%" y="388" width="0.1071%" height="15" fill="rgb(249,33,26)" fg:x="404" fg:w="15"/><text x="3.1345%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (32 samples, 0.23%)</title><rect x="2.8845%" y="372" width="0.2285%" height="15" fill="rgb(235,183,28)" fg:x="404" fg:w="32"/><text x="3.1345%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (77 samples, 0.55%)</title><rect x="2.6060%" y="356" width="0.5498%" height="15" fill="rgb(221,5,38)" fg:x="365" fg:w="77"/><text x="2.8560%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (33 samples, 0.24%)</title><rect x="3.1843%" y="372" width="0.2356%" height="15" fill="rgb(247,18,42)" fg:x="446" fg:w="33"/><text x="3.4343%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (28 samples, 0.20%)</title><rect x="3.4485%" y="372" width="0.1999%" height="15" fill="rgb(241,131,45)" fg:x="483" fg:w="28"/><text x="3.6985%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (69 samples, 0.49%)</title><rect x="3.1843%" y="356" width="0.4926%" height="15" fill="rgb(249,31,29)" fg:x="446" fg:w="69"/><text x="3.4343%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (162 samples, 1.16%)</title><rect x="2.6060%" y="340" width="1.1566%" height="15" fill="rgb(225,111,53)" fg:x="365" fg:w="162"/><text x="2.8560%" y="350.50"></text></g><g><title>insert (binary_tree.py:95) (27 samples, 0.19%)</title><rect x="3.7841%" y="340" width="0.1928%" height="15" fill="rgb(238,160,17)" fg:x="530" fg:w="27"/><text x="4.0341%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (413 samples, 2.95%)</title><rect x="1.0781%" y="324" width="2.9487%" height="15" fill="rgb(214,148,48)" fg:x="151" fg:w="413"/><text x="1.3281%" y="334.50">in..</text></g><g><title>insert (binary_tree.py:82) (17 samples, 0.12%)</title><rect x="4.0982%" y="404" width="0.1214%" height="15" fill="rgb(232,36,49)" fg:x="574" fg:w="17"/><text x="4.3482%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="4.0982%" y="388" width="0.2142%" height="15" fill="rgb(209,103,24)" fg:x="574" fg:w="30"/><text x="4.3482%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="4.3410%" y="420" width="0.1214%" height="15" fill="rgb(229,88,8)" fg:x="608" fg:w="17"/><text x="4.5910%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="4.3196%" y="404" width="0.1571%" height="15" fill="rgb(213,181,19)" fg:x="605" fg:w="22"/><text x="4.5696%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (39 samples, 0.28%)</title><rect x="4.3124%" y="388" width="0.2785%" height="15" fill="rgb(254,191,54)" fg:x="604" fg:w="39"/><text x="4.5624%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (74 samples, 0.53%)</title><rect x="4.0982%" y="372" width="0.5283%" height="15" fill="rgb(241,83,37)" fg:x="574" fg:w="74"/><text x="4.3482%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="4.6980%" y="404" width="0.1142%" height="15" fill="rgb(233,36,39)" fg:x="658" fg:w="16"/><text x="4.9480%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="4.6266%" y="388" width="0.2071%" height="15" fill="rgb(226,3,54)" fg:x="648" fg:w="29"/><text x="4.8766%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="4.6266%" y="372" width="0.2927%" height="15" fill="rgb(245,192,40)" fg:x="648" fg:w="41"/><text x="4.8766%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (120 samples, 0.86%)</title><rect x="4.0982%" y="356" width="0.8568%" height="15" fill="rgb(238,167,29)" fg:x="574" fg:w="120"/><text x="4.3482%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="4.9764%" y="388" width="0.1142%" height="15" fill="rgb(232,182,51)" fg:x="697" fg:w="16"/><text x="5.2264%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="5.0907%" y="388" width="0.1142%" height="15" fill="rgb(231,60,39)" fg:x="713" fg:w="16"/><text x="5.3407%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (36 samples, 0.26%)</title><rect x="4.9764%" y="372" width="0.2570%" height="15" fill="rgb(208,69,12)" fg:x="697" fg:w="36"/><text x="5.2264%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="5.3263%" y="388" width="0.1285%" height="15" fill="rgb(235,93,37)" fg:x="746" fg:w="18"/><text x="5.5763%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (31 samples, 0.22%)</title><rect x="5.2406%" y="372" width="0.2213%" height="15" fill="rgb(213,116,39)" fg:x="734" fg:w="31"/><text x="5.4906%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (70 samples, 0.50%)</title><rect x="4.9764%" y="356" width="0.4998%" height="15" fill="rgb(222,207,29)" fg:x="697" fg:w="70"/><text x="5.2264%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (210 samples, 1.50%)</title><rect x="4.0982%" y="340" width="1.4994%" height="15" fill="rgb(206,96,30)" fg:x="574" fg:w="210"/><text x="4.3482%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="5.7618%" y="404" width="0.1285%" height="15" fill="rgb(218,138,4)" fg:x="807" fg:w="18"/><text x="6.0118%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (32 samples, 0.23%)</title><rect x="5.6833%" y="388" width="0.2285%" height="15" fill="rgb(250,191,14)" fg:x="796" fg:w="32"/><text x="5.9333%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="5.9403%" y="388" width="0.1285%" height="15" fill="rgb(239,60,40)" fg:x="832" fg:w="18"/><text x="6.1903%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (58 samples, 0.41%)</title><rect x="5.6833%" y="372" width="0.4141%" height="15" fill="rgb(206,27,48)" fg:x="796" fg:w="58"/><text x="5.9333%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="6.1045%" y="388" width="0.1357%" height="15" fill="rgb(225,35,8)" fg:x="855" fg:w="19"/><text x="6.3545%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="6.2545%" y="388" width="0.1928%" height="15" fill="rgb(250,213,24)" fg:x="876" fg:w="27"/><text x="6.5045%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="6.3187%" y="404" width="0.1285%" height="15" fill="rgb(247,123,22)" fg:x="885" fg:w="18"/><text x="6.5687%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (59 samples, 0.42%)</title><rect x="6.1045%" y="372" width="0.4212%" height="15" fill="rgb(231,138,38)" fg:x="855" fg:w="59"/><text x="6.3545%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (131 samples, 0.94%)</title><rect x="5.6833%" y="356" width="0.9353%" height="15" fill="rgb(231,145,46)" fg:x="796" fg:w="131"/><text x="5.9333%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="6.7471%" y="404" width="0.1142%" height="15" fill="rgb(251,118,11)" fg:x="945" fg:w="16"/><text x="6.9971%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="6.6543%" y="388" width="0.2142%" height="15" fill="rgb(217,147,25)" fg:x="932" fg:w="30"/><text x="6.9043%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="6.8685%" y="388" width="0.1285%" height="15" fill="rgb(247,81,37)" fg:x="962" fg:w="18"/><text x="7.1185%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (51 samples, 0.36%)</title><rect x="6.6472%" y="372" width="0.3641%" height="15" fill="rgb(209,12,38)" fg:x="931" fg:w="51"/><text x="6.8972%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (17 samples, 0.12%)</title><rect x="7.0184%" y="388" width="0.1214%" height="15" fill="rgb(227,1,9)" fg:x="983" fg:w="17"/><text x="7.2684%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (31 samples, 0.22%)</title><rect x="7.0184%" y="372" width="0.2213%" height="15" fill="rgb(248,47,43)" fg:x="983" fg:w="31"/><text x="7.2684%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (89 samples, 0.64%)</title><rect x="6.6472%" y="356" width="0.6354%" height="15" fill="rgb(221,10,30)" fg:x="931" fg:w="89"/><text x="6.8972%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (247 samples, 1.76%)</title><rect x="5.6476%" y="340" width="1.7635%" height="15" fill="rgb(210,229,1)" fg:x="791" fg:w="247"/><text x="5.8976%" y="350.50"></text></g><g><title>insert (binary_tree.py:95) (28 samples, 0.20%)</title><rect x="7.4825%" y="340" width="0.1999%" height="15" fill="rgb(222,148,37)" fg:x="1048" fg:w="28"/><text x="7.7325%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (16 samples, 0.11%)</title><rect x="7.5682%" y="356" width="0.1142%" height="15" fill="rgb(234,67,33)" fg:x="1060" fg:w="16"/><text x="7.8182%" y="366.50"></text></g><g><title>right_child (row.py:77) (16 samples, 0.11%)</title><rect x="7.5682%" y="372" width="0.1142%" height="15" fill="rgb(247,98,35)" fg:x="1060" fg:w="16"/><text x="7.8182%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (506 samples, 3.61%)</title><rect x="4.0768%" y="324" width="3.6127%" height="15" fill="rgb(247,138,52)" fg:x="571" fg:w="506"/><text x="4.3268%" y="334.50">inse..</text></g><g><title>left_subtree_height (row.py:85) (27 samples, 0.19%)</title><rect x="7.8038%" y="340" width="0.1928%" height="15" fill="rgb(213,79,30)" fg:x="1093" fg:w="27"/><text x="8.0538%" y="350.50"></text></g><g><title>left_child (row.py:81) (24 samples, 0.17%)</title><rect x="7.8252%" y="356" width="0.1714%" height="15" fill="rgb(246,177,23)" fg:x="1096" fg:w="24"/><text x="8.0752%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (19 samples, 0.14%)</title><rect x="7.8609%" y="372" width="0.1357%" height="15" fill="rgb(230,62,27)" fg:x="1101" fg:w="19"/><text x="8.1109%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (22 samples, 0.16%)</title><rect x="8.0323%" y="372" width="0.1571%" height="15" fill="rgb(216,154,8)" fg:x="1125" fg:w="22"/><text x="8.2823%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (57 samples, 0.41%)</title><rect x="7.8038%" y="324" width="0.4070%" height="15" fill="rgb(244,35,45)" fg:x="1093" fg:w="57"/><text x="8.0538%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (30 samples, 0.21%)</title><rect x="7.9966%" y="340" width="0.2142%" height="15" fill="rgb(251,115,12)" fg:x="1120" fg:w="30"/><text x="8.2466%" y="350.50"></text></g><g><title>right_child (row.py:77) (30 samples, 0.21%)</title><rect x="7.9966%" y="356" width="0.2142%" height="15" fill="rgb(240,54,50)" fg:x="1120" fg:w="30"/><text x="8.2466%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (1,016 samples, 7.25%)</title><rect x="1.0710%" y="308" width="7.2540%" height="15" fill="rgb(233,84,52)" fg:x="150" fg:w="1016"/><text x="1.3210%" y="318.50">insert (bi..</text></g><g><title>left_child (row.py:81) (16 samples, 0.11%)</title><rect x="8.2108%" y="324" width="0.1142%" height="15" fill="rgb(207,117,47)" fg:x="1150" fg:w="16"/><text x="8.4608%" y="334.50"></text></g><g><title>insert (binary_tree.py:86) (24 samples, 0.17%)</title><rect x="8.3250%" y="308" width="0.1714%" height="15" fill="rgb(249,43,39)" fg:x="1166" fg:w="24"/><text x="8.5750%" y="318.50"></text></g><g><title>left_subtree_height (row.py:85) (24 samples, 0.17%)</title><rect x="8.3250%" y="324" width="0.1714%" height="15" fill="rgb(209,38,44)" fg:x="1166" fg:w="24"/><text x="8.5750%" y="334.50"></text></g><g><title>left_child (row.py:81) (24 samples, 0.17%)</title><rect x="8.3250%" y="340" width="0.1714%" height="15" fill="rgb(236,212,23)" fg:x="1166" fg:w="24"/><text x="8.5750%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (20 samples, 0.14%)</title><rect x="8.3536%" y="356" width="0.1428%" height="15" fill="rgb(242,79,21)" fg:x="1170" fg:w="20"/><text x="8.6036%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="8.5463%" y="372" width="0.1499%" height="15" fill="rgb(211,96,35)" fg:x="1197" fg:w="21"/><text x="8.7963%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="8.7034%" y="372" width="0.2142%" height="15" fill="rgb(253,215,40)" fg:x="1219" fg:w="30"/><text x="8.9534%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (62 samples, 0.44%)</title><rect x="8.5463%" y="356" width="0.4427%" height="15" fill="rgb(211,81,21)" fg:x="1197" fg:w="62"/><text x="8.7963%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (32 samples, 0.23%)</title><rect x="9.0318%" y="372" width="0.2285%" height="15" fill="rgb(208,190,38)" fg:x="1265" fg:w="32"/><text x="9.2818%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="9.2817%" y="388" width="0.1142%" height="15" fill="rgb(235,213,38)" fg:x="1300" fg:w="16"/><text x="9.5317%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (35 samples, 0.25%)</title><rect x="9.2817%" y="372" width="0.2499%" height="15" fill="rgb(237,122,38)" fg:x="1300" fg:w="35"/><text x="9.5317%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (77 samples, 0.55%)</title><rect x="9.0318%" y="356" width="0.5498%" height="15" fill="rgb(244,218,35)" fg:x="1265" fg:w="77"/><text x="9.2818%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (16 samples, 0.11%)</title><rect x="9.6102%" y="356" width="0.1142%" height="15" fill="rgb(240,68,47)" fg:x="1346" fg:w="16"/><text x="9.8602%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (167 samples, 1.19%)</title><rect x="8.5392%" y="340" width="1.1923%" height="15" fill="rgb(210,16,53)" fg:x="1196" fg:w="167"/><text x="8.7892%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="9.8458%" y="388" width="0.1285%" height="15" fill="rgb(235,124,12)" fg:x="1379" fg:w="18"/><text x="10.0958%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (35 samples, 0.25%)</title><rect x="9.7601%" y="372" width="0.2499%" height="15" fill="rgb(224,169,11)" fg:x="1367" fg:w="35"/><text x="10.0101%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (20 samples, 0.14%)</title><rect x="10.0243%" y="372" width="0.1428%" height="15" fill="rgb(250,166,2)" fg:x="1404" fg:w="20"/><text x="10.2743%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (59 samples, 0.42%)</title><rect x="9.7601%" y="356" width="0.4212%" height="15" fill="rgb(242,216,29)" fg:x="1367" fg:w="59"/><text x="10.0101%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="10.2884%" y="388" width="0.1214%" height="15" fill="rgb(230,116,27)" fg:x="1441" fg:w="17"/><text x="10.5384%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (32 samples, 0.23%)</title><rect x="10.2028%" y="372" width="0.2285%" height="15" fill="rgb(228,99,48)" fg:x="1429" fg:w="32"/><text x="10.4528%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="10.5241%" y="388" width="0.1071%" height="15" fill="rgb(253,11,6)" fg:x="1474" fg:w="15"/><text x="10.7741%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="10.4455%" y="372" width="0.2142%" height="15" fill="rgb(247,143,39)" fg:x="1463" fg:w="30"/><text x="10.6955%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (72 samples, 0.51%)</title><rect x="10.1956%" y="356" width="0.5141%" height="15" fill="rgb(236,97,10)" fg:x="1428" fg:w="72"/><text x="10.4456%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (146 samples, 1.04%)</title><rect x="9.7601%" y="340" width="1.0424%" height="15" fill="rgb(233,208,19)" fg:x="1367" fg:w="146"/><text x="10.0101%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (339 samples, 2.42%)</title><rect x="8.5392%" y="324" width="2.4204%" height="15" fill="rgb(216,164,2)" fg:x="1196" fg:w="339"/><text x="8.7892%" y="334.50">in..</text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="11.0524%" y="388" width="0.1714%" height="15" fill="rgb(220,129,5)" fg:x="1548" fg:w="24"/><text x="11.3024%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="11.2238%" y="404" width="0.1142%" height="15" fill="rgb(242,17,10)" fg:x="1572" fg:w="16"/><text x="11.4738%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="11.2238%" y="388" width="0.1499%" height="15" fill="rgb(242,107,0)" fg:x="1572" fg:w="21"/><text x="11.4738%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (46 samples, 0.33%)</title><rect x="11.0524%" y="372" width="0.3284%" height="15" fill="rgb(251,28,31)" fg:x="1548" fg:w="46"/><text x="11.3024%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="11.3880%" y="404" width="0.1071%" height="15" fill="rgb(233,223,10)" fg:x="1595" fg:w="15"/><text x="11.6380%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (28 samples, 0.20%)</title><rect x="11.3880%" y="388" width="0.1999%" height="15" fill="rgb(215,21,27)" fg:x="1595" fg:w="28"/><text x="11.6380%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="11.5879%" y="388" width="0.1499%" height="15" fill="rgb(232,23,21)" fg:x="1623" fg:w="21"/><text x="11.8379%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (54 samples, 0.39%)</title><rect x="11.3880%" y="372" width="0.3855%" height="15" fill="rgb(244,5,23)" fg:x="1595" fg:w="54"/><text x="11.6380%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (114 samples, 0.81%)</title><rect x="11.0524%" y="356" width="0.8139%" height="15" fill="rgb(226,81,46)" fg:x="1548" fg:w="114"/><text x="11.3024%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="11.9020%" y="372" width="0.2142%" height="15" fill="rgb(247,70,30)" fg:x="1667" fg:w="30"/><text x="12.1520%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="12.1519%" y="404" width="0.1071%" height="15" fill="rgb(212,68,19)" fg:x="1702" fg:w="15"/><text x="12.4019%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="12.1519%" y="388" width="0.1642%" height="15" fill="rgb(240,187,13)" fg:x="1702" fg:w="23"/><text x="12.4019%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (40 samples, 0.29%)</title><rect x="12.1519%" y="372" width="0.2856%" height="15" fill="rgb(223,113,26)" fg:x="1702" fg:w="40"/><text x="12.4019%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (83 samples, 0.59%)</title><rect x="11.9020%" y="356" width="0.5926%" height="15" fill="rgb(206,192,2)" fg:x="1667" fg:w="83"/><text x="12.1520%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (225 samples, 1.61%)</title><rect x="11.0381%" y="340" width="1.6065%" height="15" fill="rgb(241,108,4)" fg:x="1546" fg:w="225"/><text x="11.2881%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="12.6803%" y="404" width="0.1071%" height="15" fill="rgb(247,173,49)" fg:x="1776" fg:w="15"/><text x="12.9303%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (31 samples, 0.22%)</title><rect x="12.6803%" y="388" width="0.2213%" height="15" fill="rgb(224,114,35)" fg:x="1776" fg:w="31"/><text x="12.9303%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="12.9159%" y="388" width="0.1142%" height="15" fill="rgb(245,159,27)" fg:x="1809" fg:w="16"/><text x="13.1659%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (54 samples, 0.39%)</title><rect x="12.6803%" y="372" width="0.3855%" height="15" fill="rgb(245,172,44)" fg:x="1776" fg:w="54"/><text x="12.9303%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="13.1943%" y="404" width="0.1071%" height="15" fill="rgb(236,23,11)" fg:x="1848" fg:w="15"/><text x="13.4443%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="13.1015%" y="388" width="0.2071%" height="15" fill="rgb(205,117,38)" fg:x="1835" fg:w="29"/><text x="13.3515%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="13.3300%" y="388" width="0.2142%" height="15" fill="rgb(237,72,25)" fg:x="1867" fg:w="30"/><text x="13.5800%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (68 samples, 0.49%)</title><rect x="13.1015%" y="372" width="0.4855%" height="15" fill="rgb(244,70,9)" fg:x="1835" fg:w="68"/><text x="13.3515%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (137 samples, 0.98%)</title><rect x="12.6731%" y="356" width="0.9782%" height="15" fill="rgb(217,125,39)" fg:x="1775" fg:w="137"/><text x="12.9231%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="13.6656%" y="388" width="0.1499%" height="15" fill="rgb(235,36,10)" fg:x="1914" fg:w="21"/><text x="13.9156%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="13.8512%" y="404" width="0.1285%" height="15" fill="rgb(251,123,47)" fg:x="1940" fg:w="18"/><text x="14.1012%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (26 samples, 0.19%)</title><rect x="13.8155%" y="388" width="0.1856%" height="15" fill="rgb(221,13,13)" fg:x="1935" fg:w="26"/><text x="14.0655%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (48 samples, 0.34%)</title><rect x="13.6656%" y="372" width="0.3427%" height="15" fill="rgb(238,131,9)" fg:x="1914" fg:w="48"/><text x="13.9156%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="14.0154%" y="388" width="0.1499%" height="15" fill="rgb(211,50,8)" fg:x="1963" fg:w="21"/><text x="14.2654%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="14.1868%" y="388" width="0.1071%" height="15" fill="rgb(245,182,24)" fg:x="1987" fg:w="15"/><text x="14.4368%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="14.0154%" y="372" width="0.2927%" height="15" fill="rgb(242,14,37)" fg:x="1963" fg:w="41"/><text x="14.2654%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (105 samples, 0.75%)</title><rect x="13.6656%" y="356" width="0.7497%" height="15" fill="rgb(246,228,12)" fg:x="1914" fg:w="105"/><text x="13.9156%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (260 samples, 1.86%)</title><rect x="12.6731%" y="340" width="1.8563%" height="15" fill="rgb(213,55,15)" fg:x="1775" fg:w="260"/><text x="12.9231%" y="350.50">i..</text></g><g><title>left_subtree_height (row.py:85) (17 samples, 0.12%)</title><rect x="14.5795%" y="356" width="0.1214%" height="15" fill="rgb(209,9,3)" fg:x="2042" fg:w="17"/><text x="14.8295%" y="366.50"></text></g><g><title>left_child (row.py:81) (17 samples, 0.12%)</title><rect x="14.5795%" y="372" width="0.1214%" height="15" fill="rgb(230,59,30)" fg:x="2042" fg:w="17"/><text x="14.8295%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (15 samples, 0.11%)</title><rect x="14.5937%" y="388" width="0.1071%" height="15" fill="rgb(209,121,21)" fg:x="2044" fg:w="15"/><text x="14.8437%" y="398.50"></text></g><g><title>insert (binary_tree.py:95) (26 samples, 0.19%)</title><rect x="14.5723%" y="340" width="0.1856%" height="15" fill="rgb(220,109,13)" fg:x="2041" fg:w="26"/><text x="14.8223%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (533 samples, 3.81%)</title><rect x="11.0310%" y="324" width="3.8055%" height="15" fill="rgb(232,18,1)" fg:x="1545" fg:w="533"/><text x="11.2810%" y="334.50">inse..</text></g><g><title>insert (binary_tree.py:95) (29 samples, 0.21%)</title><rect x="14.9365%" y="324" width="0.2071%" height="15" fill="rgb(215,41,42)" fg:x="2092" fg:w="29"/><text x="15.1865%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (16 samples, 0.11%)</title><rect x="15.0293%" y="340" width="0.1142%" height="15" fill="rgb(224,123,36)" fg:x="2105" fg:w="16"/><text x="15.2793%" y="350.50"></text></g><g><title>right_child (row.py:77) (16 samples, 0.11%)</title><rect x="15.0293%" y="356" width="0.1142%" height="15" fill="rgb(240,125,3)" fg:x="2105" fg:w="16"/><text x="15.2793%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (941 samples, 6.72%)</title><rect x="8.5178%" y="308" width="6.7185%" height="15" fill="rgb(205,98,50)" fg:x="1193" fg:w="941"/><text x="8.7678%" y="318.50">insert (b..</text></g><g><title>fetch_row (row.py:160) (19 samples, 0.14%)</title><rect x="15.2934%" y="356" width="0.1357%" height="15" fill="rgb(205,185,37)" fg:x="2142" fg:w="19"/><text x="15.5434%" y="366.50"></text></g><g><title>insert (binary_tree.py:92) (29 samples, 0.21%)</title><rect x="15.2363%" y="308" width="0.2071%" height="15" fill="rgb(238,207,15)" fg:x="2134" fg:w="29"/><text x="15.4863%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (29 samples, 0.21%)</title><rect x="15.2363%" y="324" width="0.2071%" height="15" fill="rgb(213,199,42)" fg:x="2134" fg:w="29"/><text x="15.4863%" y="334.50"></text></g><g><title>right_child (row.py:77) (28 samples, 0.20%)</title><rect x="15.2435%" y="340" width="0.1999%" height="15" fill="rgb(235,201,11)" fg:x="2135" fg:w="28"/><text x="15.4935%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (24 samples, 0.17%)</title><rect x="15.5148%" y="356" width="0.1714%" height="15" fill="rgb(207,46,11)" fg:x="2173" fg:w="24"/><text x="15.7648%" y="366.50"></text></g><g><title>left_subtree_height (row.py:85) (33 samples, 0.24%)</title><rect x="15.4791%" y="324" width="0.2356%" height="15" fill="rgb(241,35,35)" fg:x="2168" fg:w="33"/><text x="15.7291%" y="334.50"></text></g><g><title>left_child (row.py:81) (33 samples, 0.24%)</title><rect x="15.4791%" y="340" width="0.2356%" height="15" fill="rgb(243,32,47)" fg:x="2168" fg:w="33"/><text x="15.7291%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (33 samples, 0.24%)</title><rect x="15.8075%" y="356" width="0.2356%" height="15" fill="rgb(247,202,23)" fg:x="2214" fg:w="33"/><text x="16.0575%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (84 samples, 0.60%)</title><rect x="15.4791%" y="308" width="0.5997%" height="15" fill="rgb(219,102,11)" fg:x="2168" fg:w="84"/><text x="15.7291%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (51 samples, 0.36%)</title><rect x="15.7147%" y="324" width="0.3641%" height="15" fill="rgb(243,110,44)" fg:x="2201" fg:w="51"/><text x="15.9647%" y="334.50"></text></g><g><title>right_child (row.py:77) (50 samples, 0.36%)</title><rect x="15.7218%" y="340" width="0.3570%" height="15" fill="rgb(222,74,54)" fg:x="2202" fg:w="50"/><text x="15.9718%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (2,120 samples, 15.14%)</title><rect x="1.0567%" y="292" width="15.1364%" height="15" fill="rgb(216,99,12)" fg:x="148" fg:w="2120"/><text x="1.3067%" y="302.50">insert (binary_tree.py:..</text></g><g><title>left_child (row.py:81) (16 samples, 0.11%)</title><rect x="16.0788%" y="308" width="0.1142%" height="15" fill="rgb(226,22,26)" fg:x="2252" fg:w="16"/><text x="16.3288%" y="318.50"></text></g><g><title>deserialize (row.py:147) (23 samples, 0.16%)</title><rect x="16.4073%" y="356" width="0.1642%" height="15" fill="rgb(217,163,10)" fg:x="2298" fg:w="23"/><text x="16.6573%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (45 samples, 0.32%)</title><rect x="16.2645%" y="340" width="0.3213%" height="15" fill="rgb(213,25,53)" fg:x="2278" fg:w="45"/><text x="16.5145%" y="350.50"></text></g><g><title>insert (binary_tree.py:86) (57 samples, 0.41%)</title><rect x="16.1931%" y="292" width="0.4070%" height="15" fill="rgb(252,105,26)" fg:x="2268" fg:w="57"/><text x="16.4431%" y="302.50"></text></g><g><title>left_subtree_height (row.py:85) (56 samples, 0.40%)</title><rect x="16.2002%" y="308" width="0.3998%" height="15" fill="rgb(220,39,43)" fg:x="2269" fg:w="56"/><text x="16.4502%" y="318.50"></text></g><g><title>left_child (row.py:81) (56 samples, 0.40%)</title><rect x="16.2002%" y="324" width="0.3998%" height="15" fill="rgb(229,68,48)" fg:x="2269" fg:w="56"/><text x="16.4502%" y="334.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="16.7928%" y="388" width="0.2142%" height="15" fill="rgb(252,8,32)" fg:x="2352" fg:w="30"/><text x="17.0428%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (44 samples, 0.31%)</title><rect x="16.7143%" y="372" width="0.3142%" height="15" fill="rgb(223,20,43)" fg:x="2341" fg:w="44"/><text x="16.9643%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="17.0284%" y="388" width="0.1142%" height="15" fill="rgb(229,81,49)" fg:x="2385" fg:w="16"/><text x="17.2784%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="17.0284%" y="372" width="0.1928%" height="15" fill="rgb(236,28,36)" fg:x="2385" fg:w="27"/><text x="17.2784%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (87 samples, 0.62%)</title><rect x="16.7143%" y="356" width="0.6212%" height="15" fill="rgb(249,185,26)" fg:x="2341" fg:w="87"/><text x="16.9643%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="17.3783%" y="388" width="0.1071%" height="15" fill="rgb(249,174,33)" fg:x="2434" fg:w="15"/><text x="17.6283%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="17.3426%" y="372" width="0.1714%" height="15" fill="rgb(233,201,37)" fg:x="2429" fg:w="24"/><text x="17.5926%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="17.5139%" y="372" width="0.1499%" height="15" fill="rgb(221,78,26)" fg:x="2453" fg:w="21"/><text x="17.7639%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (50 samples, 0.36%)</title><rect x="17.3426%" y="356" width="0.3570%" height="15" fill="rgb(250,127,30)" fg:x="2429" fg:w="50"/><text x="17.5926%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (152 samples, 1.09%)</title><rect x="16.7071%" y="340" width="1.0852%" height="15" fill="rgb(230,49,44)" fg:x="2340" fg:w="152"/><text x="16.9571%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="17.7995%" y="372" width="0.1499%" height="15" fill="rgb(229,67,23)" fg:x="2493" fg:w="21"/><text x="18.0495%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="17.9566%" y="388" width="0.1714%" height="15" fill="rgb(249,83,47)" fg:x="2515" fg:w="24"/><text x="18.2066%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (42 samples, 0.30%)</title><rect x="17.9566%" y="372" width="0.2999%" height="15" fill="rgb(215,43,3)" fg:x="2515" fg:w="42"/><text x="18.2066%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (69 samples, 0.49%)</title><rect x="17.7995%" y="356" width="0.4926%" height="15" fill="rgb(238,154,13)" fg:x="2493" fg:w="69"/><text x="18.0495%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="18.3064%" y="388" width="0.1357%" height="15" fill="rgb(219,56,2)" fg:x="2564" fg:w="19"/><text x="18.5564%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (35 samples, 0.25%)</title><rect x="18.3064%" y="372" width="0.2499%" height="15" fill="rgb(233,0,4)" fg:x="2564" fg:w="35"/><text x="18.5564%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="18.5563%" y="388" width="0.1642%" height="15" fill="rgb(235,30,7)" fg:x="2599" fg:w="23"/><text x="18.8063%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="18.5992%" y="404" width="0.1214%" height="15" fill="rgb(250,79,13)" fg:x="2605" fg:w="17"/><text x="18.8492%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="18.7205%" y="388" width="0.1928%" height="15" fill="rgb(211,146,34)" fg:x="2622" fg:w="27"/><text x="18.9705%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (52 samples, 0.37%)</title><rect x="18.5563%" y="372" width="0.3713%" height="15" fill="rgb(228,22,38)" fg:x="2599" fg:w="52"/><text x="18.8063%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (98 samples, 0.70%)</title><rect x="18.3064%" y="356" width="0.6997%" height="15" fill="rgb(235,168,5)" fg:x="2564" fg:w="98"/><text x="18.5564%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (181 samples, 1.29%)</title><rect x="17.7995%" y="340" width="1.2923%" height="15" fill="rgb(221,155,16)" fg:x="2493" fg:w="181"/><text x="18.0495%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (354 samples, 2.53%)</title><rect x="16.7071%" y="324" width="2.5275%" height="15" fill="rgb(215,215,53)" fg:x="2340" fg:w="354"/><text x="16.9571%" y="334.50">in..</text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="19.4060%" y="388" width="0.1214%" height="15" fill="rgb(223,4,10)" fg:x="2718" fg:w="17"/><text x="19.6560%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (36 samples, 0.26%)</title><rect x="19.3203%" y="372" width="0.2570%" height="15" fill="rgb(234,103,6)" fg:x="2706" fg:w="36"/><text x="19.5703%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="19.6701%" y="388" width="0.1142%" height="15" fill="rgb(227,97,0)" fg:x="2755" fg:w="16"/><text x="19.9201%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="19.5773%" y="372" width="0.2142%" height="15" fill="rgb(234,150,53)" fg:x="2742" fg:w="30"/><text x="19.8273%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (77 samples, 0.55%)</title><rect x="19.3203%" y="356" width="0.5498%" height="15" fill="rgb(228,201,54)" fg:x="2706" fg:w="77"/><text x="19.5703%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="19.8772%" y="404" width="0.1357%" height="15" fill="rgb(222,22,37)" fg:x="2784" fg:w="19"/><text x="20.1272%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (25 samples, 0.18%)</title><rect x="19.8772%" y="388" width="0.1785%" height="15" fill="rgb(237,53,32)" fg:x="2784" fg:w="25"/><text x="20.1272%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (37 samples, 0.26%)</title><rect x="19.8772%" y="372" width="0.2642%" height="15" fill="rgb(233,25,53)" fg:x="2784" fg:w="37"/><text x="20.1272%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="20.1485%" y="388" width="0.1499%" height="15" fill="rgb(210,40,34)" fg:x="2822" fg:w="21"/><text x="20.3985%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (25 samples, 0.18%)</title><rect x="20.2984%" y="388" width="0.1785%" height="15" fill="rgb(241,220,44)" fg:x="2843" fg:w="25"/><text x="20.5484%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (61 samples, 0.44%)</title><rect x="20.1485%" y="372" width="0.4355%" height="15" fill="rgb(235,28,35)" fg:x="2822" fg:w="61"/><text x="20.3985%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (106 samples, 0.76%)</title><rect x="19.8772%" y="356" width="0.7568%" height="15" fill="rgb(210,56,17)" fg:x="2784" fg:w="106"/><text x="20.1272%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (198 samples, 1.41%)</title><rect x="19.3203%" y="340" width="1.4137%" height="15" fill="rgb(224,130,29)" fg:x="2706" fg:w="198"/><text x="19.5703%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (28 samples, 0.20%)</title><rect x="20.7554%" y="388" width="0.1999%" height="15" fill="rgb(235,212,8)" fg:x="2907" fg:w="28"/><text x="21.0054%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="20.9624%" y="388" width="0.1357%" height="15" fill="rgb(223,33,50)" fg:x="2936" fg:w="19"/><text x="21.2124%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (54 samples, 0.39%)</title><rect x="20.7554%" y="372" width="0.3855%" height="15" fill="rgb(219,149,13)" fg:x="2907" fg:w="54"/><text x="21.0054%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (33 samples, 0.24%)</title><rect x="21.1552%" y="372" width="0.2356%" height="15" fill="rgb(250,156,29)" fg:x="2963" fg:w="33"/><text x="21.4052%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (97 samples, 0.69%)</title><rect x="20.7411%" y="356" width="0.6926%" height="15" fill="rgb(216,193,19)" fg:x="2905" fg:w="97"/><text x="20.9911%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="21.5408%" y="420" width="0.1071%" height="15" fill="rgb(216,135,14)" fg:x="3017" fg:w="15"/><text x="21.7908%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (43 samples, 0.31%)</title><rect x="21.4622%" y="388" width="0.3070%" height="15" fill="rgb(241,47,5)" fg:x="3006" fg:w="43"/><text x="21.7122%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (32 samples, 0.23%)</title><rect x="21.5408%" y="404" width="0.2285%" height="15" fill="rgb(233,42,35)" fg:x="3017" fg:w="32"/><text x="21.7908%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="21.8335%" y="404" width="0.1214%" height="15" fill="rgb(231,13,6)" fg:x="3058" fg:w="17"/><text x="22.0835%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (31 samples, 0.22%)</title><rect x="21.7692%" y="388" width="0.2213%" height="15" fill="rgb(207,181,40)" fg:x="3049" fg:w="31"/><text x="22.0192%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (84 samples, 0.60%)</title><rect x="21.4622%" y="372" width="0.5997%" height="15" fill="rgb(254,173,49)" fg:x="3006" fg:w="84"/><text x="21.7122%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="22.0834%" y="388" width="0.1714%" height="15" fill="rgb(221,1,38)" fg:x="3093" fg:w="24"/><text x="22.3334%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (22 samples, 0.16%)</title><rect x="22.2547%" y="388" width="0.1571%" height="15" fill="rgb(206,124,46)" fg:x="3117" fg:w="22"/><text x="22.5047%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (61 samples, 0.44%)</title><rect x="22.0834%" y="372" width="0.4355%" height="15" fill="rgb(249,21,11)" fg:x="3093" fg:w="61"/><text x="22.3334%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (162 samples, 1.16%)</title><rect x="21.4622%" y="356" width="1.1566%" height="15" fill="rgb(222,201,40)" fg:x="3006" fg:w="162"/><text x="21.7122%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (279 samples, 1.99%)</title><rect x="20.7411%" y="340" width="1.9920%" height="15" fill="rgb(235,61,29)" fg:x="2905" fg:w="279"/><text x="20.9911%" y="350.50">i..</text></g><g><title>insert (binary_tree.py:95) (32 samples, 0.23%)</title><rect x="22.8045%" y="340" width="0.2285%" height="15" fill="rgb(219,207,3)" fg:x="3194" fg:w="32"/><text x="23.0545%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (16 samples, 0.11%)</title><rect x="22.9187%" y="356" width="0.1142%" height="15" fill="rgb(222,56,46)" fg:x="3210" fg:w="16"/><text x="23.1687%" y="366.50"></text></g><g><title>right_child (row.py:77) (16 samples, 0.11%)</title><rect x="22.9187%" y="372" width="0.1142%" height="15" fill="rgb(239,76,54)" fg:x="3210" fg:w="16"/><text x="23.1687%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (528 samples, 3.77%)</title><rect x="19.3203%" y="324" width="3.7698%" height="15" fill="rgb(231,124,27)" fg:x="2706" fg:w="528"/><text x="19.5703%" y="334.50">inse..</text></g><g><title>insert (binary_tree.py:92) (19 samples, 0.14%)</title><rect x="23.0901%" y="324" width="0.1357%" height="15" fill="rgb(249,195,6)" fg:x="3234" fg:w="19"/><text x="23.3401%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (18 samples, 0.13%)</title><rect x="23.0972%" y="340" width="0.1285%" height="15" fill="rgb(237,174,47)" fg:x="3235" fg:w="18"/><text x="23.3472%" y="350.50"></text></g><g><title>right_child (row.py:77) (18 samples, 0.13%)</title><rect x="23.0972%" y="356" width="0.1285%" height="15" fill="rgb(206,201,31)" fg:x="3235" fg:w="18"/><text x="23.3472%" y="366.50"></text></g><g><title>left_subtree_height (row.py:85) (16 samples, 0.11%)</title><rect x="23.2472%" y="340" width="0.1142%" height="15" fill="rgb(231,57,52)" fg:x="3256" fg:w="16"/><text x="23.4972%" y="350.50"></text></g><g><title>left_child (row.py:81) (16 samples, 0.11%)</title><rect x="23.2472%" y="356" width="0.1142%" height="15" fill="rgb(248,177,22)" fg:x="3256" fg:w="16"/><text x="23.4972%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (28 samples, 0.20%)</title><rect x="23.2472%" y="324" width="0.1999%" height="15" fill="rgb(215,211,37)" fg:x="3256" fg:w="28"/><text x="23.4972%" y="334.50"></text></g><g><title>insert (binary_tree.py:82) (959 samples, 6.85%)</title><rect x="16.7000%" y="308" width="6.8471%" height="15" fill="rgb(241,128,51)" fg:x="2339" fg:w="959"/><text x="16.9500%" y="318.50">insert (b..</text></g><g><title>insert (binary_tree.py:86) (24 samples, 0.17%)</title><rect x="23.5471%" y="308" width="0.1714%" height="15" fill="rgb(227,165,31)" fg:x="3298" fg:w="24"/><text x="23.7971%" y="318.50"></text></g><g><title>left_subtree_height (row.py:85) (18 samples, 0.13%)</title><rect x="23.5899%" y="324" width="0.1285%" height="15" fill="rgb(228,167,24)" fg:x="3304" fg:w="18"/><text x="23.8399%" y="334.50"></text></g><g><title>left_child (row.py:81) (18 samples, 0.13%)</title><rect x="23.5899%" y="340" width="0.1285%" height="15" fill="rgb(228,143,12)" fg:x="3304" fg:w="18"/><text x="23.8399%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="23.9754%" y="436" width="0.1142%" height="15" fill="rgb(249,149,8)" fg:x="3358" fg:w="16"/><text x="24.2254%" y="446.50"></text></g><g><title>insert (binary_tree.py:89) (22 samples, 0.16%)</title><rect x="23.9683%" y="420" width="0.1571%" height="15" fill="rgb(243,35,44)" fg:x="3357" fg:w="22"/><text x="24.2183%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (35 samples, 0.25%)</title><rect x="23.8898%" y="404" width="0.2499%" height="15" fill="rgb(246,89,9)" fg:x="3346" fg:w="35"/><text x="24.1398%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (47 samples, 0.34%)</title><rect x="23.8398%" y="388" width="0.3356%" height="15" fill="rgb(233,213,13)" fg:x="3339" fg:w="47"/><text x="24.0898%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="24.1825%" y="388" width="0.1357%" height="15" fill="rgb(233,141,41)" fg:x="3387" fg:w="19"/><text x="24.4325%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (71 samples, 0.51%)</title><rect x="23.8398%" y="372" width="0.5069%" height="15" fill="rgb(239,167,4)" fg:x="3339" fg:w="71"/><text x="24.0898%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="24.4609%" y="388" width="0.1214%" height="15" fill="rgb(209,217,16)" fg:x="3426" fg:w="17"/><text x="24.7109%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (37 samples, 0.26%)</title><rect x="24.3610%" y="372" width="0.2642%" height="15" fill="rgb(219,88,35)" fg:x="3412" fg:w="37"/><text x="24.6110%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (117 samples, 0.84%)</title><rect x="23.8398%" y="356" width="0.8354%" height="15" fill="rgb(220,193,23)" fg:x="3339" fg:w="117"/><text x="24.0898%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="24.7394%" y="388" width="0.1071%" height="15" fill="rgb(230,90,52)" fg:x="3465" fg:w="15"/><text x="24.9894%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (27 samples, 0.19%)</title><rect x="24.7323%" y="372" width="0.1928%" height="15" fill="rgb(252,106,19)" fg:x="3464" fg:w="27"/><text x="24.9823%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (17 samples, 0.12%)</title><rect x="24.9322%" y="404" width="0.1214%" height="15" fill="rgb(206,74,20)" fg:x="3492" fg:w="17"/><text x="25.1822%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="25.0535%" y="404" width="0.1499%" height="15" fill="rgb(230,138,44)" fg:x="3509" fg:w="21"/><text x="25.3035%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (40 samples, 0.29%)</title><rect x="24.9322%" y="388" width="0.2856%" height="15" fill="rgb(235,182,43)" fg:x="3492" fg:w="40"/><text x="25.1822%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (25 samples, 0.18%)</title><rect x="25.2963%" y="404" width="0.1785%" height="15" fill="rgb(242,16,51)" fg:x="3543" fg:w="25"/><text x="25.5463%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="25.2320%" y="388" width="0.2927%" height="15" fill="rgb(248,9,4)" fg:x="3534" fg:w="41"/><text x="25.4820%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (87 samples, 0.62%)</title><rect x="24.9322%" y="372" width="0.6212%" height="15" fill="rgb(210,31,22)" fg:x="3492" fg:w="87"/><text x="25.1822%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (124 samples, 0.89%)</title><rect x="24.7323%" y="356" width="0.8853%" height="15" fill="rgb(239,54,39)" fg:x="3464" fg:w="124"/><text x="24.9823%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (271 samples, 1.93%)</title><rect x="23.8398%" y="340" width="1.9349%" height="15" fill="rgb(230,99,41)" fg:x="3339" fg:w="271"/><text x="24.0898%" y="350.50">i..</text></g><g><title>insert (binary_tree.py:95) (19 samples, 0.14%)</title><rect x="25.6390%" y="356" width="0.1357%" height="15" fill="rgb(253,106,12)" fg:x="3591" fg:w="19"/><text x="25.8890%" y="366.50"></text></g><g><title>insert (binary_tree.py:86) (15 samples, 0.11%)</title><rect x="25.7747%" y="340" width="0.1071%" height="15" fill="rgb(213,46,41)" fg:x="3610" fg:w="15"/><text x="26.0247%" y="350.50"></text></g><g><title>left_subtree_height (row.py:85) (15 samples, 0.11%)</title><rect x="25.7747%" y="356" width="0.1071%" height="15" fill="rgb(215,133,35)" fg:x="3610" fg:w="15"/><text x="26.0247%" y="366.50"></text></g><g><title>left_child (row.py:81) (15 samples, 0.11%)</title><rect x="25.7747%" y="372" width="0.1071%" height="15" fill="rgb(213,28,5)" fg:x="3610" fg:w="15"/><text x="26.0247%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="25.8818%" y="372" width="0.1428%" height="15" fill="rgb(215,77,49)" fg:x="3625" fg:w="20"/><text x="26.1318%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="26.0317%" y="372" width="0.1928%" height="15" fill="rgb(248,100,22)" fg:x="3646" fg:w="27"/><text x="26.2817%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (52 samples, 0.37%)</title><rect x="25.8818%" y="356" width="0.3713%" height="15" fill="rgb(208,67,9)" fg:x="3625" fg:w="52"/><text x="26.1318%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="26.2745%" y="372" width="0.1642%" height="15" fill="rgb(219,133,21)" fg:x="3680" fg:w="23"/><text x="26.5245%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="26.4387%" y="372" width="0.2142%" height="15" fill="rgb(246,46,29)" fg:x="3703" fg:w="30"/><text x="26.6887%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (67 samples, 0.48%)</title><rect x="26.2745%" y="356" width="0.4784%" height="15" fill="rgb(246,185,52)" fg:x="3680" fg:w="67"/><text x="26.5245%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (135 samples, 0.96%)</title><rect x="25.8818%" y="340" width="0.9639%" height="15" fill="rgb(252,136,11)" fg:x="3625" fg:w="135"/><text x="26.1318%" y="350.50"></text></g><g><title>insert (binary_tree.py:95) (25 samples, 0.18%)</title><rect x="26.8813%" y="340" width="0.1785%" height="15" fill="rgb(219,138,53)" fg:x="3765" fg:w="25"/><text x="27.1313%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (463 samples, 3.31%)</title><rect x="23.8112%" y="324" width="3.3057%" height="15" fill="rgb(211,51,23)" fg:x="3335" fg:w="463"/><text x="24.0612%" y="334.50">ins..</text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="27.2669%" y="404" width="0.1142%" height="15" fill="rgb(247,221,28)" fg:x="3819" fg:w="16"/><text x="27.5169%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (22 samples, 0.16%)</title><rect x="27.3883%" y="404" width="0.1571%" height="15" fill="rgb(251,222,45)" fg:x="3836" fg:w="22"/><text x="27.6383%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (47 samples, 0.34%)</title><rect x="27.2669%" y="388" width="0.3356%" height="15" fill="rgb(217,162,53)" fg:x="3819" fg:w="47"/><text x="27.5169%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="27.6096%" y="404" width="0.1714%" height="15" fill="rgb(229,93,14)" fg:x="3867" fg:w="24"/><text x="27.8596%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (30 samples, 0.21%)</title><rect x="27.6096%" y="388" width="0.2142%" height="15" fill="rgb(209,67,49)" fg:x="3867" fg:w="30"/><text x="27.8596%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (84 samples, 0.60%)</title><rect x="27.2669%" y="372" width="0.5997%" height="15" fill="rgb(213,87,29)" fg:x="3819" fg:w="84"/><text x="27.5169%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (27 samples, 0.19%)</title><rect x="27.8952%" y="388" width="0.1928%" height="15" fill="rgb(205,151,52)" fg:x="3907" fg:w="27"/><text x="28.1452%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="28.1022%" y="404" width="0.1357%" height="15" fill="rgb(253,215,39)" fg:x="3936" fg:w="19"/><text x="28.3522%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="28.2450%" y="404" width="0.1214%" height="15" fill="rgb(221,220,41)" fg:x="3956" fg:w="17"/><text x="28.4950%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="28.1022%" y="388" width="0.2927%" height="15" fill="rgb(218,133,21)" fg:x="3936" fg:w="41"/><text x="28.3522%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (74 samples, 0.53%)</title><rect x="27.8952%" y="372" width="0.5283%" height="15" fill="rgb(221,193,43)" fg:x="3907" fg:w="74"/><text x="28.1452%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (172 samples, 1.23%)</title><rect x="27.2669%" y="356" width="1.2280%" height="15" fill="rgb(240,128,52)" fg:x="3819" fg:w="172"/><text x="27.5169%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="28.5235%" y="404" width="0.1642%" height="15" fill="rgb(253,114,12)" fg:x="3995" fg:w="23"/><text x="28.7735%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="28.5235%" y="388" width="0.2071%" height="15" fill="rgb(215,223,47)" fg:x="3995" fg:w="29"/><text x="28.7735%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (20 samples, 0.14%)</title><rect x="28.7448%" y="388" width="0.1428%" height="15" fill="rgb(248,225,23)" fg:x="4026" fg:w="20"/><text x="28.9948%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (54 samples, 0.39%)</title><rect x="28.5235%" y="372" width="0.3855%" height="15" fill="rgb(250,108,0)" fg:x="3995" fg:w="54"/><text x="28.7735%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="28.9162%" y="388" width="0.1499%" height="15" fill="rgb(228,208,7)" fg:x="4050" fg:w="21"/><text x="29.1662%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (43 samples, 0.31%)</title><rect x="28.9162%" y="372" width="0.3070%" height="15" fill="rgb(244,45,10)" fg:x="4050" fg:w="43"/><text x="29.1662%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (108 samples, 0.77%)</title><rect x="28.5164%" y="356" width="0.7711%" height="15" fill="rgb(207,125,25)" fg:x="3994" fg:w="108"/><text x="28.7664%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (18 samples, 0.13%)</title><rect x="29.3303%" y="356" width="0.1285%" height="15" fill="rgb(210,195,18)" fg:x="4108" fg:w="18"/><text x="29.5803%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (316 samples, 2.26%)</title><rect x="27.2669%" y="340" width="2.2562%" height="15" fill="rgb(249,80,12)" fg:x="3819" fg:w="316"/><text x="27.5169%" y="350.50">i..</text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="29.5516%" y="404" width="0.2142%" height="15" fill="rgb(221,65,9)" fg:x="4139" fg:w="30"/><text x="29.8016%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (43 samples, 0.31%)</title><rect x="29.5516%" y="388" width="0.3070%" height="15" fill="rgb(235,49,36)" fg:x="4139" fg:w="43"/><text x="29.8016%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="29.9300%" y="404" width="0.1357%" height="15" fill="rgb(225,32,20)" fg:x="4192" fg:w="19"/><text x="30.1800%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (28 samples, 0.20%)</title><rect x="29.8729%" y="388" width="0.1999%" height="15" fill="rgb(215,141,46)" fg:x="4184" fg:w="28"/><text x="30.1229%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (81 samples, 0.58%)</title><rect x="29.5516%" y="372" width="0.5783%" height="15" fill="rgb(250,160,47)" fg:x="4139" fg:w="81"/><text x="29.8016%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (40 samples, 0.29%)</title><rect x="30.1371%" y="372" width="0.2856%" height="15" fill="rgb(216,222,40)" fg:x="4221" fg:w="40"/><text x="30.3871%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="30.2299%" y="388" width="0.1928%" height="15" fill="rgb(234,217,39)" fg:x="4234" fg:w="27"/><text x="30.4799%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (138 samples, 0.99%)</title><rect x="29.5516%" y="356" width="0.9853%" height="15" fill="rgb(207,178,40)" fg:x="4139" fg:w="138"/><text x="29.8016%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="30.5583%" y="404" width="0.1357%" height="15" fill="rgb(221,136,13)" fg:x="4280" fg:w="19"/><text x="30.8083%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (28 samples, 0.20%)</title><rect x="30.5583%" y="388" width="0.1999%" height="15" fill="rgb(249,199,10)" fg:x="4280" fg:w="28"/><text x="30.8083%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="30.8511%" y="404" width="0.1499%" height="15" fill="rgb(249,222,13)" fg:x="4321" fg:w="21"/><text x="31.1011%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="30.7725%" y="388" width="0.2428%" height="15" fill="rgb(244,185,38)" fg:x="4310" fg:w="34"/><text x="31.0225%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (71 samples, 0.51%)</title><rect x="30.5583%" y="372" width="0.5069%" height="15" fill="rgb(236,202,9)" fg:x="4280" fg:w="71"/><text x="30.8083%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (26 samples, 0.19%)</title><rect x="31.0867%" y="404" width="0.1856%" height="15" fill="rgb(250,229,37)" fg:x="4354" fg:w="26"/><text x="31.3367%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (39 samples, 0.28%)</title><rect x="31.0867%" y="388" width="0.2785%" height="15" fill="rgb(206,174,23)" fg:x="4354" fg:w="39"/><text x="31.3367%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="31.3723%" y="404" width="0.1071%" height="15" fill="rgb(211,33,43)" fg:x="4394" fg:w="15"/><text x="31.6223%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (25 samples, 0.18%)</title><rect x="31.4794%" y="404" width="0.1785%" height="15" fill="rgb(245,58,50)" fg:x="4409" fg:w="25"/><text x="31.7294%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (85 samples, 0.61%)</title><rect x="31.0867%" y="372" width="0.6069%" height="15" fill="rgb(244,68,36)" fg:x="4354" fg:w="85"/><text x="31.3367%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (45 samples, 0.32%)</title><rect x="31.3723%" y="388" width="0.3213%" height="15" fill="rgb(232,229,15)" fg:x="4394" fg:w="45"/><text x="31.6223%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (170 samples, 1.21%)</title><rect x="30.5583%" y="356" width="1.2138%" height="15" fill="rgb(254,30,23)" fg:x="4280" fg:w="170"/><text x="30.8083%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (16 samples, 0.11%)</title><rect x="31.8578%" y="356" width="0.1142%" height="15" fill="rgb(235,160,14)" fg:x="4462" fg:w="16"/><text x="32.1078%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (340 samples, 2.43%)</title><rect x="29.5516%" y="340" width="2.4275%" height="15" fill="rgb(212,155,44)" fg:x="4139" fg:w="340"/><text x="29.8016%" y="350.50">in..</text></g><g><title>insert (binary_tree.py:95) (20 samples, 0.14%)</title><rect x="32.0934%" y="340" width="0.1428%" height="15" fill="rgb(226,2,50)" fg:x="4495" fg:w="20"/><text x="32.3434%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (709 samples, 5.06%)</title><rect x="27.2526%" y="324" width="5.0621%" height="15" fill="rgb(234,177,6)" fg:x="3817" fg:w="709"/><text x="27.5026%" y="334.50">insert..</text></g><g><title>fetch_row (row.py:160) (15 samples, 0.11%)</title><rect x="32.4075%" y="372" width="0.1071%" height="15" fill="rgb(217,24,9)" fg:x="4539" fg:w="15"/><text x="32.6575%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (20 samples, 0.14%)</title><rect x="32.3861%" y="340" width="0.1428%" height="15" fill="rgb(220,13,46)" fg:x="4536" fg:w="20"/><text x="32.6361%" y="350.50"></text></g><g><title>left_child (row.py:81) (20 samples, 0.14%)</title><rect x="32.3861%" y="356" width="0.1428%" height="15" fill="rgb(239,221,27)" fg:x="4536" fg:w="20"/><text x="32.6361%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (17 samples, 0.12%)</title><rect x="32.5860%" y="372" width="0.1214%" height="15" fill="rgb(222,198,25)" fg:x="4564" fg:w="17"/><text x="32.8360%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (51 samples, 0.36%)</title><rect x="32.3861%" y="324" width="0.3641%" height="15" fill="rgb(211,99,13)" fg:x="4536" fg:w="51"/><text x="32.6361%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (31 samples, 0.22%)</title><rect x="32.5289%" y="340" width="0.2213%" height="15" fill="rgb(232,111,31)" fg:x="4556" fg:w="31"/><text x="32.7789%" y="350.50"></text></g><g><title>right_child (row.py:77) (31 samples, 0.22%)</title><rect x="32.5289%" y="356" width="0.2213%" height="15" fill="rgb(245,82,37)" fg:x="4556" fg:w="31"/><text x="32.7789%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (1,268 samples, 9.05%)</title><rect x="23.8041%" y="308" width="9.0533%" height="15" fill="rgb(227,149,46)" fg:x="3334" fg:w="1268"/><text x="24.0541%" y="318.50">insert (binar..</text></g><g><title>right_child (row.py:77) (15 samples, 0.11%)</title><rect x="32.7502%" y="324" width="0.1071%" height="15" fill="rgb(218,36,50)" fg:x="4587" fg:w="15"/><text x="33.0002%" y="334.50"></text></g><g><title>fetch_row (row.py:160) (20 samples, 0.14%)</title><rect x="32.9216%" y="356" width="0.1428%" height="15" fill="rgb(226,80,48)" fg:x="4611" fg:w="20"/><text x="33.1716%" y="366.50"></text></g><g><title>insert (binary_tree.py:92) (31 samples, 0.22%)</title><rect x="32.8573%" y="308" width="0.2213%" height="15" fill="rgb(238,224,15)" fg:x="4602" fg:w="31"/><text x="33.1073%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (30 samples, 0.21%)</title><rect x="32.8645%" y="324" width="0.2142%" height="15" fill="rgb(241,136,10)" fg:x="4603" fg:w="30"/><text x="33.1145%" y="334.50"></text></g><g><title>right_child (row.py:77) (28 samples, 0.20%)</title><rect x="32.8788%" y="340" width="0.1999%" height="15" fill="rgb(208,32,45)" fg:x="4605" fg:w="28"/><text x="33.1288%" y="350.50"></text></g><g><title>left_subtree_height (row.py:85) (43 samples, 0.31%)</title><rect x="33.1287%" y="324" width="0.3070%" height="15" fill="rgb(207,135,9)" fg:x="4640" fg:w="43"/><text x="33.3787%" y="334.50"></text></g><g><title>left_child (row.py:81) (38 samples, 0.27%)</title><rect x="33.1644%" y="340" width="0.2713%" height="15" fill="rgb(206,86,44)" fg:x="4645" fg:w="38"/><text x="33.4144%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (28 samples, 0.20%)</title><rect x="33.2358%" y="356" width="0.1999%" height="15" fill="rgb(245,177,15)" fg:x="4655" fg:w="28"/><text x="33.4858%" y="366.50"></text></g><g><title>deserialize (row.py:147) (18 samples, 0.13%)</title><rect x="33.3072%" y="372" width="0.1285%" height="15" fill="rgb(206,64,50)" fg:x="4665" fg:w="18"/><text x="33.5572%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (37 samples, 0.26%)</title><rect x="33.5142%" y="356" width="0.2642%" height="15" fill="rgb(234,36,40)" fg:x="4694" fg:w="37"/><text x="33.7642%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (100 samples, 0.71%)</title><rect x="33.1215%" y="308" width="0.7140%" height="15" fill="rgb(213,64,8)" fg:x="4639" fg:w="100"/><text x="33.3715%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (56 samples, 0.40%)</title><rect x="33.4357%" y="324" width="0.3998%" height="15" fill="rgb(210,75,36)" fg:x="4683" fg:w="56"/><text x="33.6857%" y="334.50"></text></g><g><title>right_child (row.py:77) (53 samples, 0.38%)</title><rect x="33.4571%" y="340" width="0.3784%" height="15" fill="rgb(229,88,21)" fg:x="4686" fg:w="53"/><text x="33.7071%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (2,420 samples, 17.28%)</title><rect x="16.6429%" y="292" width="17.2783%" height="15" fill="rgb(252,204,47)" fg:x="2331" fg:w="2420"/><text x="16.8929%" y="302.50">insert (binary_tree.py:89)</text></g><g><title>fetch_row (row.py:160) (36 samples, 0.26%)</title><rect x="33.9640%" y="340" width="0.2570%" height="15" fill="rgb(208,77,27)" fg:x="4757" fg:w="36"/><text x="34.2140%" y="350.50"></text></g><g><title>insert (binary_tree.py:92) (50 samples, 0.36%)</title><rect x="33.9212%" y="292" width="0.3570%" height="15" fill="rgb(221,76,26)" fg:x="4751" fg:w="50"/><text x="34.1712%" y="302.50"></text></g><g><title>right_subtree_height (row.py:89) (50 samples, 0.36%)</title><rect x="33.9212%" y="308" width="0.3570%" height="15" fill="rgb(225,139,18)" fg:x="4751" fg:w="50"/><text x="34.1712%" y="318.50"></text></g><g><title>right_child (row.py:77) (50 samples, 0.36%)</title><rect x="33.9212%" y="324" width="0.3570%" height="15" fill="rgb(230,137,11)" fg:x="4751" fg:w="50"/><text x="34.1712%" y="334.50"></text></g><g><title>deserialize (row.py:147) (30 samples, 0.21%)</title><rect x="34.6494%" y="356" width="0.2142%" height="15" fill="rgb(212,28,1)" fg:x="4853" fg:w="30"/><text x="34.8994%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (65 samples, 0.46%)</title><rect x="34.4067%" y="340" width="0.4641%" height="15" fill="rgb(248,164,17)" fg:x="4819" fg:w="65"/><text x="34.6567%" y="350.50"></text></g><g><title>left_subtree_height (row.py:85) (85 samples, 0.61%)</title><rect x="34.3281%" y="308" width="0.6069%" height="15" fill="rgb(222,171,42)" fg:x="4808" fg:w="85"/><text x="34.5781%" y="318.50"></text></g><g><title>left_child (row.py:81) (82 samples, 0.59%)</title><rect x="34.3496%" y="324" width="0.5855%" height="15" fill="rgb(243,84,45)" fg:x="4811" fg:w="82"/><text x="34.5996%" y="334.50"></text></g><g><title>fetch_row (row.py:158) (18 samples, 0.13%)</title><rect x="34.9707%" y="340" width="0.1285%" height="15" fill="rgb(252,49,23)" fg:x="4898" fg:w="18"/><text x="35.2207%" y="350.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (17 samples, 0.12%)</title><rect x="34.9779%" y="356" width="0.1214%" height="15" fill="rgb(215,19,7)" fg:x="4899" fg:w="17"/><text x="35.2279%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (84 samples, 0.60%)</title><rect x="35.1064%" y="340" width="0.5997%" height="15" fill="rgb(238,81,41)" fg:x="4917" fg:w="84"/><text x="35.3564%" y="350.50"></text></g><g><title>deserialize (row.py:147) (27 samples, 0.19%)</title><rect x="35.5134%" y="356" width="0.1928%" height="15" fill="rgb(210,199,37)" fg:x="4974" fg:w="27"/><text x="35.7634%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (207 samples, 1.48%)</title><rect x="34.2996%" y="292" width="1.4779%" height="15" fill="rgb(244,192,49)" fg:x="4804" fg:w="207"/><text x="34.5496%" y="302.50"></text></g><g><title>right_subtree_height (row.py:89) (118 samples, 0.84%)</title><rect x="34.9350%" y="308" width="0.8425%" height="15" fill="rgb(226,211,11)" fg:x="4893" fg:w="118"/><text x="35.1850%" y="318.50"></text></g><g><title>right_child (row.py:77) (116 samples, 0.83%)</title><rect x="34.9493%" y="324" width="0.8282%" height="15" fill="rgb(236,162,54)" fg:x="4895" fg:w="116"/><text x="35.1993%" y="334.50"></text></g><g><title>fetch_row (row.py:158) (15 samples, 0.11%)</title><rect x="35.7918%" y="308" width="0.1071%" height="15" fill="rgb(220,229,9)" fg:x="5013" fg:w="15"/><text x="36.0418%" y="318.50"></text></g><g><title>fetch_row (row.py:160) (30 samples, 0.21%)</title><rect x="35.8989%" y="308" width="0.2142%" height="15" fill="rgb(250,87,22)" fg:x="5028" fg:w="30"/><text x="36.1489%" y="318.50"></text></g><g><title>insert (binary_tree.py:82) (4,933 samples, 35.22%)</title><rect x="0.9710%" y="276" width="35.2206%" height="15" fill="rgb(239,43,17)" fg:x="136" fg:w="4933"/><text x="1.2210%" y="286.50">insert (binary_tree.py:82)</text></g><g><title>left_child (row.py:81) (58 samples, 0.41%)</title><rect x="35.7775%" y="292" width="0.4141%" height="15" fill="rgb(231,177,25)" fg:x="5011" fg:w="58"/><text x="36.0275%" y="302.50"></text></g><g><title>fetch_row (row.py:158) (17 samples, 0.12%)</title><rect x="36.2702%" y="324" width="0.1214%" height="15" fill="rgb(219,179,1)" fg:x="5080" fg:w="17"/><text x="36.5202%" y="334.50"></text></g><g><title>deserialize (row.py:147) (16 samples, 0.11%)</title><rect x="36.6914%" y="340" width="0.1142%" height="15" fill="rgb(238,219,53)" fg:x="5139" fg:w="16"/><text x="36.9414%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (59 samples, 0.42%)</title><rect x="36.4130%" y="324" width="0.4212%" height="15" fill="rgb(232,167,36)" fg:x="5100" fg:w="59"/><text x="36.6630%" y="334.50"></text></g><g><title>insert (binary_tree.py:86) (99 samples, 0.71%)</title><rect x="36.1916%" y="276" width="0.7068%" height="15" fill="rgb(244,19,51)" fg:x="5069" fg:w="99"/><text x="36.4416%" y="286.50"></text></g><g><title>left_subtree_height (row.py:85) (93 samples, 0.66%)</title><rect x="36.2345%" y="292" width="0.6640%" height="15" fill="rgb(224,6,22)" fg:x="5075" fg:w="93"/><text x="36.4845%" y="302.50"></text></g><g><title>left_child (row.py:81) (89 samples, 0.64%)</title><rect x="36.2630%" y="308" width="0.6354%" height="15" fill="rgb(224,145,5)" fg:x="5079" fg:w="89"/><text x="36.5130%" y="318.50"></text></g><g><title>insert (binary_tree.py:87) (22 samples, 0.16%)</title><rect x="36.8985%" y="276" width="0.1571%" height="15" fill="rgb(234,130,49)" fg:x="5168" fg:w="22"/><text x="37.1485%" y="286.50"></text></g><g><title>write_to_page (row.py:111) (22 samples, 0.16%)</title><rect x="36.8985%" y="292" width="0.1571%" height="15" fill="rgb(254,6,2)" fg:x="5168" fg:w="22"/><text x="37.1485%" y="302.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="37.2269%" y="404" width="0.1428%" height="15" fill="rgb(208,96,46)" fg:x="5214" fg:w="20"/><text x="37.4769%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="37.3840%" y="404" width="0.1642%" height="15" fill="rgb(239,3,39)" fg:x="5236" fg:w="23"/><text x="37.6340%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (47 samples, 0.34%)</title><rect x="37.2269%" y="388" width="0.3356%" height="15" fill="rgb(233,210,1)" fg:x="5214" fg:w="47"/><text x="37.4769%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (24 samples, 0.17%)</title><rect x="37.5839%" y="388" width="0.1714%" height="15" fill="rgb(244,137,37)" fg:x="5264" fg:w="24"/><text x="37.8339%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (80 samples, 0.57%)</title><rect x="37.2269%" y="372" width="0.5712%" height="15" fill="rgb(240,136,2)" fg:x="5214" fg:w="80"/><text x="37.4769%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="37.7981%" y="388" width="0.2142%" height="15" fill="rgb(239,18,37)" fg:x="5294" fg:w="30"/><text x="38.0481%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (24 samples, 0.17%)</title><rect x="38.0837%" y="404" width="0.1714%" height="15" fill="rgb(218,185,22)" fg:x="5334" fg:w="24"/><text x="38.3337%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="38.0194%" y="388" width="0.2428%" height="15" fill="rgb(225,218,4)" fg:x="5325" fg:w="34"/><text x="38.2694%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (69 samples, 0.49%)</title><rect x="37.7981%" y="372" width="0.4926%" height="15" fill="rgb(230,182,32)" fg:x="5294" fg:w="69"/><text x="38.0481%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (164 samples, 1.17%)</title><rect x="37.2055%" y="356" width="1.1709%" height="15" fill="rgb(242,56,43)" fg:x="5211" fg:w="164"/><text x="37.4555%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="38.5478%" y="420" width="0.1142%" height="15" fill="rgb(233,99,24)" fg:x="5399" fg:w="16"/><text x="38.7978%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (35 samples, 0.25%)</title><rect x="38.4478%" y="404" width="0.2499%" height="15" fill="rgb(234,209,42)" fg:x="5385" fg:w="35"/><text x="38.6978%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (53 samples, 0.38%)</title><rect x="38.4478%" y="388" width="0.3784%" height="15" fill="rgb(227,7,12)" fg:x="5385" fg:w="53"/><text x="38.6978%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (25 samples, 0.18%)</title><rect x="38.8262%" y="404" width="0.1785%" height="15" fill="rgb(245,203,43)" fg:x="5438" fg:w="25"/><text x="39.0762%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="38.8762%" y="420" width="0.1285%" height="15" fill="rgb(238,205,33)" fg:x="5445" fg:w="18"/><text x="39.1262%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="39.0047%" y="404" width="0.1642%" height="15" fill="rgb(231,56,7)" fg:x="5463" fg:w="23"/><text x="39.2547%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (49 samples, 0.35%)</title><rect x="38.8262%" y="388" width="0.3499%" height="15" fill="rgb(244,186,29)" fg:x="5438" fg:w="49"/><text x="39.0762%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (113 samples, 0.81%)</title><rect x="38.4407%" y="372" width="0.8068%" height="15" fill="rgb(234,111,31)" fg:x="5384" fg:w="113"/><text x="38.6907%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="39.2832%" y="420" width="0.1071%" height="15" fill="rgb(241,149,10)" fg:x="5502" fg:w="15"/><text x="39.5332%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="39.2832%" y="404" width="0.1285%" height="15" fill="rgb(249,206,44)" fg:x="5502" fg:w="18"/><text x="39.5332%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="39.4117%" y="404" width="0.1499%" height="15" fill="rgb(251,153,30)" fg:x="5520" fg:w="21"/><text x="39.6617%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (41 samples, 0.29%)</title><rect x="39.2832%" y="388" width="0.2927%" height="15" fill="rgb(239,152,38)" fg:x="5502" fg:w="41"/><text x="39.5332%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="39.5759%" y="388" width="0.1357%" height="15" fill="rgb(249,139,47)" fg:x="5543" fg:w="19"/><text x="39.8259%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (65 samples, 0.46%)</title><rect x="39.2760%" y="372" width="0.4641%" height="15" fill="rgb(244,64,35)" fg:x="5501" fg:w="65"/><text x="39.5260%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (195 samples, 1.39%)</title><rect x="38.4407%" y="356" width="1.3923%" height="15" fill="rgb(216,46,15)" fg:x="5384" fg:w="195"/><text x="38.6907%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (16 samples, 0.11%)</title><rect x="39.9186%" y="356" width="0.1142%" height="15" fill="rgb(250,74,19)" fg:x="5591" fg:w="16"/><text x="40.1686%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (400 samples, 2.86%)</title><rect x="37.2055%" y="340" width="2.8559%" height="15" fill="rgb(249,42,33)" fg:x="5211" fg:w="400"/><text x="37.4555%" y="350.50">in..</text></g><g><title>insert (binary_tree.py:86) (15 samples, 0.11%)</title><rect x="40.0614%" y="340" width="0.1071%" height="15" fill="rgb(242,149,17)" fg:x="5611" fg:w="15"/><text x="40.3114%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="40.2685%" y="404" width="0.1357%" height="15" fill="rgb(244,29,21)" fg:x="5640" fg:w="19"/><text x="40.5185%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (31 samples, 0.22%)</title><rect x="40.1971%" y="388" width="0.2213%" height="15" fill="rgb(220,130,37)" fg:x="5630" fg:w="31"/><text x="40.4471%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (29 samples, 0.21%)</title><rect x="40.4255%" y="388" width="0.2071%" height="15" fill="rgb(211,67,2)" fg:x="5662" fg:w="29"/><text x="40.6755%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (72 samples, 0.51%)</title><rect x="40.1971%" y="372" width="0.5141%" height="15" fill="rgb(235,68,52)" fg:x="5630" fg:w="72"/><text x="40.4471%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="40.8182%" y="420" width="0.1071%" height="15" fill="rgb(246,142,3)" fg:x="5717" fg:w="15"/><text x="41.0682%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (26 samples, 0.19%)</title><rect x="40.8182%" y="404" width="0.1856%" height="15" fill="rgb(241,25,7)" fg:x="5717" fg:w="26"/><text x="41.0682%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (41 samples, 0.29%)</title><rect x="40.7325%" y="388" width="0.2927%" height="15" fill="rgb(242,119,39)" fg:x="5705" fg:w="41"/><text x="40.9825%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (24 samples, 0.17%)</title><rect x="41.0538%" y="388" width="0.1714%" height="15" fill="rgb(241,98,45)" fg:x="5750" fg:w="24"/><text x="41.3038%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (78 samples, 0.56%)</title><rect x="40.7254%" y="372" width="0.5569%" height="15" fill="rgb(254,28,30)" fg:x="5704" fg:w="78"/><text x="40.9754%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (161 samples, 1.15%)</title><rect x="40.1971%" y="356" width="1.1495%" height="15" fill="rgb(241,142,54)" fg:x="5630" fg:w="161"/><text x="40.4471%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="41.5036%" y="404" width="0.1499%" height="15" fill="rgb(222,85,15)" fg:x="5813" fg:w="21"/><text x="41.7536%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (34 samples, 0.24%)</title><rect x="41.4394%" y="388" width="0.2428%" height="15" fill="rgb(210,85,47)" fg:x="5804" fg:w="34"/><text x="41.6894%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="41.6964%" y="404" width="0.1571%" height="15" fill="rgb(224,206,25)" fg:x="5840" fg:w="22"/><text x="41.9464%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (40 samples, 0.29%)</title><rect x="41.6964%" y="388" width="0.2856%" height="15" fill="rgb(243,201,19)" fg:x="5840" fg:w="40"/><text x="41.9464%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (82 samples, 0.59%)</title><rect x="41.4394%" y="372" width="0.5855%" height="15" fill="rgb(236,59,4)" fg:x="5804" fg:w="82"/><text x="41.6894%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (28 samples, 0.20%)</title><rect x="42.0248%" y="388" width="0.1999%" height="15" fill="rgb(254,179,45)" fg:x="5886" fg:w="28"/><text x="42.2748%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (28 samples, 0.20%)</title><rect x="42.2248%" y="388" width="0.1999%" height="15" fill="rgb(226,14,10)" fg:x="5914" fg:w="28"/><text x="42.4748%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (58 samples, 0.41%)</title><rect x="42.0248%" y="372" width="0.4141%" height="15" fill="rgb(244,27,41)" fg:x="5886" fg:w="58"/><text x="42.2748%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (151 samples, 1.08%)</title><rect x="41.4394%" y="356" width="1.0781%" height="15" fill="rgb(235,35,32)" fg:x="5804" fg:w="151"/><text x="41.6894%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (18 samples, 0.13%)</title><rect x="42.5532%" y="356" width="0.1285%" height="15" fill="rgb(218,68,31)" fg:x="5960" fg:w="18"/><text x="42.8032%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (354 samples, 2.53%)</title><rect x="40.1828%" y="340" width="2.5275%" height="15" fill="rgb(207,120,37)" fg:x="5628" fg:w="354"/><text x="40.4328%" y="350.50">in..</text></g><g><title>left_subtree_height (row.py:85) (17 samples, 0.12%)</title><rect x="42.7745%" y="356" width="0.1214%" height="15" fill="rgb(227,98,0)" fg:x="5991" fg:w="17"/><text x="43.0245%" y="366.50"></text></g><g><title>left_child (row.py:81) (16 samples, 0.11%)</title><rect x="42.7817%" y="372" width="0.1142%" height="15" fill="rgb(207,7,3)" fg:x="5992" fg:w="16"/><text x="43.0317%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (35 samples, 0.25%)</title><rect x="42.7745%" y="340" width="0.2499%" height="15" fill="rgb(206,98,19)" fg:x="5991" fg:w="35"/><text x="43.0245%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (18 samples, 0.13%)</title><rect x="42.8959%" y="356" width="0.1285%" height="15" fill="rgb(217,5,26)" fg:x="6008" fg:w="18"/><text x="43.1459%" y="366.50"></text></g><g><title>right_child (row.py:77) (18 samples, 0.13%)</title><rect x="42.8959%" y="372" width="0.1285%" height="15" fill="rgb(235,190,38)" fg:x="6008" fg:w="18"/><text x="43.1459%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (17 samples, 0.12%)</title><rect x="42.9030%" y="388" width="0.1214%" height="15" fill="rgb(247,86,24)" fg:x="6009" fg:w="17"/><text x="43.1530%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (824 samples, 5.88%)</title><rect x="37.2055%" y="324" width="5.8832%" height="15" fill="rgb(205,101,16)" fg:x="5211" fg:w="824"/><text x="37.4555%" y="334.50">insert ..</text></g><g><title>insert (binary_tree.py:86) (19 samples, 0.14%)</title><rect x="43.0887%" y="324" width="0.1357%" height="15" fill="rgb(246,168,33)" fg:x="6035" fg:w="19"/><text x="43.3387%" y="334.50"></text></g><g><title>left_subtree_height (row.py:85) (18 samples, 0.13%)</title><rect x="43.0958%" y="340" width="0.1285%" height="15" fill="rgb(231,114,1)" fg:x="6036" fg:w="18"/><text x="43.3458%" y="350.50"></text></g><g><title>left_child (row.py:81) (18 samples, 0.13%)</title><rect x="43.0958%" y="356" width="0.1285%" height="15" fill="rgb(207,184,53)" fg:x="6036" fg:w="18"/><text x="43.3458%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="43.2600%" y="404" width="0.1285%" height="15" fill="rgb(224,95,51)" fg:x="6059" fg:w="18"/><text x="43.5100%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (20 samples, 0.14%)</title><rect x="43.3885%" y="404" width="0.1428%" height="15" fill="rgb(212,188,45)" fg:x="6077" fg:w="20"/><text x="43.6385%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (43 samples, 0.31%)</title><rect x="43.2600%" y="388" width="0.3070%" height="15" fill="rgb(223,154,38)" fg:x="6059" fg:w="43"/><text x="43.5100%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="43.5742%" y="404" width="0.1428%" height="15" fill="rgb(251,22,52)" fg:x="6103" fg:w="20"/><text x="43.8242%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="43.7170%" y="420" width="0.1071%" height="15" fill="rgb(229,209,22)" fg:x="6123" fg:w="15"/><text x="43.9670%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="43.7170%" y="404" width="0.1642%" height="15" fill="rgb(234,138,34)" fg:x="6123" fg:w="23"/><text x="43.9670%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (45 samples, 0.32%)</title><rect x="43.5742%" y="388" width="0.3213%" height="15" fill="rgb(212,95,11)" fg:x="6103" fg:w="45"/><text x="43.8242%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (105 samples, 0.75%)</title><rect x="43.2600%" y="372" width="0.7497%" height="15" fill="rgb(240,179,47)" fg:x="6059" fg:w="105"/><text x="43.5100%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (27 samples, 0.19%)</title><rect x="44.0383%" y="388" width="0.1928%" height="15" fill="rgb(240,163,11)" fg:x="6168" fg:w="27"/><text x="44.2883%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="44.2310%" y="404" width="0.1357%" height="15" fill="rgb(236,37,12)" fg:x="6195" fg:w="19"/><text x="44.4810%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (32 samples, 0.23%)</title><rect x="44.2310%" y="388" width="0.2285%" height="15" fill="rgb(232,164,16)" fg:x="6195" fg:w="32"/><text x="44.4810%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (73 samples, 0.52%)</title><rect x="44.0383%" y="372" width="0.5212%" height="15" fill="rgb(244,205,15)" fg:x="6168" fg:w="73"/><text x="44.2883%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (202 samples, 1.44%)</title><rect x="43.2529%" y="356" width="1.4422%" height="15" fill="rgb(223,117,47)" fg:x="6058" fg:w="202"/><text x="43.5029%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="44.7522%" y="404" width="0.1642%" height="15" fill="rgb(244,107,35)" fg:x="6268" fg:w="23"/><text x="45.0022%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="44.9379%" y="404" width="0.1071%" height="15" fill="rgb(205,140,8)" fg:x="6294" fg:w="15"/><text x="45.1879%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (47 samples, 0.34%)</title><rect x="44.7522%" y="388" width="0.3356%" height="15" fill="rgb(228,84,46)" fg:x="6268" fg:w="47"/><text x="45.0022%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="45.1021%" y="404" width="0.1071%" height="15" fill="rgb(254,188,9)" fg:x="6317" fg:w="15"/><text x="45.3521%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="45.2092%" y="404" width="0.1142%" height="15" fill="rgb(206,112,54)" fg:x="6332" fg:w="16"/><text x="45.4592%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="45.1021%" y="388" width="0.2428%" height="15" fill="rgb(216,84,49)" fg:x="6317" fg:w="34"/><text x="45.3521%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (88 samples, 0.63%)</title><rect x="44.7522%" y="372" width="0.6283%" height="15" fill="rgb(214,194,35)" fg:x="6268" fg:w="88"/><text x="45.0022%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="45.3806%" y="420" width="0.1142%" height="15" fill="rgb(249,28,3)" fg:x="6356" fg:w="16"/><text x="45.6306%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (25 samples, 0.18%)</title><rect x="45.3806%" y="404" width="0.1785%" height="15" fill="rgb(222,56,52)" fg:x="6356" fg:w="25"/><text x="45.6306%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="45.5733%" y="404" width="0.1214%" height="15" fill="rgb(245,217,50)" fg:x="6383" fg:w="17"/><text x="45.8233%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (46 samples, 0.33%)</title><rect x="45.3806%" y="388" width="0.3284%" height="15" fill="rgb(213,201,24)" fg:x="6356" fg:w="46"/><text x="45.6306%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="45.8161%" y="436" width="0.1142%" height="15" fill="rgb(248,116,28)" fg:x="6417" fg:w="16"/><text x="46.0661%" y="446.50"></text></g><g><title>insert (binary_tree.py:89) (22 samples, 0.16%)</title><rect x="45.8161%" y="420" width="0.1571%" height="15" fill="rgb(219,72,43)" fg:x="6417" fg:w="22"/><text x="46.0661%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (38 samples, 0.27%)</title><rect x="45.7161%" y="404" width="0.2713%" height="15" fill="rgb(209,138,14)" fg:x="6403" fg:w="38"/><text x="45.9661%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="45.9946%" y="404" width="0.1928%" height="15" fill="rgb(222,18,33)" fg:x="6442" fg:w="27"/><text x="46.2446%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (71 samples, 0.51%)</title><rect x="45.7161%" y="388" width="0.5069%" height="15" fill="rgb(213,199,7)" fg:x="6403" fg:w="71"/><text x="45.9661%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (132 samples, 0.94%)</title><rect x="45.3806%" y="372" width="0.9425%" height="15" fill="rgb(250,110,10)" fg:x="6356" fg:w="132"/><text x="45.6306%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (243 samples, 1.73%)</title><rect x="44.7451%" y="356" width="1.7350%" height="15" fill="rgb(248,123,6)" fg:x="6267" fg:w="243"/><text x="44.9951%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (18 samples, 0.13%)</title><rect x="46.5229%" y="356" width="0.1285%" height="15" fill="rgb(206,91,31)" fg:x="6516" fg:w="18"/><text x="46.7729%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (482 samples, 3.44%)</title><rect x="43.2458%" y="340" width="3.4414%" height="15" fill="rgb(211,154,13)" fg:x="6057" fg:w="482"/><text x="43.4958%" y="350.50">ins..</text></g><g><title>insert (binary_tree.py:86) (16 samples, 0.11%)</title><rect x="46.6871%" y="340" width="0.1142%" height="15" fill="rgb(225,148,7)" fg:x="6539" fg:w="16"/><text x="46.9371%" y="350.50"></text></g><g><title>left_subtree_height (row.py:85) (16 samples, 0.11%)</title><rect x="46.6871%" y="356" width="0.1142%" height="15" fill="rgb(220,160,43)" fg:x="6539" fg:w="16"/><text x="46.9371%" y="366.50"></text></g><g><title>left_child (row.py:81) (16 samples, 0.11%)</title><rect x="46.6871%" y="372" width="0.1142%" height="15" fill="rgb(213,52,39)" fg:x="6539" fg:w="16"/><text x="46.9371%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="46.8228%" y="404" width="0.1714%" height="15" fill="rgb(243,137,7)" fg:x="6558" fg:w="24"/><text x="47.0728%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (36 samples, 0.26%)</title><rect x="46.8228%" y="388" width="0.2570%" height="15" fill="rgb(230,79,13)" fg:x="6558" fg:w="36"/><text x="47.0728%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="47.1655%" y="404" width="0.1071%" height="15" fill="rgb(247,105,23)" fg:x="6606" fg:w="15"/><text x="47.4155%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (28 samples, 0.20%)</title><rect x="47.0870%" y="388" width="0.1999%" height="15" fill="rgb(223,179,41)" fg:x="6595" fg:w="28"/><text x="47.3370%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (74 samples, 0.53%)</title><rect x="46.8228%" y="372" width="0.5283%" height="15" fill="rgb(218,9,34)" fg:x="6558" fg:w="74"/><text x="47.0728%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="47.3940%" y="388" width="0.2071%" height="15" fill="rgb(222,106,8)" fg:x="6638" fg:w="29"/><text x="47.6440%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="47.6010%" y="388" width="0.2428%" height="15" fill="rgb(211,220,0)" fg:x="6667" fg:w="34"/><text x="47.8510%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (66 samples, 0.47%)</title><rect x="47.3940%" y="372" width="0.4712%" height="15" fill="rgb(229,52,16)" fg:x="6638" fg:w="66"/><text x="47.6440%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (162 samples, 1.16%)</title><rect x="46.8228%" y="356" width="1.1566%" height="15" fill="rgb(212,155,18)" fg:x="6558" fg:w="162"/><text x="47.0728%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="48.0366%" y="404" width="0.1428%" height="15" fill="rgb(242,21,14)" fg:x="6728" fg:w="20"/><text x="48.2866%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="48.1865%" y="404" width="0.1642%" height="15" fill="rgb(222,19,48)" fg:x="6749" fg:w="23"/><text x="48.4365%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="48.2365%" y="420" width="0.1142%" height="15" fill="rgb(232,45,27)" fg:x="6756" fg:w="16"/><text x="48.4865%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (49 samples, 0.35%)</title><rect x="48.0294%" y="388" width="0.3499%" height="15" fill="rgb(249,103,42)" fg:x="6727" fg:w="49"/><text x="48.2794%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (71 samples, 0.51%)</title><rect x="48.0294%" y="372" width="0.5069%" height="15" fill="rgb(246,81,33)" fg:x="6727" fg:w="71"/><text x="48.2794%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="48.5435%" y="404" width="0.1285%" height="15" fill="rgb(252,33,42)" fg:x="6799" fg:w="18"/><text x="48.7935%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="48.6791%" y="404" width="0.1499%" height="15" fill="rgb(209,212,41)" fg:x="6818" fg:w="21"/><text x="48.9291%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (43 samples, 0.31%)</title><rect x="48.5435%" y="388" width="0.3070%" height="15" fill="rgb(207,154,6)" fg:x="6799" fg:w="43"/><text x="48.7935%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="48.9790%" y="404" width="0.1499%" height="15" fill="rgb(223,64,47)" fg:x="6860" fg:w="21"/><text x="49.2290%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (37 samples, 0.26%)</title><rect x="48.8719%" y="388" width="0.2642%" height="15" fill="rgb(211,161,38)" fg:x="6845" fg:w="37"/><text x="49.1219%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (96 samples, 0.69%)</title><rect x="48.5435%" y="372" width="0.6854%" height="15" fill="rgb(219,138,40)" fg:x="6799" fg:w="96"/><text x="48.7935%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (185 samples, 1.32%)</title><rect x="48.0151%" y="356" width="1.3209%" height="15" fill="rgb(241,228,46)" fg:x="6725" fg:w="185"/><text x="48.2651%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (375 samples, 2.68%)</title><rect x="46.8085%" y="340" width="2.6774%" height="15" fill="rgb(223,209,38)" fg:x="6556" fg:w="375"/><text x="47.0585%" y="350.50">in..</text></g><g><title>left_subtree_height (row.py:85) (15 samples, 0.11%)</title><rect x="49.5716%" y="356" width="0.1071%" height="15" fill="rgb(236,164,45)" fg:x="6943" fg:w="15"/><text x="49.8216%" y="366.50"></text></g><g><title>left_child (row.py:81) (15 samples, 0.11%)</title><rect x="49.5716%" y="372" width="0.1071%" height="15" fill="rgb(231,15,5)" fg:x="6943" fg:w="15"/><text x="49.8216%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (38 samples, 0.27%)</title><rect x="49.5716%" y="340" width="0.2713%" height="15" fill="rgb(252,35,15)" fg:x="6943" fg:w="38"/><text x="49.8216%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (23 samples, 0.16%)</title><rect x="49.6787%" y="356" width="0.1642%" height="15" fill="rgb(248,181,18)" fg:x="6958" fg:w="23"/><text x="49.9287%" y="366.50"></text></g><g><title>right_child (row.py:77) (21 samples, 0.15%)</title><rect x="49.6930%" y="372" width="0.1499%" height="15" fill="rgb(233,39,42)" fg:x="6960" fg:w="21"/><text x="49.9430%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (19 samples, 0.14%)</title><rect x="49.7073%" y="388" width="0.1357%" height="15" fill="rgb(238,110,33)" fg:x="6962" fg:w="19"/><text x="49.9573%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (937 samples, 6.69%)</title><rect x="43.2458%" y="324" width="6.6900%" height="15" fill="rgb(233,195,10)" fg:x="6057" fg:w="937"/><text x="43.4958%" y="334.50">insert (b..</text></g><g><title>fetch_row (row.py:160) (21 samples, 0.15%)</title><rect x="50.1785%" y="372" width="0.1499%" height="15" fill="rgb(254,105,3)" fg:x="7028" fg:w="21"/><text x="50.4285%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (40 samples, 0.29%)</title><rect x="50.0643%" y="340" width="0.2856%" height="15" fill="rgb(221,225,9)" fg:x="7012" fg:w="40"/><text x="50.3143%" y="350.50"></text></g><g><title>left_child (row.py:81) (37 samples, 0.26%)</title><rect x="50.0857%" y="356" width="0.2642%" height="15" fill="rgb(224,227,45)" fg:x="7015" fg:w="37"/><text x="50.3357%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (24 samples, 0.17%)</title><rect x="50.4427%" y="372" width="0.1714%" height="15" fill="rgb(229,198,43)" fg:x="7065" fg:w="24"/><text x="50.6927%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (83 samples, 0.59%)</title><rect x="50.0571%" y="324" width="0.5926%" height="15" fill="rgb(206,209,35)" fg:x="7011" fg:w="83"/><text x="50.3071%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (42 samples, 0.30%)</title><rect x="50.3499%" y="340" width="0.2999%" height="15" fill="rgb(245,195,53)" fg:x="7052" fg:w="42"/><text x="50.5999%" y="350.50"></text></g><g><title>right_child (row.py:77) (37 samples, 0.26%)</title><rect x="50.3855%" y="356" width="0.2642%" height="15" fill="rgb(240,92,26)" fg:x="7057" fg:w="37"/><text x="50.6355%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (19 samples, 0.14%)</title><rect x="50.6711%" y="340" width="0.1357%" height="15" fill="rgb(207,40,23)" fg:x="7097" fg:w="19"/><text x="50.9211%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (1,909 samples, 13.63%)</title><rect x="37.1912%" y="308" width="13.6299%" height="15" fill="rgb(223,111,35)" fg:x="5209" fg:w="1909"/><text x="37.4412%" y="318.50">insert (binary_tree.p..</text></g><g><title>left_child (row.py:81) (24 samples, 0.17%)</title><rect x="50.6497%" y="324" width="0.1714%" height="15" fill="rgb(229,147,28)" fg:x="7094" fg:w="24"/><text x="50.8997%" y="334.50"></text></g><g><title>fetch_row (row.py:160) (25 samples, 0.18%)</title><rect x="50.8711%" y="356" width="0.1785%" height="15" fill="rgb(211,29,28)" fg:x="7125" fg:w="25"/><text x="51.1211%" y="366.50"></text></g><g><title>insert (binary_tree.py:86) (36 samples, 0.26%)</title><rect x="50.8211%" y="308" width="0.2570%" height="15" fill="rgb(228,72,33)" fg:x="7118" fg:w="36"/><text x="51.0711%" y="318.50"></text></g><g><title>left_subtree_height (row.py:85) (34 samples, 0.24%)</title><rect x="50.8354%" y="324" width="0.2428%" height="15" fill="rgb(205,214,31)" fg:x="7120" fg:w="34"/><text x="51.0854%" y="334.50"></text></g><g><title>left_child (row.py:81) (34 samples, 0.24%)</title><rect x="50.8354%" y="340" width="0.2428%" height="15" fill="rgb(224,111,15)" fg:x="7120" fg:w="34"/><text x="51.0854%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="51.1709%" y="404" width="0.1571%" height="15" fill="rgb(253,21,26)" fg:x="7167" fg:w="22"/><text x="51.4209%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="51.3423%" y="404" width="0.1499%" height="15" fill="rgb(245,139,43)" fg:x="7191" fg:w="21"/><text x="51.5923%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (49 samples, 0.35%)</title><rect x="51.1709%" y="388" width="0.3499%" height="15" fill="rgb(252,170,7)" fg:x="7167" fg:w="49"/><text x="51.4209%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="51.5208%" y="404" width="0.1142%" height="15" fill="rgb(231,118,14)" fg:x="7216" fg:w="16"/><text x="51.7708%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="51.6422%" y="404" width="0.1285%" height="15" fill="rgb(238,83,0)" fg:x="7233" fg:w="18"/><text x="51.8922%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (36 samples, 0.26%)</title><rect x="51.5208%" y="388" width="0.2570%" height="15" fill="rgb(221,39,39)" fg:x="7216" fg:w="36"/><text x="51.7708%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (94 samples, 0.67%)</title><rect x="51.1709%" y="372" width="0.6711%" height="15" fill="rgb(222,119,46)" fg:x="7167" fg:w="94"/><text x="51.4209%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="51.8563%" y="404" width="0.1714%" height="15" fill="rgb(222,165,49)" fg:x="7263" fg:w="24"/><text x="52.1063%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="52.0848%" y="420" width="0.1214%" height="15" fill="rgb(219,113,52)" fg:x="7295" fg:w="17"/><text x="52.3348%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (25 samples, 0.18%)</title><rect x="52.0705%" y="404" width="0.1785%" height="15" fill="rgb(214,7,15)" fg:x="7293" fg:w="25"/><text x="52.3205%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (58 samples, 0.41%)</title><rect x="51.8563%" y="388" width="0.4141%" height="15" fill="rgb(235,32,4)" fg:x="7263" fg:w="58"/><text x="52.1063%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="52.2776%" y="420" width="0.1071%" height="15" fill="rgb(238,90,54)" fg:x="7322" fg:w="15"/><text x="52.5276%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="52.2776%" y="404" width="0.2071%" height="15" fill="rgb(213,208,19)" fg:x="7322" fg:w="29"/><text x="52.5276%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="52.4846%" y="404" width="0.1214%" height="15" fill="rgb(233,156,4)" fg:x="7351" fg:w="17"/><text x="52.7346%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (49 samples, 0.35%)</title><rect x="52.2776%" y="388" width="0.3499%" height="15" fill="rgb(207,194,5)" fg:x="7322" fg:w="49"/><text x="52.5276%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (115 samples, 0.82%)</title><rect x="51.8421%" y="372" width="0.8211%" height="15" fill="rgb(206,111,30)" fg:x="7261" fg:w="115"/><text x="52.0921%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (15 samples, 0.11%)</title><rect x="52.6774%" y="372" width="0.1071%" height="15" fill="rgb(243,70,54)" fg:x="7378" fg:w="15"/><text x="52.9274%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (227 samples, 1.62%)</title><rect x="51.1709%" y="356" width="1.6207%" height="15" fill="rgb(242,28,8)" fg:x="7167" fg:w="227"/><text x="51.4209%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="52.9416%" y="404" width="0.1357%" height="15" fill="rgb(219,106,18)" fg:x="7415" fg:w="19"/><text x="53.1916%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (35 samples, 0.25%)</title><rect x="52.8488%" y="388" width="0.2499%" height="15" fill="rgb(244,222,10)" fg:x="7402" fg:w="35"/><text x="53.0988%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (24 samples, 0.17%)</title><rect x="53.1058%" y="388" width="0.1714%" height="15" fill="rgb(236,179,52)" fg:x="7438" fg:w="24"/><text x="53.3558%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (69 samples, 0.49%)</title><rect x="52.8488%" y="372" width="0.4926%" height="15" fill="rgb(213,23,39)" fg:x="7402" fg:w="69"/><text x="53.0988%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="53.3700%" y="388" width="0.1571%" height="15" fill="rgb(238,48,10)" fg:x="7475" fg:w="22"/><text x="53.6200%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="53.5628%" y="404" width="0.1714%" height="15" fill="rgb(251,196,23)" fg:x="7502" fg:w="24"/><text x="53.8128%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (39 samples, 0.28%)</title><rect x="53.5628%" y="388" width="0.2785%" height="15" fill="rgb(250,152,24)" fg:x="7502" fg:w="39"/><text x="53.8128%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (84 samples, 0.60%)</title><rect x="53.3700%" y="372" width="0.5997%" height="15" fill="rgb(209,150,17)" fg:x="7475" fg:w="84"/><text x="53.6200%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (175 samples, 1.25%)</title><rect x="52.8488%" y="356" width="1.2495%" height="15" fill="rgb(234,202,34)" fg:x="7402" fg:w="175"/><text x="53.0988%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (16 samples, 0.11%)</title><rect x="54.1625%" y="356" width="0.1142%" height="15" fill="rgb(253,148,53)" fg:x="7586" fg:w="16"/><text x="54.4125%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (439 samples, 3.13%)</title><rect x="51.1566%" y="340" width="3.1344%" height="15" fill="rgb(218,129,16)" fg:x="7165" fg:w="439"/><text x="51.4066%" y="350.50">ins..</text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="54.3624%" y="404" width="0.1285%" height="15" fill="rgb(216,85,19)" fg:x="7614" fg:w="18"/><text x="54.6124%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="54.5052%" y="404" width="0.1928%" height="15" fill="rgb(235,228,7)" fg:x="7634" fg:w="27"/><text x="54.7552%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (57 samples, 0.41%)</title><rect x="54.3624%" y="388" width="0.4070%" height="15" fill="rgb(245,175,0)" fg:x="7614" fg:w="57"/><text x="54.6124%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="54.7979%" y="404" width="0.1642%" height="15" fill="rgb(208,168,36)" fg:x="7675" fg:w="23"/><text x="55.0479%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (24 samples, 0.17%)</title><rect x="54.9622%" y="404" width="0.1714%" height="15" fill="rgb(246,171,24)" fg:x="7698" fg:w="24"/><text x="55.2122%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (58 samples, 0.41%)</title><rect x="54.7908%" y="388" width="0.4141%" height="15" fill="rgb(215,142,24)" fg:x="7674" fg:w="58"/><text x="55.0408%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (122 samples, 0.87%)</title><rect x="54.3624%" y="372" width="0.8711%" height="15" fill="rgb(250,187,7)" fg:x="7614" fg:w="122"/><text x="54.6124%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (27 samples, 0.19%)</title><rect x="55.2834%" y="404" width="0.1928%" height="15" fill="rgb(228,66,33)" fg:x="7743" fg:w="27"/><text x="55.5334%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (44 samples, 0.31%)</title><rect x="55.2834%" y="388" width="0.3142%" height="15" fill="rgb(234,215,21)" fg:x="7743" fg:w="44"/><text x="55.5334%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="55.6262%" y="404" width="0.1499%" height="15" fill="rgb(222,191,20)" fg:x="7791" fg:w="21"/><text x="55.8762%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (29 samples, 0.21%)</title><rect x="55.7904%" y="404" width="0.2071%" height="15" fill="rgb(245,79,54)" fg:x="7814" fg:w="29"/><text x="56.0404%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (60 samples, 0.43%)</title><rect x="55.6119%" y="388" width="0.4284%" height="15" fill="rgb(240,10,37)" fg:x="7789" fg:w="60"/><text x="55.8619%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (113 samples, 0.81%)</title><rect x="55.2834%" y="372" width="0.8068%" height="15" fill="rgb(214,192,32)" fg:x="7743" fg:w="113"/><text x="55.5334%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (258 samples, 1.84%)</title><rect x="54.3624%" y="356" width="1.8421%" height="15" fill="rgb(209,36,54)" fg:x="7614" fg:w="258"/><text x="54.6124%" y="366.50">i..</text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="56.2759%" y="404" width="0.1357%" height="15" fill="rgb(220,10,11)" fg:x="7882" fg:w="19"/><text x="56.5259%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="56.4187%" y="404" width="0.1142%" height="15" fill="rgb(221,106,17)" fg:x="7902" fg:w="16"/><text x="56.6687%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (43 samples, 0.31%)</title><rect x="56.2687%" y="388" width="0.3070%" height="15" fill="rgb(251,142,44)" fg:x="7881" fg:w="43"/><text x="56.5187%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (29 samples, 0.21%)</title><rect x="56.6686%" y="404" width="0.2071%" height="15" fill="rgb(238,13,15)" fg:x="7937" fg:w="29"/><text x="56.9186%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (46 samples, 0.33%)</title><rect x="56.5829%" y="388" width="0.3284%" height="15" fill="rgb(208,107,27)" fg:x="7925" fg:w="46"/><text x="56.8329%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (100 samples, 0.71%)</title><rect x="56.2687%" y="372" width="0.7140%" height="15" fill="rgb(205,136,37)" fg:x="7881" fg:w="100"/><text x="56.5187%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="57.0184%" y="420" width="0.1571%" height="15" fill="rgb(250,205,27)" fg:x="7986" fg:w="22"/><text x="57.2684%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="57.0113%" y="404" width="0.2071%" height="15" fill="rgb(210,80,43)" fg:x="7985" fg:w="29"/><text x="57.2613%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="57.2398%" y="404" width="0.1642%" height="15" fill="rgb(247,160,36)" fg:x="8017" fg:w="23"/><text x="57.4898%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (57 samples, 0.41%)</title><rect x="57.0113%" y="388" width="0.4070%" height="15" fill="rgb(234,13,49)" fg:x="7985" fg:w="57"/><text x="57.2613%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="57.4182%" y="420" width="0.1071%" height="15" fill="rgb(234,122,0)" fg:x="8042" fg:w="15"/><text x="57.6682%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="57.5396%" y="420" width="0.1071%" height="15" fill="rgb(207,146,38)" fg:x="8059" fg:w="15"/><text x="57.7896%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (37 samples, 0.26%)</title><rect x="57.4182%" y="404" width="0.2642%" height="15" fill="rgb(207,177,25)" fg:x="8042" fg:w="37"/><text x="57.6682%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="57.6967%" y="404" width="0.1642%" height="15" fill="rgb(211,178,42)" fg:x="8081" fg:w="23"/><text x="57.9467%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (66 samples, 0.47%)</title><rect x="57.4182%" y="388" width="0.4712%" height="15" fill="rgb(230,69,54)" fg:x="8042" fg:w="66"/><text x="57.6682%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (128 samples, 0.91%)</title><rect x="57.0113%" y="372" width="0.9139%" height="15" fill="rgb(214,135,41)" fg:x="7985" fg:w="128"/><text x="57.2613%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (246 samples, 1.76%)</title><rect x="56.2687%" y="356" width="1.7564%" height="15" fill="rgb(237,67,25)" fg:x="7881" fg:w="246"/><text x="56.5187%" y="366.50"></text></g><g><title>left_subtree_height (row.py:85) (17 samples, 0.12%)</title><rect x="58.0466%" y="372" width="0.1214%" height="15" fill="rgb(222,189,50)" fg:x="8130" fg:w="17"/><text x="58.2966%" y="382.50"></text></g><g><title>left_child (row.py:81) (16 samples, 0.11%)</title><rect x="58.0537%" y="388" width="0.1142%" height="15" fill="rgb(245,148,34)" fg:x="8131" fg:w="16"/><text x="58.3037%" y="398.50"></text></g><g><title>insert (binary_tree.py:95) (20 samples, 0.14%)</title><rect x="58.0466%" y="356" width="0.1428%" height="15" fill="rgb(222,29,6)" fg:x="8130" fg:w="20"/><text x="58.2966%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (540 samples, 3.86%)</title><rect x="54.3481%" y="340" width="3.8555%" height="15" fill="rgb(221,189,43)" fg:x="7612" fg:w="540"/><text x="54.5981%" y="350.50">inse..</text></g><g><title>insert (binary_tree.py:95) (37 samples, 0.26%)</title><rect x="58.2893%" y="340" width="0.2642%" height="15" fill="rgb(207,36,27)" fg:x="8164" fg:w="37"/><text x="58.5393%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (23 samples, 0.16%)</title><rect x="58.3893%" y="356" width="0.1642%" height="15" fill="rgb(217,90,24)" fg:x="8178" fg:w="23"/><text x="58.6393%" y="366.50"></text></g><g><title>right_child (row.py:77) (22 samples, 0.16%)</title><rect x="58.3964%" y="372" width="0.1571%" height="15" fill="rgb(224,66,35)" fg:x="8179" fg:w="22"/><text x="58.6464%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (1,046 samples, 7.47%)</title><rect x="51.1495%" y="324" width="7.4682%" height="15" fill="rgb(221,13,50)" fg:x="7164" fg:w="1046"/><text x="51.3995%" y="334.50">insert (bi..</text></g><g><title>insert (binary_tree.py:86) (24 samples, 0.17%)</title><rect x="58.6177%" y="324" width="0.1714%" height="15" fill="rgb(236,68,49)" fg:x="8210" fg:w="24"/><text x="58.8677%" y="334.50"></text></g><g><title>left_subtree_height (row.py:85) (22 samples, 0.16%)</title><rect x="58.6320%" y="340" width="0.1571%" height="15" fill="rgb(229,146,28)" fg:x="8212" fg:w="22"/><text x="58.8820%" y="350.50"></text></g><g><title>left_child (row.py:81) (22 samples, 0.16%)</title><rect x="58.6320%" y="356" width="0.1571%" height="15" fill="rgb(225,31,38)" fg:x="8212" fg:w="22"/><text x="58.8820%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="59.0104%" y="404" width="0.1142%" height="15" fill="rgb(250,208,3)" fg:x="8265" fg:w="16"/><text x="59.2604%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (31 samples, 0.22%)</title><rect x="58.9105%" y="388" width="0.2213%" height="15" fill="rgb(246,54,23)" fg:x="8251" fg:w="31"/><text x="59.1605%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (52 samples, 0.37%)</title><rect x="58.8319%" y="372" width="0.3713%" height="15" fill="rgb(243,76,11)" fg:x="8240" fg:w="52"/><text x="59.0819%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="59.3174%" y="404" width="0.1357%" height="15" fill="rgb(245,21,50)" fg:x="8308" fg:w="19"/><text x="59.5674%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (38 samples, 0.27%)</title><rect x="59.2175%" y="388" width="0.2713%" height="15" fill="rgb(228,9,43)" fg:x="8294" fg:w="38"/><text x="59.4675%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (17 samples, 0.12%)</title><rect x="59.5245%" y="420" width="0.1214%" height="15" fill="rgb(208,100,47)" fg:x="8337" fg:w="17"/><text x="59.7745%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (26 samples, 0.19%)</title><rect x="59.5245%" y="404" width="0.1856%" height="15" fill="rgb(232,26,8)" fg:x="8337" fg:w="26"/><text x="59.7745%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (20 samples, 0.14%)</title><rect x="59.7101%" y="404" width="0.1428%" height="15" fill="rgb(216,166,38)" fg:x="8363" fg:w="20"/><text x="59.9601%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (55 samples, 0.39%)</title><rect x="59.5173%" y="388" width="0.3927%" height="15" fill="rgb(251,202,51)" fg:x="8336" fg:w="55"/><text x="59.7673%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (103 samples, 0.74%)</title><rect x="59.2175%" y="372" width="0.7354%" height="15" fill="rgb(254,216,34)" fg:x="8294" fg:w="103"/><text x="59.4675%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (173 samples, 1.24%)</title><rect x="58.8248%" y="356" width="1.2352%" height="15" fill="rgb(251,32,27)" fg:x="8239" fg:w="173"/><text x="59.0748%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (35 samples, 0.25%)</title><rect x="60.0885%" y="388" width="0.2499%" height="15" fill="rgb(208,127,28)" fg:x="8416" fg:w="35"/><text x="60.3385%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (25 samples, 0.18%)</title><rect x="60.3384%" y="404" width="0.1785%" height="15" fill="rgb(224,137,22)" fg:x="8451" fg:w="25"/><text x="60.5884%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="60.5241%" y="404" width="0.1071%" height="15" fill="rgb(254,70,32)" fg:x="8477" fg:w="15"/><text x="60.7741%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (43 samples, 0.31%)</title><rect x="60.3384%" y="388" width="0.3070%" height="15" fill="rgb(229,75,37)" fg:x="8451" fg:w="43"/><text x="60.5884%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (89 samples, 0.64%)</title><rect x="60.0885%" y="372" width="0.6354%" height="15" fill="rgb(252,64,23)" fg:x="8416" fg:w="89"/><text x="60.3385%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="60.7454%" y="388" width="0.1714%" height="15" fill="rgb(232,162,48)" fg:x="8508" fg:w="24"/><text x="60.9954%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (42 samples, 0.30%)</title><rect x="60.7454%" y="372" width="0.2999%" height="15" fill="rgb(246,160,12)" fg:x="8508" fg:w="42"/><text x="60.9954%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (145 samples, 1.04%)</title><rect x="60.0885%" y="356" width="1.0353%" height="15" fill="rgb(247,166,0)" fg:x="8416" fg:w="145"/><text x="60.3385%" y="366.50"></text></g><g><title>left_subtree_height (row.py:85) (16 samples, 0.11%)</title><rect x="61.1309%" y="372" width="0.1142%" height="15" fill="rgb(249,219,21)" fg:x="8562" fg:w="16"/><text x="61.3809%" y="382.50"></text></g><g><title>left_child (row.py:81) (15 samples, 0.11%)</title><rect x="61.1381%" y="388" width="0.1071%" height="15" fill="rgb(205,209,3)" fg:x="8563" fg:w="15"/><text x="61.3881%" y="398.50"></text></g><g><title>insert (binary_tree.py:95) (23 samples, 0.16%)</title><rect x="61.1309%" y="356" width="0.1642%" height="15" fill="rgb(243,44,1)" fg:x="8562" fg:w="23"/><text x="61.3809%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (353 samples, 2.52%)</title><rect x="58.7962%" y="340" width="2.5203%" height="15" fill="rgb(206,159,16)" fg:x="8235" fg:w="353"/><text x="59.0462%" y="350.50">in..</text></g><g><title>insert (binary_tree.py:82) (25 samples, 0.18%)</title><rect x="61.3951%" y="388" width="0.1785%" height="15" fill="rgb(244,77,30)" fg:x="8599" fg:w="25"/><text x="61.6451%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="61.6736%" y="404" width="0.1357%" height="15" fill="rgb(218,69,12)" fg:x="8638" fg:w="19"/><text x="61.9236%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="61.5736%" y="388" width="0.2927%" height="15" fill="rgb(212,87,7)" fg:x="8624" fg:w="41"/><text x="61.8236%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (73 samples, 0.52%)</title><rect x="61.3951%" y="372" width="0.5212%" height="15" fill="rgb(245,114,25)" fg:x="8599" fg:w="73"/><text x="61.6451%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="61.9235%" y="404" width="0.1571%" height="15" fill="rgb(210,61,42)" fg:x="8673" fg:w="22"/><text x="62.1735%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="62.0948%" y="404" width="0.1214%" height="15" fill="rgb(211,52,33)" fg:x="8697" fg:w="17"/><text x="62.3448%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (46 samples, 0.33%)</title><rect x="61.9235%" y="388" width="0.3284%" height="15" fill="rgb(234,58,33)" fg:x="8673" fg:w="46"/><text x="62.1735%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="62.2805%" y="404" width="0.1142%" height="15" fill="rgb(220,115,36)" fg:x="8723" fg:w="16"/><text x="62.5305%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="62.2662%" y="388" width="0.2428%" height="15" fill="rgb(243,153,54)" fg:x="8721" fg:w="34"/><text x="62.5162%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (100 samples, 0.71%)</title><rect x="61.9235%" y="372" width="0.7140%" height="15" fill="rgb(251,47,18)" fg:x="8673" fg:w="100"/><text x="62.1735%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (190 samples, 1.36%)</title><rect x="61.3951%" y="356" width="1.3566%" height="15" fill="rgb(242,102,42)" fg:x="8599" fg:w="190"/><text x="61.6451%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="62.8374%" y="420" width="0.1357%" height="15" fill="rgb(234,31,38)" fg:x="8801" fg:w="19"/><text x="63.0874%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (40 samples, 0.29%)</title><rect x="62.8374%" y="404" width="0.2856%" height="15" fill="rgb(221,117,51)" fg:x="8801" fg:w="40"/><text x="63.0874%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (24 samples, 0.17%)</title><rect x="63.1229%" y="404" width="0.1714%" height="15" fill="rgb(212,20,18)" fg:x="8841" fg:w="24"/><text x="63.3729%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (66 samples, 0.47%)</title><rect x="62.8374%" y="388" width="0.4712%" height="15" fill="rgb(245,133,36)" fg:x="8801" fg:w="66"/><text x="63.0874%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (28 samples, 0.20%)</title><rect x="63.3157%" y="404" width="0.1999%" height="15" fill="rgb(212,6,19)" fg:x="8868" fg:w="28"/><text x="63.5657%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="63.5228%" y="404" width="0.1357%" height="15" fill="rgb(218,1,36)" fg:x="8897" fg:w="19"/><text x="63.7728%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (52 samples, 0.37%)</title><rect x="63.3086%" y="388" width="0.3713%" height="15" fill="rgb(246,84,54)" fg:x="8867" fg:w="52"/><text x="63.5586%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (129 samples, 0.92%)</title><rect x="62.8374%" y="372" width="0.9210%" height="15" fill="rgb(242,110,6)" fg:x="8801" fg:w="129"/><text x="63.0874%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="63.9012%" y="420" width="0.1214%" height="15" fill="rgb(214,47,5)" fg:x="8950" fg:w="17"/><text x="64.1512%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (38 samples, 0.27%)</title><rect x="63.7798%" y="404" width="0.2713%" height="15" fill="rgb(218,159,25)" fg:x="8933" fg:w="38"/><text x="64.0298%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="64.1011%" y="420" width="0.1357%" height="15" fill="rgb(215,211,28)" fg:x="8978" fg:w="19"/><text x="64.3511%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (27 samples, 0.19%)</title><rect x="64.0583%" y="404" width="0.1928%" height="15" fill="rgb(238,59,32)" fg:x="8972" fg:w="27"/><text x="64.3083%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (69 samples, 0.49%)</title><rect x="63.7798%" y="388" width="0.4926%" height="15" fill="rgb(226,82,3)" fg:x="8933" fg:w="69"/><text x="64.0298%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="64.3867%" y="404" width="0.1285%" height="15" fill="rgb(240,164,32)" fg:x="9018" fg:w="18"/><text x="64.6367%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (32 samples, 0.23%)</title><rect x="64.2939%" y="388" width="0.2285%" height="15" fill="rgb(232,46,7)" fg:x="9005" fg:w="32"/><text x="64.5439%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (112 samples, 0.80%)</title><rect x="63.7727%" y="372" width="0.7997%" height="15" fill="rgb(229,129,53)" fg:x="8932" fg:w="112"/><text x="64.0227%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (259 samples, 1.85%)</title><rect x="62.8231%" y="356" width="1.8492%" height="15" fill="rgb(234,188,29)" fg:x="8799" fg:w="259"/><text x="63.0731%" y="366.50">i..</text></g><g><title>insert (binary_tree.py:95) (31 samples, 0.22%)</title><rect x="64.7223%" y="356" width="0.2213%" height="15" fill="rgb(246,141,4)" fg:x="9065" fg:w="31"/><text x="64.9723%" y="366.50"></text></g><g><title>right_subtree_height (row.py:89) (18 samples, 0.13%)</title><rect x="64.8151%" y="372" width="0.1285%" height="15" fill="rgb(229,23,39)" fg:x="9078" fg:w="18"/><text x="65.0651%" y="382.50"></text></g><g><title>right_child (row.py:77) (18 samples, 0.13%)</title><rect x="64.8151%" y="388" width="0.1285%" height="15" fill="rgb(206,12,3)" fg:x="9078" fg:w="18"/><text x="65.0651%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (503 samples, 3.59%)</title><rect x="61.3951%" y="340" width="3.5913%" height="15" fill="rgb(252,226,20)" fg:x="8599" fg:w="503"/><text x="61.6451%" y="350.50">inse..</text></g><g><title>fetch_row (row.py:160) (18 samples, 0.13%)</title><rect x="64.9936%" y="388" width="0.1285%" height="15" fill="rgb(216,123,35)" fg:x="9103" fg:w="18"/><text x="65.2436%" y="398.50"></text></g><g><title>insert (binary_tree.py:92) (21 samples, 0.15%)</title><rect x="64.9864%" y="340" width="0.1499%" height="15" fill="rgb(212,68,40)" fg:x="9102" fg:w="21"/><text x="65.2364%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (21 samples, 0.15%)</title><rect x="64.9864%" y="356" width="0.1499%" height="15" fill="rgb(254,125,32)" fg:x="9102" fg:w="21"/><text x="65.2364%" y="366.50"></text></g><g><title>right_child (row.py:77) (21 samples, 0.15%)</title><rect x="64.9864%" y="372" width="0.1499%" height="15" fill="rgb(253,97,22)" fg:x="9102" fg:w="21"/><text x="65.2364%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (22 samples, 0.16%)</title><rect x="65.1721%" y="356" width="0.1571%" height="15" fill="rgb(241,101,14)" fg:x="9128" fg:w="22"/><text x="65.4221%" y="366.50"></text></g><g><title>left_child (row.py:81) (21 samples, 0.15%)</title><rect x="65.1792%" y="372" width="0.1499%" height="15" fill="rgb(238,103,29)" fg:x="9129" fg:w="21"/><text x="65.4292%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (32 samples, 0.23%)</title><rect x="65.1721%" y="340" width="0.2285%" height="15" fill="rgb(233,195,47)" fg:x="9128" fg:w="32"/><text x="65.4221%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (937 samples, 6.69%)</title><rect x="58.7962%" y="324" width="6.6900%" height="15" fill="rgb(246,218,30)" fg:x="8235" fg:w="937"/><text x="59.0462%" y="334.50">insert (b..</text></g><g><title>insert (binary_tree.py:92) (22 samples, 0.16%)</title><rect x="65.4862%" y="324" width="0.1571%" height="15" fill="rgb(219,145,47)" fg:x="9172" fg:w="22"/><text x="65.7362%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (21 samples, 0.15%)</title><rect x="65.4934%" y="340" width="0.1499%" height="15" fill="rgb(243,12,26)" fg:x="9173" fg:w="21"/><text x="65.7434%" y="350.50"></text></g><g><title>right_child (row.py:77) (21 samples, 0.15%)</title><rect x="65.4934%" y="356" width="0.1499%" height="15" fill="rgb(214,87,16)" fg:x="9173" fg:w="21"/><text x="65.7434%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (33 samples, 0.24%)</title><rect x="65.7361%" y="372" width="0.2356%" height="15" fill="rgb(208,99,42)" fg:x="9207" fg:w="33"/><text x="65.9861%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (46 samples, 0.33%)</title><rect x="65.6790%" y="340" width="0.3284%" height="15" fill="rgb(253,99,2)" fg:x="9199" fg:w="46"/><text x="65.9290%" y="350.50"></text></g><g><title>left_child (row.py:81) (46 samples, 0.33%)</title><rect x="65.6790%" y="356" width="0.3284%" height="15" fill="rgb(220,168,23)" fg:x="9199" fg:w="46"/><text x="65.9290%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (26 samples, 0.19%)</title><rect x="66.0645%" y="372" width="0.1856%" height="15" fill="rgb(242,38,24)" fg:x="9253" fg:w="26"/><text x="66.3145%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (87 samples, 0.62%)</title><rect x="65.6719%" y="324" width="0.6212%" height="15" fill="rgb(225,182,9)" fg:x="9198" fg:w="87"/><text x="65.9219%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (40 samples, 0.29%)</title><rect x="66.0074%" y="340" width="0.2856%" height="15" fill="rgb(243,178,37)" fg:x="9245" fg:w="40"/><text x="66.2574%" y="350.50"></text></g><g><title>right_child (row.py:77) (37 samples, 0.26%)</title><rect x="66.0288%" y="356" width="0.2642%" height="15" fill="rgb(232,139,19)" fg:x="9248" fg:w="37"/><text x="66.2788%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (2,135 samples, 15.24%)</title><rect x="51.1424%" y="308" width="15.2435%" height="15" fill="rgb(225,201,24)" fg:x="7163" fg:w="2135"/><text x="51.3924%" y="318.50">insert (binary_tree.py:..</text></g><g><title>fetch_row (row.py:160) (34 samples, 0.24%)</title><rect x="66.4501%" y="356" width="0.2428%" height="15" fill="rgb(221,47,46)" fg:x="9307" fg:w="34"/><text x="66.7001%" y="366.50"></text></g><g><title>insert (binary_tree.py:92) (47 samples, 0.34%)</title><rect x="66.3930%" y="308" width="0.3356%" height="15" fill="rgb(249,23,13)" fg:x="9299" fg:w="47"/><text x="66.6430%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (45 samples, 0.32%)</title><rect x="66.4073%" y="324" width="0.3213%" height="15" fill="rgb(219,9,5)" fg:x="9301" fg:w="45"/><text x="66.6573%" y="334.50"></text></g><g><title>right_child (row.py:77) (45 samples, 0.32%)</title><rect x="66.4073%" y="340" width="0.3213%" height="15" fill="rgb(254,171,16)" fg:x="9301" fg:w="45"/><text x="66.6573%" y="350.50"></text></g><g><title>fetch_row (row.py:158) (15 samples, 0.11%)</title><rect x="66.8571%" y="356" width="0.1071%" height="15" fill="rgb(230,171,20)" fg:x="9364" fg:w="15"/><text x="67.1071%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (57 samples, 0.41%)</title><rect x="66.9642%" y="356" width="0.4070%" height="15" fill="rgb(210,71,41)" fg:x="9379" fg:w="57"/><text x="67.2142%" y="366.50"></text></g><g><title>deserialize (row.py:147) (28 samples, 0.20%)</title><rect x="67.1712%" y="372" width="0.1999%" height="15" fill="rgb(206,173,20)" fg:x="9408" fg:w="28"/><text x="67.4212%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (76 samples, 0.54%)</title><rect x="66.8356%" y="324" width="0.5426%" height="15" fill="rgb(233,88,34)" fg:x="9361" fg:w="76"/><text x="67.0856%" y="334.50"></text></g><g><title>left_child (row.py:81) (74 samples, 0.53%)</title><rect x="66.8499%" y="340" width="0.5283%" height="15" fill="rgb(223,209,46)" fg:x="9363" fg:w="74"/><text x="67.0999%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (50 samples, 0.36%)</title><rect x="67.5068%" y="356" width="0.3570%" height="15" fill="rgb(250,43,18)" fg:x="9455" fg:w="50"/><text x="67.7568%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (152 samples, 1.09%)</title><rect x="66.8285%" y="308" width="1.0852%" height="15" fill="rgb(208,13,10)" fg:x="9360" fg:w="152"/><text x="67.0785%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (75 samples, 0.54%)</title><rect x="67.3783%" y="324" width="0.5355%" height="15" fill="rgb(212,200,36)" fg:x="9437" fg:w="75"/><text x="67.6283%" y="334.50"></text></g><g><title>right_child (row.py:77) (74 samples, 0.53%)</title><rect x="67.3854%" y="340" width="0.5283%" height="15" fill="rgb(225,90,30)" fg:x="9438" fg:w="74"/><text x="67.6354%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (28 samples, 0.20%)</title><rect x="67.9780%" y="324" width="0.1999%" height="15" fill="rgb(236,182,39)" fg:x="9521" fg:w="28"/><text x="68.2280%" y="334.50"></text></g><g><title>insert (binary_tree.py:82) (4,349 samples, 31.05%)</title><rect x="37.1412%" y="292" width="31.0510%" height="15" fill="rgb(212,144,35)" fg:x="5202" fg:w="4349"/><text x="37.3912%" y="302.50">insert (binary_tree.py:82)</text></g><g><title>left_child (row.py:81) (39 samples, 0.28%)</title><rect x="67.9138%" y="308" width="0.2785%" height="15" fill="rgb(228,63,44)" fg:x="9512" fg:w="39"/><text x="68.1638%" y="318.50"></text></g><g><title>fetch_row (row.py:160) (43 samples, 0.31%)</title><rect x="68.2993%" y="340" width="0.3070%" height="15" fill="rgb(228,109,6)" fg:x="9566" fg:w="43"/><text x="68.5493%" y="350.50"></text></g><g><title>deserialize (row.py:147) (16 samples, 0.11%)</title><rect x="68.4921%" y="356" width="0.1142%" height="15" fill="rgb(238,117,24)" fg:x="9593" fg:w="16"/><text x="68.7421%" y="366.50"></text></g><g><title>insert (binary_tree.py:86) (64 samples, 0.46%)</title><rect x="68.1922%" y="292" width="0.4569%" height="15" fill="rgb(242,26,26)" fg:x="9551" fg:w="64"/><text x="68.4422%" y="302.50"></text></g><g><title>left_subtree_height (row.py:85) (59 samples, 0.42%)</title><rect x="68.2279%" y="308" width="0.4212%" height="15" fill="rgb(221,92,48)" fg:x="9556" fg:w="59"/><text x="68.4779%" y="318.50"></text></g><g><title>left_child (row.py:81) (59 samples, 0.42%)</title><rect x="68.2279%" y="324" width="0.4212%" height="15" fill="rgb(209,209,32)" fg:x="9556" fg:w="59"/><text x="68.4779%" y="334.50"></text></g><g><title>insert (binary_tree.py:87) (15 samples, 0.11%)</title><rect x="68.6492%" y="292" width="0.1071%" height="15" fill="rgb(221,70,22)" fg:x="9615" fg:w="15"/><text x="68.8992%" y="302.50"></text></g><g><title>write_to_page (row.py:111) (15 samples, 0.11%)</title><rect x="68.6492%" y="308" width="0.1071%" height="15" fill="rgb(248,145,5)" fg:x="9615" fg:w="15"/><text x="68.8992%" y="318.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="68.7991%" y="372" width="0.1642%" height="15" fill="rgb(226,116,26)" fg:x="9636" fg:w="23"/><text x="69.0491%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="68.9704%" y="388" width="0.1428%" height="15" fill="rgb(244,5,17)" fg:x="9660" fg:w="20"/><text x="69.2204%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (17 samples, 0.12%)</title><rect x="69.1204%" y="388" width="0.1214%" height="15" fill="rgb(252,159,33)" fg:x="9681" fg:w="17"/><text x="69.3704%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (49 samples, 0.35%)</title><rect x="68.9704%" y="372" width="0.3499%" height="15" fill="rgb(206,71,0)" fg:x="9660" fg:w="49"/><text x="69.2204%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (83 samples, 0.59%)</title><rect x="68.7991%" y="356" width="0.5926%" height="15" fill="rgb(233,118,54)" fg:x="9636" fg:w="83"/><text x="69.0491%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="69.4274%" y="388" width="0.1071%" height="15" fill="rgb(234,83,48)" fg:x="9724" fg:w="15"/><text x="69.6774%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (33 samples, 0.24%)</title><rect x="69.4274%" y="372" width="0.2356%" height="15" fill="rgb(228,3,54)" fg:x="9724" fg:w="33"/><text x="69.6774%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (22 samples, 0.16%)</title><rect x="69.7415%" y="388" width="0.1571%" height="15" fill="rgb(226,155,13)" fg:x="9768" fg:w="22"/><text x="69.9915%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (39 samples, 0.28%)</title><rect x="69.6701%" y="372" width="0.2785%" height="15" fill="rgb(241,28,37)" fg:x="9758" fg:w="39"/><text x="69.9201%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (82 samples, 0.59%)</title><rect x="69.4131%" y="356" width="0.5855%" height="15" fill="rgb(233,93,10)" fg:x="9722" fg:w="82"/><text x="69.6631%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (190 samples, 1.36%)</title><rect x="68.7919%" y="340" width="1.3566%" height="15" fill="rgb(225,113,19)" fg:x="9635" fg:w="190"/><text x="69.0419%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="70.2485%" y="388" width="0.1642%" height="15" fill="rgb(241,2,18)" fg:x="9839" fg:w="23"/><text x="70.4985%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (42 samples, 0.30%)</title><rect x="70.1556%" y="372" width="0.2999%" height="15" fill="rgb(228,207,21)" fg:x="9826" fg:w="42"/><text x="70.4056%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="70.4769%" y="388" width="0.1357%" height="15" fill="rgb(213,211,35)" fg:x="9871" fg:w="19"/><text x="70.7269%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (40 samples, 0.29%)</title><rect x="70.4769%" y="372" width="0.2856%" height="15" fill="rgb(209,83,10)" fg:x="9871" fg:w="40"/><text x="70.7269%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (89 samples, 0.64%)</title><rect x="70.1556%" y="356" width="0.6354%" height="15" fill="rgb(209,164,1)" fg:x="9826" fg:w="89"/><text x="70.4056%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="70.8339%" y="388" width="0.1499%" height="15" fill="rgb(213,184,43)" fg:x="9921" fg:w="21"/><text x="71.0839%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (37 samples, 0.26%)</title><rect x="70.8339%" y="372" width="0.2642%" height="15" fill="rgb(231,61,34)" fg:x="9921" fg:w="37"/><text x="71.0839%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="71.1481%" y="388" width="0.1285%" height="15" fill="rgb(235,75,3)" fg:x="9965" fg:w="18"/><text x="71.3981%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="71.2766%" y="388" width="0.1285%" height="15" fill="rgb(220,106,47)" fg:x="9983" fg:w="18"/><text x="71.5266%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="71.1481%" y="372" width="0.2927%" height="15" fill="rgb(210,196,33)" fg:x="9965" fg:w="41"/><text x="71.3981%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (100 samples, 0.71%)</title><rect x="70.8339%" y="356" width="0.7140%" height="15" fill="rgb(229,154,42)" fg:x="9921" fg:w="100"/><text x="71.0839%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (206 samples, 1.47%)</title><rect x="70.1556%" y="340" width="1.4708%" height="15" fill="rgb(228,114,26)" fg:x="9826" fg:w="206"/><text x="70.4056%" y="350.50"></text></g><g><title>insert (binary_tree.py:95) (17 samples, 0.12%)</title><rect x="71.6764%" y="340" width="0.1214%" height="15" fill="rgb(208,144,1)" fg:x="10039" fg:w="17"/><text x="71.9264%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (428 samples, 3.06%)</title><rect x="68.7919%" y="324" width="3.0558%" height="15" fill="rgb(239,112,37)" fg:x="9635" fg:w="428"/><text x="69.0419%" y="334.50">ins..</text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="72.0191%" y="404" width="0.1642%" height="15" fill="rgb(210,96,50)" fg:x="10087" fg:w="23"/><text x="72.2691%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (46 samples, 0.33%)</title><rect x="71.9263%" y="388" width="0.3284%" height="15" fill="rgb(222,178,2)" fg:x="10074" fg:w="46"/><text x="72.1763%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="72.3119%" y="420" width="0.1071%" height="15" fill="rgb(226,74,18)" fg:x="10128" fg:w="15"/><text x="72.5619%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (33 samples, 0.24%)</title><rect x="72.2547%" y="404" width="0.2356%" height="15" fill="rgb(225,67,54)" fg:x="10120" fg:w="33"/><text x="72.5047%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (51 samples, 0.36%)</title><rect x="72.2547%" y="388" width="0.3641%" height="15" fill="rgb(251,92,32)" fg:x="10120" fg:w="51"/><text x="72.5047%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (110 samples, 0.79%)</title><rect x="71.9263%" y="372" width="0.7854%" height="15" fill="rgb(228,149,22)" fg:x="10074" fg:w="110"/><text x="72.1763%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (29 samples, 0.21%)</title><rect x="72.7403%" y="388" width="0.2071%" height="15" fill="rgb(243,54,13)" fg:x="10188" fg:w="29"/><text x="72.9903%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="72.9687%" y="404" width="0.1499%" height="15" fill="rgb(243,180,28)" fg:x="10220" fg:w="21"/><text x="73.2187%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (33 samples, 0.24%)</title><rect x="72.9687%" y="388" width="0.2356%" height="15" fill="rgb(208,167,24)" fg:x="10220" fg:w="33"/><text x="73.2187%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (69 samples, 0.49%)</title><rect x="72.7403%" y="372" width="0.4926%" height="15" fill="rgb(245,73,45)" fg:x="10188" fg:w="69"/><text x="72.9903%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (196 samples, 1.40%)</title><rect x="71.9263%" y="356" width="1.3994%" height="15" fill="rgb(237,203,48)" fg:x="10074" fg:w="196"/><text x="72.1763%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="73.3614%" y="404" width="0.1357%" height="15" fill="rgb(211,197,16)" fg:x="10275" fg:w="19"/><text x="73.6114%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="73.4971%" y="404" width="0.1285%" height="15" fill="rgb(243,99,51)" fg:x="10294" fg:w="18"/><text x="73.7471%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (41 samples, 0.29%)</title><rect x="73.3614%" y="388" width="0.2927%" height="15" fill="rgb(215,123,29)" fg:x="10275" fg:w="41"/><text x="73.6114%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="73.7327%" y="420" width="0.1642%" height="15" fill="rgb(239,186,37)" fg:x="10327" fg:w="23"/><text x="73.9827%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="73.6970%" y="404" width="0.2142%" height="15" fill="rgb(252,136,39)" fg:x="10322" fg:w="30"/><text x="73.9470%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="74.0183%" y="420" width="0.1071%" height="15" fill="rgb(223,213,32)" fg:x="10367" fg:w="15"/><text x="74.2683%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (29 samples, 0.21%)</title><rect x="73.9397%" y="404" width="0.2071%" height="15" fill="rgb(233,115,5)" fg:x="10356" fg:w="29"/><text x="74.1897%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (72 samples, 0.51%)</title><rect x="73.6827%" y="388" width="0.5141%" height="15" fill="rgb(207,226,44)" fg:x="10320" fg:w="72"/><text x="73.9327%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (123 samples, 0.88%)</title><rect x="73.3614%" y="372" width="0.8782%" height="15" fill="rgb(208,126,0)" fg:x="10275" fg:w="123"/><text x="73.6114%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (33 samples, 0.24%)</title><rect x="74.2753%" y="404" width="0.2356%" height="15" fill="rgb(244,66,21)" fg:x="10403" fg:w="33"/><text x="74.5253%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="74.5109%" y="404" width="0.1642%" height="15" fill="rgb(222,97,12)" fg:x="10436" fg:w="23"/><text x="74.7609%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (60 samples, 0.43%)</title><rect x="74.2753%" y="388" width="0.4284%" height="15" fill="rgb(219,213,19)" fg:x="10403" fg:w="60"/><text x="74.5253%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (88 samples, 0.63%)</title><rect x="74.2753%" y="372" width="0.6283%" height="15" fill="rgb(252,169,30)" fg:x="10403" fg:w="88"/><text x="74.5253%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (23 samples, 0.16%)</title><rect x="74.7394%" y="388" width="0.1642%" height="15" fill="rgb(206,32,51)" fg:x="10468" fg:w="23"/><text x="74.9894%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (232 samples, 1.66%)</title><rect x="73.3614%" y="356" width="1.6564%" height="15" fill="rgb(250,172,42)" fg:x="10275" fg:w="232"/><text x="73.6114%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (452 samples, 3.23%)</title><rect x="71.9120%" y="340" width="3.2272%" height="15" fill="rgb(209,34,43)" fg:x="10072" fg:w="452"/><text x="72.1620%" y="350.50">ins..</text></g><g><title>insert (binary_tree.py:82) (24 samples, 0.17%)</title><rect x="75.1892%" y="388" width="0.1714%" height="15" fill="rgb(223,11,35)" fg:x="10531" fg:w="24"/><text x="75.4392%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="75.3748%" y="404" width="0.1428%" height="15" fill="rgb(251,219,26)" fg:x="10557" fg:w="20"/><text x="75.6248%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (36 samples, 0.26%)</title><rect x="75.3748%" y="388" width="0.2570%" height="15" fill="rgb(231,119,3)" fg:x="10557" fg:w="36"/><text x="75.6248%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (73 samples, 0.52%)</title><rect x="75.1892%" y="372" width="0.5212%" height="15" fill="rgb(216,97,11)" fg:x="10531" fg:w="73"/><text x="75.4392%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (15 samples, 0.11%)</title><rect x="75.7889%" y="420" width="0.1071%" height="15" fill="rgb(223,59,9)" fg:x="10615" fg:w="15"/><text x="76.0389%" y="430.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="75.7461%" y="404" width="0.1571%" height="15" fill="rgb(233,93,31)" fg:x="10609" fg:w="22"/><text x="75.9961%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (22 samples, 0.16%)</title><rect x="75.9032%" y="404" width="0.1571%" height="15" fill="rgb(239,81,33)" fg:x="10631" fg:w="22"/><text x="76.1532%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (45 samples, 0.32%)</title><rect x="75.7461%" y="388" width="0.3213%" height="15" fill="rgb(213,120,34)" fg:x="10609" fg:w="45"/><text x="75.9961%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (20 samples, 0.14%)</title><rect x="76.0674%" y="404" width="0.1428%" height="15" fill="rgb(243,49,53)" fg:x="10654" fg:w="20"/><text x="76.3174%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (37 samples, 0.26%)</title><rect x="76.0674%" y="388" width="0.2642%" height="15" fill="rgb(247,216,33)" fg:x="10654" fg:w="37"/><text x="76.3174%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (87 samples, 0.62%)</title><rect x="75.7461%" y="372" width="0.6212%" height="15" fill="rgb(226,26,14)" fg:x="10609" fg:w="87"/><text x="75.9961%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (179 samples, 1.28%)</title><rect x="75.1892%" y="356" width="1.2780%" height="15" fill="rgb(215,49,53)" fg:x="10531" fg:w="179"/><text x="75.4392%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (23 samples, 0.16%)</title><rect x="76.5315%" y="404" width="0.1642%" height="15" fill="rgb(245,162,40)" fg:x="10719" fg:w="23"/><text x="76.7815%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="76.7100%" y="420" width="0.1285%" height="15" fill="rgb(229,68,17)" fg:x="10744" fg:w="18"/><text x="76.9600%" y="430.50"></text></g><g><title>insert (binary_tree.py:89) (26 samples, 0.19%)</title><rect x="76.7100%" y="404" width="0.1856%" height="15" fill="rgb(213,182,10)" fg:x="10744" fg:w="26"/><text x="76.9600%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (53 samples, 0.38%)</title><rect x="76.5315%" y="388" width="0.3784%" height="15" fill="rgb(245,125,30)" fg:x="10719" fg:w="53"/><text x="76.7815%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="76.9170%" y="404" width="0.1499%" height="15" fill="rgb(232,202,2)" fg:x="10773" fg:w="21"/><text x="77.1670%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (18 samples, 0.13%)</title><rect x="77.0670%" y="404" width="0.1285%" height="15" fill="rgb(237,140,51)" fg:x="10794" fg:w="18"/><text x="77.3170%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (41 samples, 0.29%)</title><rect x="76.9170%" y="388" width="0.2927%" height="15" fill="rgb(236,157,25)" fg:x="10773" fg:w="41"/><text x="77.1670%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (107 samples, 0.76%)</title><rect x="76.5315%" y="372" width="0.7640%" height="15" fill="rgb(219,209,0)" fg:x="10719" fg:w="107"/><text x="76.7815%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="77.3311%" y="404" width="0.1142%" height="15" fill="rgb(240,116,54)" fg:x="10831" fg:w="16"/><text x="77.5811%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="77.4454%" y="404" width="0.1499%" height="15" fill="rgb(216,10,36)" fg:x="10847" fg:w="21"/><text x="77.6954%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (42 samples, 0.30%)</title><rect x="77.3311%" y="388" width="0.2999%" height="15" fill="rgb(222,72,44)" fg:x="10831" fg:w="42"/><text x="77.5811%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="77.6310%" y="404" width="0.1285%" height="15" fill="rgb(232,159,9)" fg:x="10873" fg:w="18"/><text x="77.8810%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (29 samples, 0.21%)</title><rect x="77.6310%" y="388" width="0.2071%" height="15" fill="rgb(210,39,32)" fg:x="10873" fg:w="29"/><text x="77.8810%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (78 samples, 0.56%)</title><rect x="77.3240%" y="372" width="0.5569%" height="15" fill="rgb(216,194,45)" fg:x="10830" fg:w="78"/><text x="77.5740%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (200 samples, 1.43%)</title><rect x="76.5315%" y="356" width="1.4280%" height="15" fill="rgb(218,18,35)" fg:x="10719" fg:w="200"/><text x="76.7815%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (21 samples, 0.15%)</title><rect x="77.9737%" y="356" width="0.1499%" height="15" fill="rgb(207,83,51)" fg:x="10921" fg:w="21"/><text x="78.2237%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (415 samples, 2.96%)</title><rect x="75.1749%" y="340" width="2.9630%" height="15" fill="rgb(225,63,43)" fg:x="10529" fg:w="415"/><text x="75.4249%" y="350.50">ins..</text></g><g><title>insert (binary_tree.py:92) (19 samples, 0.14%)</title><rect x="78.1379%" y="340" width="0.1357%" height="15" fill="rgb(207,57,36)" fg:x="10944" fg:w="19"/><text x="78.3879%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (17 samples, 0.12%)</title><rect x="78.1522%" y="356" width="0.1214%" height="15" fill="rgb(216,99,33)" fg:x="10946" fg:w="17"/><text x="78.4022%" y="366.50"></text></g><g><title>right_child (row.py:77) (17 samples, 0.12%)</title><rect x="78.1522%" y="372" width="0.1214%" height="15" fill="rgb(225,42,16)" fg:x="10946" fg:w="17"/><text x="78.4022%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (29 samples, 0.21%)</title><rect x="78.2879%" y="340" width="0.2071%" height="15" fill="rgb(220,201,45)" fg:x="10965" fg:w="29"/><text x="78.5379%" y="350.50"></text></g><g><title>right_subtree_height (row.py:89) (15 samples, 0.11%)</title><rect x="78.3878%" y="356" width="0.1071%" height="15" fill="rgb(225,33,4)" fg:x="10979" fg:w="15"/><text x="78.6378%" y="366.50"></text></g><g><title>right_child (row.py:77) (15 samples, 0.11%)</title><rect x="78.3878%" y="372" width="0.1071%" height="15" fill="rgb(224,33,50)" fg:x="10979" fg:w="15"/><text x="78.6378%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (935 samples, 6.68%)</title><rect x="71.9049%" y="324" width="6.6757%" height="15" fill="rgb(246,198,51)" fg:x="10071" fg:w="935"/><text x="72.1549%" y="334.50">insert (b..</text></g><g><title>fetch_row (row.py:160) (18 samples, 0.13%)</title><rect x="78.6234%" y="372" width="0.1285%" height="15" fill="rgb(205,22,4)" fg:x="11012" fg:w="18"/><text x="78.8734%" y="382.50"></text></g><g><title>insert (binary_tree.py:92) (25 samples, 0.18%)</title><rect x="78.5806%" y="324" width="0.1785%" height="15" fill="rgb(206,3,8)" fg:x="11006" fg:w="25"/><text x="78.8306%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (23 samples, 0.16%)</title><rect x="78.5949%" y="340" width="0.1642%" height="15" fill="rgb(251,23,15)" fg:x="11008" fg:w="23"/><text x="78.8449%" y="350.50"></text></g><g><title>right_child (row.py:77) (23 samples, 0.16%)</title><rect x="78.5949%" y="356" width="0.1642%" height="15" fill="rgb(252,88,28)" fg:x="11008" fg:w="23"/><text x="78.8449%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (16 samples, 0.11%)</title><rect x="78.8448%" y="372" width="0.1142%" height="15" fill="rgb(212,127,14)" fg:x="11043" fg:w="16"/><text x="79.0948%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (26 samples, 0.19%)</title><rect x="78.7805%" y="340" width="0.1856%" height="15" fill="rgb(247,145,37)" fg:x="11034" fg:w="26"/><text x="79.0305%" y="350.50"></text></g><g><title>left_child (row.py:81) (26 samples, 0.19%)</title><rect x="78.7805%" y="356" width="0.1856%" height="15" fill="rgb(209,117,53)" fg:x="11034" fg:w="26"/><text x="79.0305%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (32 samples, 0.23%)</title><rect x="79.0233%" y="372" width="0.2285%" height="15" fill="rgb(212,90,42)" fg:x="11068" fg:w="32"/><text x="79.2733%" y="382.50"></text></g><g><title>insert (binary_tree.py:95) (69 samples, 0.49%)</title><rect x="78.7805%" y="324" width="0.4926%" height="15" fill="rgb(218,164,37)" fg:x="11034" fg:w="69"/><text x="79.0305%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (43 samples, 0.31%)</title><rect x="78.9662%" y="340" width="0.3070%" height="15" fill="rgb(246,65,34)" fg:x="11060" fg:w="43"/><text x="79.2162%" y="350.50"></text></g><g><title>right_child (row.py:77) (43 samples, 0.31%)</title><rect x="78.9662%" y="356" width="0.3070%" height="15" fill="rgb(231,100,33)" fg:x="11060" fg:w="43"/><text x="79.2162%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (1,478 samples, 10.55%)</title><rect x="68.7777%" y="308" width="10.5526%" height="15" fill="rgb(228,126,14)" fg:x="9633" fg:w="1478"/><text x="69.0277%" y="318.50">insert (binary_..</text></g><g><title>fetch_row (row.py:160) (16 samples, 0.11%)</title><rect x="79.3803%" y="356" width="0.1142%" height="15" fill="rgb(215,173,21)" fg:x="11118" fg:w="16"/><text x="79.6303%" y="366.50"></text></g><g><title>insert (binary_tree.py:86) (25 samples, 0.18%)</title><rect x="79.3303%" y="308" width="0.1785%" height="15" fill="rgb(210,6,40)" fg:x="11111" fg:w="25"/><text x="79.5803%" y="318.50"></text></g><g><title>left_subtree_height (row.py:85) (23 samples, 0.16%)</title><rect x="79.3446%" y="324" width="0.1642%" height="15" fill="rgb(212,48,18)" fg:x="11113" fg:w="23"/><text x="79.5946%" y="334.50"></text></g><g><title>left_child (row.py:81) (23 samples, 0.16%)</title><rect x="79.3446%" y="340" width="0.1642%" height="15" fill="rgb(230,214,11)" fg:x="11113" fg:w="23"/><text x="79.5946%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (22 samples, 0.16%)</title><rect x="79.5802%" y="388" width="0.1571%" height="15" fill="rgb(254,105,39)" fg:x="11146" fg:w="22"/><text x="79.8302%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (42 samples, 0.30%)</title><rect x="79.5802%" y="372" width="0.2999%" height="15" fill="rgb(245,158,5)" fg:x="11146" fg:w="42"/><text x="79.8302%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (19 samples, 0.14%)</title><rect x="80.1014%" y="404" width="0.1357%" height="15" fill="rgb(249,208,11)" fg:x="11219" fg:w="19"/><text x="80.3514%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="80.0014%" y="388" width="0.2428%" height="15" fill="rgb(210,39,28)" fg:x="11205" fg:w="34"/><text x="80.2514%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (52 samples, 0.37%)</title><rect x="79.9158%" y="372" width="0.3713%" height="15" fill="rgb(211,56,53)" fg:x="11193" fg:w="52"/><text x="80.1658%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (104 samples, 0.74%)</title><rect x="79.5802%" y="356" width="0.7425%" height="15" fill="rgb(226,201,30)" fg:x="11146" fg:w="104"/><text x="79.8302%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (25 samples, 0.18%)</title><rect x="80.4298%" y="388" width="0.1785%" height="15" fill="rgb(239,101,34)" fg:x="11265" fg:w="25"/><text x="80.6798%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (39 samples, 0.28%)</title><rect x="80.3441%" y="372" width="0.2785%" height="15" fill="rgb(226,209,5)" fg:x="11253" fg:w="39"/><text x="80.5941%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (18 samples, 0.13%)</title><rect x="80.6297%" y="388" width="0.1285%" height="15" fill="rgb(250,105,47)" fg:x="11293" fg:w="18"/><text x="80.8797%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (26 samples, 0.19%)</title><rect x="80.7582%" y="388" width="0.1856%" height="15" fill="rgb(230,72,3)" fg:x="11311" fg:w="26"/><text x="81.0082%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (49 samples, 0.35%)</title><rect x="80.6297%" y="372" width="0.3499%" height="15" fill="rgb(232,218,39)" fg:x="11293" fg:w="49"/><text x="80.8797%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (100 samples, 0.71%)</title><rect x="80.3370%" y="356" width="0.7140%" height="15" fill="rgb(248,166,6)" fg:x="11252" fg:w="100"/><text x="80.5870%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (222 samples, 1.59%)</title><rect x="79.5802%" y="340" width="1.5850%" height="15" fill="rgb(247,89,20)" fg:x="11146" fg:w="222"/><text x="79.8302%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="81.2152%" y="388" width="0.1142%" height="15" fill="rgb(248,130,54)" fg:x="11375" fg:w="16"/><text x="81.4652%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (20 samples, 0.14%)</title><rect x="81.3294%" y="388" width="0.1428%" height="15" fill="rgb(234,196,4)" fg:x="11391" fg:w="20"/><text x="81.5794%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (38 samples, 0.27%)</title><rect x="81.2152%" y="372" width="0.2713%" height="15" fill="rgb(250,143,31)" fg:x="11375" fg:w="38"/><text x="81.4652%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (26 samples, 0.19%)</title><rect x="81.5079%" y="388" width="0.1856%" height="15" fill="rgb(211,110,34)" fg:x="11416" fg:w="26"/><text x="81.7579%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (21 samples, 0.15%)</title><rect x="81.6936%" y="404" width="0.1499%" height="15" fill="rgb(215,124,48)" fg:x="11442" fg:w="21"/><text x="81.9436%" y="414.50"></text></g><g><title>insert (binary_tree.py:89) (38 samples, 0.27%)</title><rect x="81.6936%" y="388" width="0.2713%" height="15" fill="rgb(216,46,13)" fg:x="11442" fg:w="38"/><text x="81.9436%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (65 samples, 0.46%)</title><rect x="81.5079%" y="372" width="0.4641%" height="15" fill="rgb(205,184,25)" fg:x="11416" fg:w="65"/><text x="81.7579%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (121 samples, 0.86%)</title><rect x="81.2081%" y="356" width="0.8639%" height="15" fill="rgb(228,1,10)" fg:x="11374" fg:w="121"/><text x="81.4581%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="82.0862%" y="388" width="0.1071%" height="15" fill="rgb(213,116,27)" fg:x="11497" fg:w="15"/><text x="82.3362%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="82.1933%" y="388" width="0.1142%" height="15" fill="rgb(241,95,50)" fg:x="11512" fg:w="16"/><text x="82.4433%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (34 samples, 0.24%)</title><rect x="82.0862%" y="372" width="0.2428%" height="15" fill="rgb(238,48,32)" fg:x="11497" fg:w="34"/><text x="82.3362%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="82.3718%" y="388" width="0.1142%" height="15" fill="rgb(235,113,49)" fg:x="11537" fg:w="16"/><text x="82.6218%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (32 samples, 0.23%)</title><rect x="82.3718%" y="372" width="0.2285%" height="15" fill="rgb(205,127,43)" fg:x="11537" fg:w="32"/><text x="82.6218%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (75 samples, 0.54%)</title><rect x="82.0791%" y="356" width="0.5355%" height="15" fill="rgb(250,162,2)" fg:x="11496" fg:w="75"/><text x="82.3291%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (217 samples, 1.55%)</title><rect x="81.2081%" y="340" width="1.5493%" height="15" fill="rgb(220,13,41)" fg:x="11374" fg:w="217"/><text x="81.4581%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (467 samples, 3.33%)</title><rect x="79.5659%" y="324" width="3.3343%" height="15" fill="rgb(249,221,25)" fg:x="11144" fg:w="467"/><text x="79.8159%" y="334.50">ins..</text></g><g><title>insert (binary_tree.py:86) (15 samples, 0.11%)</title><rect x="82.9002%" y="324" width="0.1071%" height="15" fill="rgb(215,208,19)" fg:x="11611" fg:w="15"/><text x="83.1502%" y="334.50"></text></g><g><title>left_subtree_height (row.py:85) (15 samples, 0.11%)</title><rect x="82.9002%" y="340" width="0.1071%" height="15" fill="rgb(236,175,2)" fg:x="11611" fg:w="15"/><text x="83.1502%" y="350.50"></text></g><g><title>left_child (row.py:81) (15 samples, 0.11%)</title><rect x="82.9002%" y="356" width="0.1071%" height="15" fill="rgb(241,52,2)" fg:x="11611" fg:w="15"/><text x="83.1502%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (19 samples, 0.14%)</title><rect x="83.0073%" y="372" width="0.1357%" height="15" fill="rgb(248,140,14)" fg:x="11626" fg:w="19"/><text x="83.2573%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (16 samples, 0.11%)</title><rect x="83.2429%" y="404" width="0.1142%" height="15" fill="rgb(253,22,42)" fg:x="11659" fg:w="16"/><text x="83.4929%" y="414.50"></text></g><g><title>insert (binary_tree.py:82) (31 samples, 0.22%)</title><rect x="83.1501%" y="388" width="0.2213%" height="15" fill="rgb(234,61,47)" fg:x="11646" fg:w="31"/><text x="83.4001%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="83.4000%" y="388" width="0.1499%" height="15" fill="rgb(208,226,15)" fg:x="11681" fg:w="21"/><text x="83.6500%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (57 samples, 0.41%)</title><rect x="83.1501%" y="372" width="0.4070%" height="15" fill="rgb(217,221,4)" fg:x="11646" fg:w="57"/><text x="83.4001%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (85 samples, 0.61%)</title><rect x="83.0073%" y="356" width="0.6069%" height="15" fill="rgb(212,174,34)" fg:x="11626" fg:w="85"/><text x="83.2573%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (26 samples, 0.19%)</title><rect x="83.7284%" y="372" width="0.1856%" height="15" fill="rgb(253,83,4)" fg:x="11727" fg:w="26"/><text x="83.9784%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (44 samples, 0.31%)</title><rect x="83.6499%" y="356" width="0.3142%" height="15" fill="rgb(250,195,49)" fg:x="11716" fg:w="44"/><text x="83.8999%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (142 samples, 1.01%)</title><rect x="83.0073%" y="340" width="1.0139%" height="15" fill="rgb(241,192,25)" fg:x="11626" fg:w="142"/><text x="83.2573%" y="350.50"></text></g><g><title>insert (binary_tree.py:82) (16 samples, 0.11%)</title><rect x="84.0497%" y="388" width="0.1142%" height="15" fill="rgb(208,124,10)" fg:x="11772" fg:w="16"/><text x="84.2997%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (30 samples, 0.21%)</title><rect x="84.0497%" y="372" width="0.2142%" height="15" fill="rgb(222,33,0)" fg:x="11772" fg:w="30"/><text x="84.2997%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (21 samples, 0.15%)</title><rect x="84.2782%" y="372" width="0.1499%" height="15" fill="rgb(234,209,28)" fg:x="11804" fg:w="21"/><text x="84.5282%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (67 samples, 0.48%)</title><rect x="84.0354%" y="356" width="0.4784%" height="15" fill="rgb(224,11,23)" fg:x="11770" fg:w="67"/><text x="84.2854%" y="366.50"></text></g><g><title>insert (binary_tree.py:82) (15 samples, 0.11%)</title><rect x="84.5352%" y="388" width="0.1071%" height="15" fill="rgb(232,99,1)" fg:x="11840" fg:w="15"/><text x="84.7852%" y="398.50"></text></g><g><title>insert (binary_tree.py:82) (34 samples, 0.24%)</title><rect x="84.5352%" y="372" width="0.2428%" height="15" fill="rgb(237,95,45)" fg:x="11840" fg:w="34"/><text x="84.7852%" y="382.50"></text></g><g><title>insert (binary_tree.py:82) (17 samples, 0.12%)</title><rect x="84.7851%" y="388" width="0.1214%" height="15" fill="rgb(208,109,11)" fg:x="11875" fg:w="17"/><text x="85.0351%" y="398.50"></text></g><g><title>insert (binary_tree.py:89) (34 samples, 0.24%)</title><rect x="84.7851%" y="372" width="0.2428%" height="15" fill="rgb(216,190,48)" fg:x="11875" fg:w="34"/><text x="85.0351%" y="382.50"></text></g><g><title>insert (binary_tree.py:89) (78 samples, 0.56%)</title><rect x="84.5352%" y="356" width="0.5569%" height="15" fill="rgb(251,171,36)" fg:x="11840" fg:w="78"/><text x="84.7852%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (159 samples, 1.14%)</title><rect x="84.0354%" y="340" width="1.1352%" height="15" fill="rgb(230,62,22)" fg:x="11770" fg:w="159"/><text x="84.2854%" y="350.50"></text></g><g><title>insert (binary_tree.py:89) (326 samples, 2.33%)</title><rect x="83.0073%" y="324" width="2.3276%" height="15" fill="rgb(225,114,35)" fg:x="11626" fg:w="326"/><text x="83.2573%" y="334.50">i..</text></g><g><title>left_subtree_height (row.py:85) (15 samples, 0.11%)</title><rect x="85.4205%" y="340" width="0.1071%" height="15" fill="rgb(215,118,42)" fg:x="11964" fg:w="15"/><text x="85.6705%" y="350.50"></text></g><g><title>left_child (row.py:81) (15 samples, 0.11%)</title><rect x="85.4205%" y="356" width="0.1071%" height="15" fill="rgb(243,119,21)" fg:x="11964" fg:w="15"/><text x="85.6705%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (36 samples, 0.26%)</title><rect x="85.4205%" y="324" width="0.2570%" height="15" fill="rgb(252,177,53)" fg:x="11964" fg:w="36"/><text x="85.6705%" y="334.50"></text></g><g><title>right_subtree_height (row.py:89) (21 samples, 0.15%)</title><rect x="85.5276%" y="340" width="0.1499%" height="15" fill="rgb(237,209,29)" fg:x="11979" fg:w="21"/><text x="85.7776%" y="350.50"></text></g><g><title>right_child (row.py:77) (21 samples, 0.15%)</title><rect x="85.5276%" y="356" width="0.1499%" height="15" fill="rgb(212,65,23)" fg:x="11979" fg:w="21"/><text x="85.7776%" y="366.50"></text></g><g><title>insert (binary_tree.py:89) (866 samples, 6.18%)</title><rect x="79.5588%" y="308" width="6.1831%" height="15" fill="rgb(230,222,46)" fg:x="11143" fg:w="866"/><text x="79.8088%" y="318.50">insert (..</text></g><g><title>insert (binary_tree.py:92) (20 samples, 0.14%)</title><rect x="85.7490%" y="308" width="0.1428%" height="15" fill="rgb(215,135,32)" fg:x="12010" fg:w="20"/><text x="85.9990%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (19 samples, 0.14%)</title><rect x="85.7561%" y="324" width="0.1357%" height="15" fill="rgb(246,101,22)" fg:x="12011" fg:w="19"/><text x="86.0061%" y="334.50"></text></g><g><title>right_child (row.py:77) (19 samples, 0.14%)</title><rect x="85.7561%" y="340" width="0.1357%" height="15" fill="rgb(206,107,13)" fg:x="12011" fg:w="19"/><text x="86.0061%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (50 samples, 0.36%)</title><rect x="85.9560%" y="356" width="0.3570%" height="15" fill="rgb(250,100,44)" fg:x="12039" fg:w="50"/><text x="86.2060%" y="366.50"></text></g><g><title>deserialize (row.py:147) (17 samples, 0.12%)</title><rect x="86.1916%" y="372" width="0.1214%" height="15" fill="rgb(231,147,38)" fg:x="12072" fg:w="17"/><text x="86.4416%" y="382.50"></text></g><g><title>left_subtree_height (row.py:85) (61 samples, 0.44%)</title><rect x="85.8989%" y="324" width="0.4355%" height="15" fill="rgb(229,8,40)" fg:x="12031" fg:w="61"/><text x="86.1489%" y="334.50"></text></g><g><title>left_child (row.py:81) (60 samples, 0.43%)</title><rect x="85.9060%" y="340" width="0.4284%" height="15" fill="rgb(221,135,30)" fg:x="12032" fg:w="60"/><text x="86.1560%" y="350.50"></text></g><g><title>fetch_row (row.py:158) (16 samples, 0.11%)</title><rect x="86.3416%" y="356" width="0.1142%" height="15" fill="rgb(249,193,18)" fg:x="12093" fg:w="16"/><text x="86.5916%" y="366.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (16 samples, 0.11%)</title><rect x="86.3416%" y="372" width="0.1142%" height="15" fill="rgb(209,133,39)" fg:x="12093" fg:w="16"/><text x="86.5916%" y="382.50"></text></g><g><title>deserialize (row.py:147) (20 samples, 0.14%)</title><rect x="86.6557%" y="372" width="0.1428%" height="15" fill="rgb(232,100,14)" fg:x="12137" fg:w="20"/><text x="86.9057%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (49 samples, 0.35%)</title><rect x="86.4629%" y="356" width="0.3499%" height="15" fill="rgb(224,185,1)" fg:x="12110" fg:w="49"/><text x="86.7129%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (137 samples, 0.98%)</title><rect x="85.8989%" y="308" width="0.9782%" height="15" fill="rgb(223,139,8)" fg:x="12031" fg:w="137"/><text x="86.1489%" y="318.50"></text></g><g><title>right_subtree_height (row.py:89) (76 samples, 0.54%)</title><rect x="86.3344%" y="324" width="0.5426%" height="15" fill="rgb(232,213,38)" fg:x="12092" fg:w="76"/><text x="86.5844%" y="334.50"></text></g><g><title>right_child (row.py:77) (75 samples, 0.54%)</title><rect x="86.3416%" y="340" width="0.5355%" height="15" fill="rgb(207,94,22)" fg:x="12093" fg:w="75"/><text x="86.5916%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (17 samples, 0.12%)</title><rect x="86.8985%" y="324" width="0.1214%" height="15" fill="rgb(219,183,54)" fg:x="12171" fg:w="17"/><text x="87.1485%" y="334.50"></text></g><g><title>insert (binary_tree.py:89) (2,560 samples, 18.28%)</title><rect x="68.7562%" y="292" width="18.2779%" height="15" fill="rgb(216,185,54)" fg:x="9630" fg:w="2560"/><text x="69.0062%" y="302.50">insert (binary_tree.py:89)</text></g><g><title>right_child (row.py:77) (22 samples, 0.16%)</title><rect x="86.8771%" y="308" width="0.1571%" height="15" fill="rgb(254,217,39)" fg:x="12168" fg:w="22"/><text x="87.1271%" y="318.50"></text></g><g><title>deserialize (row.py:147) (17 samples, 0.12%)</title><rect x="87.2840%" y="356" width="0.1214%" height="15" fill="rgb(240,178,23)" fg:x="12225" fg:w="17"/><text x="87.5340%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (42 samples, 0.30%)</title><rect x="87.1127%" y="340" width="0.2999%" height="15" fill="rgb(218,11,47)" fg:x="12201" fg:w="42"/><text x="87.3627%" y="350.50"></text></g><g><title>insert (binary_tree.py:92) (55 samples, 0.39%)</title><rect x="87.0341%" y="292" width="0.3927%" height="15" fill="rgb(218,51,51)" fg:x="12190" fg:w="55"/><text x="87.2841%" y="302.50"></text></g><g><title>right_subtree_height (row.py:89) (54 samples, 0.39%)</title><rect x="87.0413%" y="308" width="0.3855%" height="15" fill="rgb(238,126,27)" fg:x="12191" fg:w="54"/><text x="87.2913%" y="318.50"></text></g><g><title>right_child (row.py:77) (54 samples, 0.39%)</title><rect x="87.0413%" y="324" width="0.3855%" height="15" fill="rgb(249,202,22)" fg:x="12191" fg:w="54"/><text x="87.2913%" y="334.50"></text></g><g><title>fetch_row (row.py:158) (18 samples, 0.13%)</title><rect x="87.5339%" y="340" width="0.1285%" height="15" fill="rgb(254,195,49)" fg:x="12260" fg:w="18"/><text x="87.7839%" y="350.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (18 samples, 0.13%)</title><rect x="87.5339%" y="356" width="0.1285%" height="15" fill="rgb(208,123,14)" fg:x="12260" fg:w="18"/><text x="87.7839%" y="366.50"></text></g><g><title>deserialize (row.py:141) (20 samples, 0.14%)</title><rect x="87.7481%" y="356" width="0.1428%" height="15" fill="rgb(224,200,8)" fg:x="12290" fg:w="20"/><text x="87.9981%" y="366.50"></text></g><g><title>deserialize (data_types.py:64) (18 samples, 0.13%)</title><rect x="87.7624%" y="372" width="0.1285%" height="15" fill="rgb(217,61,36)" fg:x="12292" fg:w="18"/><text x="88.0124%" y="382.50"></text></g><g><title>deserialize (row.py:142) (17 samples, 0.12%)</title><rect x="87.8909%" y="356" width="0.1214%" height="15" fill="rgb(206,35,45)" fg:x="12310" fg:w="17"/><text x="88.1409%" y="366.50"></text></g><g><title>deserialize (data_types.py:171) (16 samples, 0.11%)</title><rect x="87.8980%" y="372" width="0.1142%" height="15" fill="rgb(217,65,33)" fg:x="12311" fg:w="16"/><text x="88.1480%" y="382.50"></text></g><g><title>deserialize (row.py:147) (30 samples, 0.21%)</title><rect x="88.1479%" y="356" width="0.2142%" height="15" fill="rgb(222,158,48)" fg:x="12346" fg:w="30"/><text x="88.3979%" y="366.50"></text></g><g><title>fetch_row (row.py:160) (96 samples, 0.69%)</title><rect x="87.6838%" y="340" width="0.6854%" height="15" fill="rgb(254,2,54)" fg:x="12281" fg:w="96"/><text x="87.9338%" y="350.50"></text></g><g><title>left_subtree_height (row.py:85) (140 samples, 1.00%)</title><rect x="87.4839%" y="308" width="0.9996%" height="15" fill="rgb(250,143,38)" fg:x="12253" fg:w="140"/><text x="87.7339%" y="318.50"></text></g><g><title>left_child (row.py:81) (139 samples, 0.99%)</title><rect x="87.4911%" y="324" width="0.9924%" height="15" fill="rgb(248,25,0)" fg:x="12254" fg:w="139"/><text x="87.7411%" y="334.50"></text></g><g><title>fetch_row (row.py:161) (16 samples, 0.11%)</title><rect x="88.3693%" y="340" width="0.1142%" height="15" fill="rgb(206,152,27)" fg:x="12377" fg:w="16"/><text x="88.6193%" y="350.50"></text></g><g><title>fetch_row (row.py:158) (17 samples, 0.12%)</title><rect x="88.5049%" y="340" width="0.1214%" height="15" fill="rgb(240,77,30)" fg:x="12396" fg:w="17"/><text x="88.7549%" y="350.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (17 samples, 0.12%)</title><rect x="88.5049%" y="356" width="0.1214%" height="15" fill="rgb(231,5,3)" fg:x="12396" fg:w="17"/><text x="88.7549%" y="366.50"></text></g><g><title>deserialize (row.py:141) (16 samples, 0.11%)</title><rect x="88.6834%" y="356" width="0.1142%" height="15" fill="rgb(207,226,32)" fg:x="12421" fg:w="16"/><text x="88.9334%" y="366.50"></text></g><g><title>deserialize (data_types.py:64) (15 samples, 0.11%)</title><rect x="88.6906%" y="372" width="0.1071%" height="15" fill="rgb(222,207,47)" fg:x="12422" fg:w="15"/><text x="88.9406%" y="382.50"></text></g><g><title>fetch_row (row.py:160) (95 samples, 0.68%)</title><rect x="88.6549%" y="340" width="0.6783%" height="15" fill="rgb(229,115,45)" fg:x="12417" fg:w="95"/><text x="88.9049%" y="350.50"></text></g><g><title>deserialize (row.py:147) (35 samples, 0.25%)</title><rect x="89.0833%" y="356" width="0.2499%" height="15" fill="rgb(224,191,6)" fg:x="12477" fg:w="35"/><text x="89.3333%" y="366.50"></text></g><g><title>insert (binary_tree.py:95) (273 samples, 1.95%)</title><rect x="87.4768%" y="292" width="1.9492%" height="15" fill="rgb(230,227,24)" fg:x="12252" fg:w="273"/><text x="87.7268%" y="302.50">i..</text></g><g><title>right_subtree_height (row.py:89) (132 samples, 0.94%)</title><rect x="88.4835%" y="308" width="0.9425%" height="15" fill="rgb(228,80,19)" fg:x="12393" fg:w="132"/><text x="88.7335%" y="318.50"></text></g><g><title>right_child (row.py:77) (130 samples, 0.93%)</title><rect x="88.4978%" y="324" width="0.9282%" height="15" fill="rgb(247,229,0)" fg:x="12395" fg:w="130"/><text x="88.7478%" y="334.50"></text></g><g><title>fetch_row (row.py:160) (52 samples, 0.37%)</title><rect x="89.5045%" y="308" width="0.3713%" height="15" fill="rgb(237,194,15)" fg:x="12536" fg:w="52"/><text x="89.7545%" y="318.50"></text></g><g><title>deserialize (row.py:147) (24 samples, 0.17%)</title><rect x="89.7044%" y="324" width="0.1714%" height="15" fill="rgb(219,203,20)" fg:x="12564" fg:w="24"/><text x="89.9544%" y="334.50"></text></g><g><title>insert (binary_tree.py:89) (7,405 samples, 52.87%)</title><rect x="37.0555%" y="276" width="52.8702%" height="15" fill="rgb(234,128,8)" fg:x="5190" fg:w="7405"/><text x="37.3055%" y="286.50">insert (binary_tree.py:89)</text></g><g><title>right_child (row.py:77) (70 samples, 0.50%)</title><rect x="89.4260%" y="292" width="0.4998%" height="15" fill="rgb(248,202,8)" fg:x="12525" fg:w="70"/><text x="89.6760%" y="302.50"></text></g><g><title>fetch_row (row.py:158) (15 samples, 0.11%)</title><rect x="90.0614%" y="324" width="0.1071%" height="15" fill="rgb(206,104,37)" fg:x="12614" fg:w="15"/><text x="90.3114%" y="334.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (15 samples, 0.11%)</title><rect x="90.0614%" y="340" width="0.1071%" height="15" fill="rgb(223,8,27)" fg:x="12614" fg:w="15"/><text x="90.3114%" y="350.50"></text></g><g><title>deserialize (row.py:142) (17 samples, 0.12%)</title><rect x="90.3042%" y="340" width="0.1214%" height="15" fill="rgb(216,217,28)" fg:x="12648" fg:w="17"/><text x="90.5542%" y="350.50"></text></g><g><title>deserialize (row.py:147) (40 samples, 0.29%)</title><rect x="90.6469%" y="340" width="0.2856%" height="15" fill="rgb(249,199,1)" fg:x="12696" fg:w="40"/><text x="90.8969%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (106 samples, 0.76%)</title><rect x="90.1828%" y="324" width="0.7568%" height="15" fill="rgb(240,85,17)" fg:x="12631" fg:w="106"/><text x="90.4328%" y="334.50"></text></g><g><title>insert (binary_tree.py:92) (148 samples, 1.06%)</title><rect x="89.9257%" y="276" width="1.0567%" height="15" fill="rgb(206,108,45)" fg:x="12595" fg:w="148"/><text x="90.1757%" y="286.50"></text></g><g><title>right_subtree_height (row.py:89) (141 samples, 1.01%)</title><rect x="89.9757%" y="292" width="1.0067%" height="15" fill="rgb(245,210,41)" fg:x="12602" fg:w="141"/><text x="90.2257%" y="302.50"></text></g><g><title>right_child (row.py:77) (134 samples, 0.96%)</title><rect x="90.0257%" y="308" width="0.9567%" height="15" fill="rgb(206,13,37)" fg:x="12609" fg:w="134"/><text x="90.2757%" y="318.50"></text></g><g><title>insert (binary_tree.py:93) (18 samples, 0.13%)</title><rect x="90.9824%" y="276" width="0.1285%" height="15" fill="rgb(250,61,18)" fg:x="12743" fg:w="18"/><text x="91.2324%" y="286.50"></text></g><g><title>write_to_page (row.py:111) (16 samples, 0.11%)</title><rect x="90.9967%" y="292" width="0.1142%" height="15" fill="rgb(235,172,48)" fg:x="12745" fg:w="16"/><text x="91.2467%" y="302.50"></text></g><g><title>__init__ (data_types.py:13) (16 samples, 0.11%)</title><rect x="91.2395%" y="356" width="0.1142%" height="15" fill="rgb(249,201,17)" fg:x="12779" fg:w="16"/><text x="91.4895%" y="366.50"></text></g><g><title>fetch_row (row.py:158) (36 samples, 0.26%)</title><rect x="91.1609%" y="324" width="0.2570%" height="15" fill="rgb(219,208,6)" fg:x="12768" fg:w="36"/><text x="91.4109%" y="334.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (35 samples, 0.25%)</title><rect x="91.1681%" y="340" width="0.2499%" height="15" fill="rgb(248,31,23)" fg:x="12769" fg:w="35"/><text x="91.4181%" y="350.50"></text></g><g><title>deserialize (row.py:141) (20 samples, 0.14%)</title><rect x="91.5036%" y="340" width="0.1428%" height="15" fill="rgb(245,15,42)" fg:x="12816" fg:w="20"/><text x="91.7536%" y="350.50"></text></g><g><title>deserialize (data_types.py:64) (16 samples, 0.11%)</title><rect x="91.5322%" y="356" width="0.1142%" height="15" fill="rgb(222,217,39)" fg:x="12820" fg:w="16"/><text x="91.7822%" y="366.50"></text></g><g><title>deserialize (row.py:143) (20 samples, 0.14%)</title><rect x="91.7321%" y="340" width="0.1428%" height="15" fill="rgb(210,219,27)" fg:x="12848" fg:w="20"/><text x="91.9821%" y="350.50"></text></g><g><title>deserialize (data_types.py:64) (16 samples, 0.11%)</title><rect x="91.7607%" y="356" width="0.1142%" height="15" fill="rgb(252,166,36)" fg:x="12852" fg:w="16"/><text x="92.0107%" y="366.50"></text></g><g><title>deserialize (row.py:145) (16 samples, 0.11%)</title><rect x="91.9677%" y="340" width="0.1142%" height="15" fill="rgb(245,132,34)" fg:x="12881" fg:w="16"/><text x="92.2177%" y="350.50"></text></g><g><title>__init__ (row.py:53) (17 samples, 0.12%)</title><rect x="92.1177%" y="356" width="0.1214%" height="15" fill="rgb(236,54,3)" fg:x="12902" fg:w="17"/><text x="92.3677%" y="366.50"></text></g><g><title>deserialize (row.py:147) (55 samples, 0.39%)</title><rect x="92.0820%" y="340" width="0.3927%" height="15" fill="rgb(241,173,43)" fg:x="12897" fg:w="55"/><text x="92.3320%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (149 samples, 1.06%)</title><rect x="91.4251%" y="324" width="1.0638%" height="15" fill="rgb(215,190,9)" fg:x="12805" fg:w="149"/><text x="91.6751%" y="334.50"></text></g><g><title>left_subtree_height (row.py:85) (207 samples, 1.48%)</title><rect x="91.1324%" y="292" width="1.4779%" height="15" fill="rgb(242,101,16)" fg:x="12764" fg:w="207"/><text x="91.3824%" y="302.50"></text></g><g><title>left_child (row.py:81) (204 samples, 1.46%)</title><rect x="91.1538%" y="308" width="1.4565%" height="15" fill="rgb(223,190,21)" fg:x="12767" fg:w="204"/><text x="91.4038%" y="318.50"></text></g><g><title>fetch_row (row.py:161) (17 samples, 0.12%)</title><rect x="92.4889%" y="324" width="0.1214%" height="15" fill="rgb(215,228,25)" fg:x="12954" fg:w="17"/><text x="92.7389%" y="334.50"></text></g><g><title>fetch_row (row.py:158) (36 samples, 0.26%)</title><rect x="92.6960%" y="324" width="0.2570%" height="15" fill="rgb(225,36,22)" fg:x="12983" fg:w="36"/><text x="92.9460%" y="334.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (36 samples, 0.26%)</title><rect x="92.6960%" y="340" width="0.2570%" height="15" fill="rgb(251,106,46)" fg:x="12983" fg:w="36"/><text x="92.9460%" y="350.50"></text></g><g><title>deserialize (row.py:141) (15 samples, 0.11%)</title><rect x="93.1315%" y="340" width="0.1071%" height="15" fill="rgb(208,90,1)" fg:x="13044" fg:w="15"/><text x="93.3815%" y="350.50"></text></g><g><title>deserialize (row.py:143) (15 samples, 0.11%)</title><rect x="93.3386%" y="340" width="0.1071%" height="15" fill="rgb(243,10,4)" fg:x="13073" fg:w="15"/><text x="93.5886%" y="350.50"></text></g><g><title>deserialize (data_types.py:64) (15 samples, 0.11%)</title><rect x="93.3386%" y="356" width="0.1071%" height="15" fill="rgb(212,137,27)" fg:x="13073" fg:w="15"/><text x="93.5886%" y="366.50"></text></g><g><title>deserialize (row.py:144) (18 samples, 0.13%)</title><rect x="93.4457%" y="340" width="0.1285%" height="15" fill="rgb(231,220,49)" fg:x="13088" fg:w="18"/><text x="93.6957%" y="350.50"></text></g><g><title>deserialize (row.py:145) (20 samples, 0.14%)</title><rect x="93.5742%" y="340" width="0.1428%" height="15" fill="rgb(237,96,20)" fg:x="13106" fg:w="20"/><text x="93.8242%" y="350.50"></text></g><g><title>deserialize (data_types.py:90) (19 samples, 0.14%)</title><rect x="93.5813%" y="356" width="0.1357%" height="15" fill="rgb(239,229,30)" fg:x="13107" fg:w="19"/><text x="93.8313%" y="366.50"></text></g><g><title>deserialize (row.py:147) (46 samples, 0.33%)</title><rect x="93.7170%" y="340" width="0.3284%" height="15" fill="rgb(219,65,33)" fg:x="13126" fg:w="46"/><text x="93.9670%" y="350.50"></text></g><g><title>fetch_row (row.py:160) (148 samples, 1.06%)</title><rect x="93.0030%" y="324" width="1.0567%" height="15" fill="rgb(243,134,7)" fg:x="13026" fg:w="148"/><text x="93.2530%" y="334.50"></text></g><g><title>insert (table.py:51) (13,090 samples, 93.46%)</title><rect x="0.7497%" y="260" width="93.4599%" height="15" fill="rgb(216,177,54)" fg:x="105" fg:w="13090"/><text x="0.9997%" y="270.50">insert (table.py:51)</text></g><g><title>insert (binary_tree.py:95) (434 samples, 3.10%)</title><rect x="91.1110%" y="276" width="3.0987%" height="15" fill="rgb(211,160,20)" fg:x="12761" fg:w="434"/><text x="91.3610%" y="286.50">ins..</text></g><g><title>right_subtree_height (row.py:89) (224 samples, 1.60%)</title><rect x="92.6103%" y="292" width="1.5993%" height="15" fill="rgb(239,85,39)" fg:x="12971" fg:w="224"/><text x="92.8603%" y="302.50"></text></g><g><title>right_child (row.py:77) (216 samples, 1.54%)</title><rect x="92.6674%" y="308" width="1.5422%" height="15" fill="rgb(232,125,22)" fg:x="12979" fg:w="216"/><text x="92.9174%" y="318.50"></text></g><g><title>fetch_row (row.py:161) (21 samples, 0.15%)</title><rect x="94.0597%" y="324" width="0.1499%" height="15" fill="rgb(244,57,34)" fg:x="13174" fg:w="21"/><text x="94.3097%" y="334.50"></text></g><g><title>page_write (pager.py:93) (26 samples, 0.19%)</title><rect x="94.2739%" y="276" width="0.1856%" height="15" fill="rgb(214,203,32)" fg:x="13204" fg:w="26"/><text x="94.5239%" y="286.50"></text></g><g><title>get_pager_location_from_offset (pager.py:90) (25 samples, 0.18%)</title><rect x="94.2810%" y="292" width="0.1785%" height="15" fill="rgb(207,58,43)" fg:x="13205" fg:w="25"/><text x="94.5310%" y="302.50"></text></g><g><title>insert (table.py:53) (40 samples, 0.29%)</title><rect x="94.2525%" y="260" width="0.2856%" height="15" fill="rgb(215,193,15)" fg:x="13201" fg:w="40"/><text x="94.5025%" y="270.50"></text></g><g><title>pager_flush (pager.py:124) (62 samples, 0.44%)</title><rect x="94.6737%" y="276" width="0.4427%" height="15" fill="rgb(232,15,44)" fg:x="13260" fg:w="62"/><text x="94.9237%" y="286.50"></text></g><g><title>pager_flush (pager.py:125) (248 samples, 1.77%)</title><rect x="95.1164%" y="276" width="1.7707%" height="15" fill="rgb(212,3,48)" fg:x="13322" fg:w="248"/><text x="95.3664%" y="286.50">p..</text></g><g><title>pager_flush (pager.py:126) (244 samples, 1.74%)</title><rect x="96.8870%" y="276" width="1.7421%" height="15" fill="rgb(218,128,7)" fg:x="13570" fg:w="244"/><text x="97.1370%" y="286.50"></text></g><g><title>test_insert_lotta_rows (db/test.py:111) (13,761 samples, 98.25%)</title><rect x="0.5997%" y="244" width="98.2507%" height="15" fill="rgb(226,216,39)" fg:x="84" fg:w="13761"/><text x="0.8497%" y="254.50">test_insert_lotta_rows (db/test.py:111)</text></g><g><title>insert (table.py:61) (590 samples, 4.21%)</title><rect x="94.6380%" y="260" width="4.2125%" height="15" fill="rgb(243,47,51)" fg:x="13255" fg:w="590"/><text x="94.8880%" y="270.50">inser..</text></g><g><title>traverse (binary_tree.py:140) (22 samples, 0.16%)</title><rect x="98.8648%" y="276" width="0.1571%" height="15" fill="rgb(241,183,40)" fg:x="13847" fg:w="22"/><text x="99.1148%" y="286.50"></text></g><g><title>traverse (binary_tree.py:140) (54 samples, 0.39%)</title><rect x="98.8648%" y="260" width="0.3855%" height="15" fill="rgb(231,217,32)" fg:x="13847" fg:w="54"/><text x="99.1148%" y="270.50"></text></g><g><title>traverse (binary_tree.py:148) (32 samples, 0.23%)</title><rect x="99.0218%" y="276" width="0.2285%" height="15" fill="rgb(229,61,38)" fg:x="13869" fg:w="32"/><text x="99.2718%" y="286.50"></text></g><g><title>traverse (binary_tree.py:148) (18 samples, 0.13%)</title><rect x="99.1218%" y="292" width="0.1285%" height="15" fill="rgb(225,210,5)" fg:x="13883" fg:w="18"/><text x="99.3718%" y="302.50"></text></g><g><title>traverse (binary_tree.py:140) (31 samples, 0.22%)</title><rect x="99.2503%" y="292" width="0.2213%" height="15" fill="rgb(231,79,45)" fg:x="13901" fg:w="31"/><text x="99.5003%" y="302.50"></text></g><g><title>traverse (binary_tree.py:148) (19 samples, 0.14%)</title><rect x="99.3360%" y="308" width="0.1357%" height="15" fill="rgb(224,100,7)" fg:x="13913" fg:w="19"/><text x="99.5860%" y="318.50"></text></g><g><title>traverse (binary_tree.py:140) (58 samples, 0.41%)</title><rect x="99.2503%" y="276" width="0.4141%" height="15" fill="rgb(241,198,18)" fg:x="13901" fg:w="58"/><text x="99.5003%" y="286.50"></text></g><g><title>traverse (binary_tree.py:148) (27 samples, 0.19%)</title><rect x="99.4717%" y="292" width="0.1928%" height="15" fill="rgb(252,97,53)" fg:x="13932" fg:w="27"/><text x="99.7217%" y="302.50"></text></g><g><title>traverse (binary_tree.py:148) (15 samples, 0.11%)</title><rect x="99.5573%" y="308" width="0.1071%" height="15" fill="rgb(220,88,7)" fg:x="13944" fg:w="15"/><text x="99.8073%" y="318.50"></text></g><g><title>traverse (binary_tree.py:140) (15 samples, 0.11%)</title><rect x="99.7001%" y="324" width="0.1071%" height="15" fill="rgb(213,176,14)" fg:x="13964" fg:w="15"/><text x="99.9501%" y="334.50"></text></g><g><title>traverse (binary_tree.py:140) (24 samples, 0.17%)</title><rect x="99.6644%" y="292" width="0.1714%" height="15" fill="rgb(246,73,7)" fg:x="13959" fg:w="24"/><text x="99.9144%" y="302.50"></text></g><g><title>traverse (binary_tree.py:148) (19 samples, 0.14%)</title><rect x="99.7001%" y="308" width="0.1357%" height="15" fill="rgb(245,64,36)" fg:x="13964" fg:w="19"/><text x="99.9501%" y="318.50"></text></g><g><title>test_insert_lotta_rows (db/test.py:117) (147 samples, 1.05%)</title><rect x="98.8648%" y="244" width="1.0496%" height="15" fill="rgb(245,80,10)" fg:x="13847" fg:w="147"/><text x="99.1148%" y="254.50"></text></g><g><title>traverse (binary_tree.py:148) (93 samples, 0.66%)</title><rect x="99.2503%" y="260" width="0.6640%" height="15" fill="rgb(232,107,50)" fg:x="13901" fg:w="93"/><text x="99.5003%" y="270.50"></text></g><g><title>traverse (binary_tree.py:148) (35 samples, 0.25%)</title><rect x="99.6644%" y="276" width="0.2499%" height="15" fill="rgb(253,3,0)" fg:x="13959" fg:w="35"/><text x="99.9144%" y="286.50"></text></g><g><title>run (unittest/case.py:623) (13,992 samples, 99.90%)</title><rect x="0.0428%" y="212" width="99.9000%" height="15" fill="rgb(212,99,53)" fg:x="6" fg:w="13992"/><text x="0.2928%" y="222.50">run (unittest/case.py:623)</text></g><g><title>_callTestMethod (unittest/case.py:579) (13,992 samples, 99.90%)</title><rect x="0.0428%" y="228" width="99.9000%" height="15" fill="rgb(249,111,54)" fg:x="6" fg:w="13992"/><text x="0.2928%" y="238.50">_callTestMethod (unittest/case.py:579)</text></g><g><title>&lt;module&gt; (db/test.py:124) (13,998 samples, 99.94%)</title><rect x="0.0071%" y="68" width="99.9429%" height="15" fill="rgb(249,55,30)" fg:x="1" fg:w="13998"/><text x="0.2571%" y="78.50">&lt;module&gt; (db/test.py:124)</text></g><g><title>__init__ (unittest/main.py:102) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="84" width="99.9072%" height="15" fill="rgb(237,47,42)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="94.50">__init__ (unittest/main.py:102)</text></g><g><title>runTests (unittest/main.py:274) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="100" width="99.9072%" height="15" fill="rgb(211,20,18)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="110.50">runTests (unittest/main.py:274)</text></g><g><title>run (unittest/runner.py:217) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="116" width="99.9072%" height="15" fill="rgb(231,203,46)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="126.50">run (unittest/runner.py:217)</text></g><g><title>__call__ (unittest/suite.py:84) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="132" width="99.9072%" height="15" fill="rgb(237,142,3)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="142.50">__call__ (unittest/suite.py:84)</text></g><g><title>run (unittest/suite.py:122) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="148" width="99.9072%" height="15" fill="rgb(241,107,1)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="158.50">run (unittest/suite.py:122)</text></g><g><title>__call__ (unittest/suite.py:84) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="164" width="99.9072%" height="15" fill="rgb(229,83,13)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="174.50">__call__ (unittest/suite.py:84)</text></g><g><title>run (unittest/suite.py:122) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="180" width="99.9072%" height="15" fill="rgb(241,91,40)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="190.50">run (unittest/suite.py:122)</text></g><g><title>__call__ (unittest/case.py:678) (13,993 samples, 99.91%)</title><rect x="0.0428%" y="196" width="99.9072%" height="15" fill="rgb(225,3,45)" fg:x="6" fg:w="13993"/><text x="0.2928%" y="206.50">__call__ (unittest/case.py:678)</text></g><g><title>all (14,006 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(244,223,14)" fg:x="0" fg:w="14006"/><text x="0.2500%" y="62.50"></text></g></svg></svg>