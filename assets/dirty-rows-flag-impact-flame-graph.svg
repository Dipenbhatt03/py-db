<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="714" onload="init(evt)" viewBox="0 0 1200 714" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="714" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg python test.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="703.00"> </text><svg id="frames" x="10" width="1180" total_samples="1514"><g><title>&lt;module&gt; (shutil.py:22) (2 samples, 0.13%)</title><rect x="0.0000%" y="276" width="0.1321%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="0.0000%" y="292" width="0.1321%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="0.0000%" y="308" width="0.1321%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.13%)</title><rect x="0.0000%" y="324" width="0.1321%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.13%)</title><rect x="0.0000%" y="340" width="0.1321%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="0.0000%" y="356" width="0.1321%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="366.50"></text></g><g><title>&lt;module&gt; (bz2.py:17) (2 samples, 0.13%)</title><rect x="0.0000%" y="372" width="0.1321%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2"/><text x="0.2500%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="0.0000%" y="388" width="0.1321%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2"/><text x="0.2500%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="0.0000%" y="404" width="0.1321%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2"/><text x="0.2500%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:676) (2 samples, 0.13%)</title><rect x="0.0000%" y="420" width="0.1321%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="2"/><text x="0.2500%" y="430.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:573) (2 samples, 0.13%)</title><rect x="0.0000%" y="436" width="0.1321%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="2"/><text x="0.2500%" y="446.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1233) (2 samples, 0.13%)</title><rect x="0.0000%" y="452" width="0.1321%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="2"/><text x="0.2500%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="0.0000%" y="468" width="0.1321%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="2"/><text x="0.2500%" y="478.50"></text></g><g><title>__init__ (unittest/main.py:101) (3 samples, 0.20%)</title><rect x="0.0000%" y="84" width="0.1982%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="3"/><text x="0.2500%" y="94.50"></text></g><g><title>parseArgs (unittest/main.py:124) (3 samples, 0.20%)</title><rect x="0.0000%" y="100" width="0.1982%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="3"/><text x="0.2500%" y="110.50"></text></g><g><title>_initArgParsers (unittest/main.py:165) (3 samples, 0.20%)</title><rect x="0.0000%" y="116" width="0.1982%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="3"/><text x="0.2500%" y="126.50"></text></g><g><title>_getParentArgParser (unittest/main.py:172) (3 samples, 0.20%)</title><rect x="0.0000%" y="132" width="0.1982%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="3"/><text x="0.2500%" y="142.50"></text></g><g><title>add_argument (argparse.py:1464) (3 samples, 0.20%)</title><rect x="0.0000%" y="148" width="0.1982%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="3"/><text x="0.2500%" y="158.50"></text></g><g><title>_get_formatter (argparse.py:2588) (3 samples, 0.20%)</title><rect x="0.0000%" y="164" width="0.1982%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="174.50"></text></g><g><title>__init__ (argparse.py:172) (3 samples, 0.20%)</title><rect x="0.0000%" y="180" width="0.1982%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="3"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (3 samples, 0.20%)</title><rect x="0.0000%" y="196" width="0.1982%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (3 samples, 0.20%)</title><rect x="0.0000%" y="212" width="0.1982%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="3"/><text x="0.2500%" y="222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.20%)</title><rect x="0.0000%" y="228" width="0.1982%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="3"/><text x="0.2500%" y="238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.20%)</title><rect x="0.0000%" y="244" width="0.1982%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="3"/><text x="0.2500%" y="254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.20%)</title><rect x="0.0000%" y="260" width="0.1982%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="3"/><text x="0.2500%" y="270.50"></text></g><g><title>_randbelow_with_getrandbits (random.py:238) (2 samples, 0.13%)</title><rect x="0.8587%" y="292" width="0.1321%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="2"/><text x="1.1087%" y="302.50"></text></g><g><title>test_insert_lotta_rows (db/test.py:160) (15 samples, 0.99%)</title><rect x="0.2642%" y="244" width="0.9908%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="15"/><text x="0.5142%" y="254.50"></text></g><g><title>randint (random.py:362) (15 samples, 0.99%)</title><rect x="0.2642%" y="260" width="0.9908%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="15"/><text x="0.5142%" y="270.50"></text></g><g><title>randrange (random.py:344) (8 samples, 0.53%)</title><rect x="0.7266%" y="276" width="0.5284%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="8"/><text x="0.9766%" y="286.50"></text></g><g><title>_randbelow_with_getrandbits (random.py:240) (3 samples, 0.20%)</title><rect x="1.0568%" y="292" width="0.1982%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="3"/><text x="1.3068%" y="302.50"></text></g><g><title>insert (table.py:75) (2 samples, 0.13%)</title><rect x="1.3210%" y="260" width="0.1321%" height="15" fill="rgb(209,103,24)" fg:x="20" fg:w="2"/><text x="1.5710%" y="270.50"></text></g><g><title>__str__ (row.py:167) (3 samples, 0.20%)</title><rect x="2.0476%" y="276" width="0.1982%" height="15" fill="rgb(229,88,8)" fg:x="31" fg:w="3"/><text x="2.2976%" y="286.50"></text></g><g><title>insert (table.py:78) (12 samples, 0.79%)</title><rect x="1.5192%" y="260" width="0.7926%" height="15" fill="rgb(213,181,19)" fg:x="23" fg:w="12"/><text x="1.7692%" y="270.50"></text></g><g><title>insert (binary_tree.py:163) (5 samples, 0.33%)</title><rect x="2.4439%" y="276" width="0.3303%" height="15" fill="rgb(254,191,54)" fg:x="37" fg:w="5"/><text x="2.6939%" y="286.50"></text></g><g><title>__repr__ (row.py:170) (4 samples, 0.26%)</title><rect x="2.5099%" y="292" width="0.2642%" height="15" fill="rgb(241,83,37)" fg:x="38" fg:w="4"/><text x="2.7599%" y="302.50"></text></g><g><title>insert (binary_tree.py:163) (4 samples, 0.26%)</title><rect x="2.7741%" y="292" width="0.2642%" height="15" fill="rgb(233,36,39)" fg:x="42" fg:w="4"/><text x="3.0241%" y="302.50"></text></g><g><title>__repr__ (row.py:170) (2 samples, 0.13%)</title><rect x="2.9062%" y="308" width="0.1321%" height="15" fill="rgb(226,3,54)" fg:x="44" fg:w="2"/><text x="3.1562%" y="318.50"></text></g><g><title>__repr__ (row.py:170) (2 samples, 0.13%)</title><rect x="3.0383%" y="340" width="0.1321%" height="15" fill="rgb(245,192,40)" fg:x="46" fg:w="2"/><text x="3.2883%" y="350.50"></text></g><g><title>insert (binary_tree.py:163) (3 samples, 0.20%)</title><rect x="3.0383%" y="324" width="0.1982%" height="15" fill="rgb(238,167,29)" fg:x="46" fg:w="3"/><text x="3.2883%" y="334.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="3.2365%" y="340" width="0.1982%" height="15" fill="rgb(232,182,51)" fg:x="49" fg:w="3"/><text x="3.4865%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="3.2365%" y="324" width="0.3963%" height="15" fill="rgb(231,60,39)" fg:x="49" fg:w="6"/><text x="3.4865%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="3.4346%" y="340" width="0.1982%" height="15" fill="rgb(208,69,12)" fg:x="52" fg:w="3"/><text x="3.6846%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="356" width="0.1321%" height="15" fill="rgb(235,93,37)" fg:x="53" fg:w="2"/><text x="3.7507%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="372" width="0.1321%" height="15" fill="rgb(213,116,39)" fg:x="53" fg:w="2"/><text x="3.7507%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="388" width="0.1321%" height="15" fill="rgb(222,207,29)" fg:x="53" fg:w="2"/><text x="3.7507%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="404" width="0.1321%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="2"/><text x="3.7507%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="420" width="0.1321%" height="15" fill="rgb(218,138,4)" fg:x="53" fg:w="2"/><text x="3.7507%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="436" width="0.1321%" height="15" fill="rgb(250,191,14)" fg:x="53" fg:w="2"/><text x="3.7507%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.5007%" y="452" width="0.1321%" height="15" fill="rgb(239,60,40)" fg:x="53" fg:w="2"/><text x="3.7507%" y="462.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="3.5007%" y="468" width="0.1321%" height="15" fill="rgb(206,27,48)" fg:x="53" fg:w="2"/><text x="3.7507%" y="478.50"></text></g><g><title>__init__ (row.py:23) (2 samples, 0.13%)</title><rect x="3.5007%" y="484" width="0.1321%" height="15" fill="rgb(225,35,8)" fg:x="53" fg:w="2"/><text x="3.7507%" y="494.50"></text></g><g><title>insert (binary_tree.py:163) (3 samples, 0.20%)</title><rect x="3.6328%" y="340" width="0.1982%" height="15" fill="rgb(250,213,24)" fg:x="55" fg:w="3"/><text x="3.8828%" y="350.50"></text></g><g><title>__repr__ (row.py:170) (2 samples, 0.13%)</title><rect x="3.6988%" y="356" width="0.1321%" height="15" fill="rgb(247,123,22)" fg:x="56" fg:w="2"/><text x="3.9488%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="3.8309%" y="356" width="0.2642%" height="15" fill="rgb(231,138,38)" fg:x="58" fg:w="4"/><text x="4.0809%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="3.8970%" y="372" width="0.1982%" height="15" fill="rgb(231,145,46)" fg:x="59" fg:w="3"/><text x="4.1470%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.9630%" y="388" width="0.1321%" height="15" fill="rgb(251,118,11)" fg:x="60" fg:w="2"/><text x="4.2130%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.9630%" y="404" width="0.1321%" height="15" fill="rgb(217,147,25)" fg:x="60" fg:w="2"/><text x="4.2130%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.9630%" y="420" width="0.1321%" height="15" fill="rgb(247,81,37)" fg:x="60" fg:w="2"/><text x="4.2130%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="3.9630%" y="436" width="0.1321%" height="15" fill="rgb(209,12,38)" fg:x="60" fg:w="2"/><text x="4.2130%" y="446.50"></text></g><g><title>insert (binary_tree.py:163) (2 samples, 0.13%)</title><rect x="3.9630%" y="452" width="0.1321%" height="15" fill="rgb(227,1,9)" fg:x="60" fg:w="2"/><text x="4.2130%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="3.8309%" y="340" width="0.3963%" height="15" fill="rgb(248,47,43)" fg:x="58" fg:w="6"/><text x="4.0809%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="4.0951%" y="356" width="0.1321%" height="15" fill="rgb(221,10,30)" fg:x="62" fg:w="2"/><text x="4.3451%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.0951%" y="372" width="0.1321%" height="15" fill="rgb(210,229,1)" fg:x="62" fg:w="2"/><text x="4.3451%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.0951%" y="388" width="0.1321%" height="15" fill="rgb(222,148,37)" fg:x="62" fg:w="2"/><text x="4.3451%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.0951%" y="404" width="0.1321%" height="15" fill="rgb(234,67,33)" fg:x="62" fg:w="2"/><text x="4.3451%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="4.0951%" y="420" width="0.1321%" height="15" fill="rgb(247,98,35)" fg:x="62" fg:w="2"/><text x="4.3451%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.0951%" y="436" width="0.1321%" height="15" fill="rgb(247,138,52)" fg:x="62" fg:w="2"/><text x="4.3451%" y="446.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.0951%" y="452" width="0.1321%" height="15" fill="rgb(213,79,30)" fg:x="62" fg:w="2"/><text x="4.3451%" y="462.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="4.0951%" y="468" width="0.1321%" height="15" fill="rgb(246,177,23)" fg:x="62" fg:w="2"/><text x="4.3451%" y="478.50"></text></g><g><title>insert (binary_tree.py:174) (2 samples, 0.13%)</title><rect x="4.0951%" y="484" width="0.1321%" height="15" fill="rgb(230,62,27)" fg:x="62" fg:w="2"/><text x="4.3451%" y="494.50"></text></g><g><title>__new__ (row.py:78) (2 samples, 0.13%)</title><rect x="4.0951%" y="500" width="0.1321%" height="15" fill="rgb(216,154,8)" fg:x="62" fg:w="2"/><text x="4.3451%" y="510.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="4.2272%" y="340" width="0.1982%" height="15" fill="rgb(244,35,45)" fg:x="64" fg:w="3"/><text x="4.4772%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (16 samples, 1.06%)</title><rect x="3.6328%" y="324" width="1.0568%" height="15" fill="rgb(251,115,12)" fg:x="55" fg:w="16"/><text x="3.8828%" y="334.50"></text></g><g><title>insert (binary_tree.py:181) (4 samples, 0.26%)</title><rect x="4.4254%" y="340" width="0.2642%" height="15" fill="rgb(240,54,50)" fg:x="67" fg:w="4"/><text x="4.6754%" y="350.50"></text></g><g><title>__init__ (row.py:23) (2 samples, 0.13%)</title><rect x="4.5575%" y="356" width="0.1321%" height="15" fill="rgb(233,84,52)" fg:x="69" fg:w="2"/><text x="4.8075%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (26 samples, 1.72%)</title><rect x="3.0383%" y="308" width="1.7173%" height="15" fill="rgb(207,117,47)" fg:x="46" fg:w="26"/><text x="3.2883%" y="318.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.7556%" y="372" width="0.1321%" height="15" fill="rgb(249,43,39)" fg:x="72" fg:w="2"/><text x="5.0056%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="4.7556%" y="388" width="0.1321%" height="15" fill="rgb(209,38,44)" fg:x="72" fg:w="2"/><text x="5.0056%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.7556%" y="404" width="0.1321%" height="15" fill="rgb(236,212,23)" fg:x="72" fg:w="2"/><text x="5.0056%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.7556%" y="420" width="0.1321%" height="15" fill="rgb(242,79,21)" fg:x="72" fg:w="2"/><text x="5.0056%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.7556%" y="436" width="0.1321%" height="15" fill="rgb(211,96,35)" fg:x="72" fg:w="2"/><text x="5.0056%" y="446.50"></text></g><g><title>insert (binary_tree.py:190) (2 samples, 0.13%)</title><rect x="4.7556%" y="452" width="0.1321%" height="15" fill="rgb(253,215,40)" fg:x="72" fg:w="2"/><text x="5.0056%" y="462.50"></text></g><g><title>right_rotate (binary_tree.py:117) (2 samples, 0.13%)</title><rect x="4.7556%" y="468" width="0.1321%" height="15" fill="rgb(211,81,21)" fg:x="72" fg:w="2"/><text x="5.0056%" y="478.50"></text></g><g><title>__new__ (row.py:78) (2 samples, 0.13%)</title><rect x="4.7556%" y="484" width="0.1321%" height="15" fill="rgb(208,190,38)" fg:x="72" fg:w="2"/><text x="5.0056%" y="494.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="4.7556%" y="340" width="0.1982%" height="15" fill="rgb(235,213,38)" fg:x="72" fg:w="3"/><text x="5.0056%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="4.7556%" y="356" width="0.1982%" height="15" fill="rgb(237,122,38)" fg:x="72" fg:w="3"/><text x="5.0056%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="4.9538%" y="356" width="0.1321%" height="15" fill="rgb(244,218,35)" fg:x="75" fg:w="2"/><text x="5.2038%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="4.9538%" y="372" width="0.1321%" height="15" fill="rgb(240,68,47)" fg:x="75" fg:w="2"/><text x="5.2038%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="4.7556%" y="324" width="0.3963%" height="15" fill="rgb(210,16,53)" fg:x="72" fg:w="6"/><text x="5.0056%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="4.9538%" y="340" width="0.1982%" height="15" fill="rgb(235,124,12)" fg:x="75" fg:w="3"/><text x="5.2038%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="5.2180%" y="404" width="0.1982%" height="15" fill="rgb(224,169,11)" fg:x="79" fg:w="3"/><text x="5.4680%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="5.2180%" y="420" width="0.1982%" height="15" fill="rgb(250,166,2)" fg:x="79" fg:w="3"/><text x="5.4680%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="5.2180%" y="436" width="0.1982%" height="15" fill="rgb(242,216,29)" fg:x="79" fg:w="3"/><text x="5.4680%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="5.2180%" y="452" width="0.1982%" height="15" fill="rgb(230,116,27)" fg:x="79" fg:w="3"/><text x="5.4680%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="5.2180%" y="468" width="0.1982%" height="15" fill="rgb(228,99,48)" fg:x="79" fg:w="3"/><text x="5.4680%" y="478.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="5.2180%" y="484" width="0.1982%" height="15" fill="rgb(253,11,6)" fg:x="79" fg:w="3"/><text x="5.4680%" y="494.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="5.2180%" y="500" width="0.1982%" height="15" fill="rgb(247,143,39)" fg:x="79" fg:w="3"/><text x="5.4680%" y="510.50"></text></g><g><title>insert (binary_tree.py:183) (3 samples, 0.20%)</title><rect x="5.2180%" y="516" width="0.1982%" height="15" fill="rgb(236,97,10)" fg:x="79" fg:w="3"/><text x="5.4680%" y="526.50"></text></g><g><title>right_subtree_height (row.py:197) (3 samples, 0.20%)</title><rect x="5.2180%" y="532" width="0.1982%" height="15" fill="rgb(233,208,19)" fg:x="79" fg:w="3"/><text x="5.4680%" y="542.50"></text></g><g><title>right_child (row.py:185) (3 samples, 0.20%)</title><rect x="5.2180%" y="548" width="0.1982%" height="15" fill="rgb(216,164,2)" fg:x="79" fg:w="3"/><text x="5.4680%" y="558.50"></text></g><g><title>get_row (table.py:42) (3 samples, 0.20%)</title><rect x="5.2180%" y="564" width="0.1982%" height="15" fill="rgb(220,129,5)" fg:x="79" fg:w="3"/><text x="5.4680%" y="574.50"></text></g><g><title>fetch_row (row.py:259) (3 samples, 0.20%)</title><rect x="5.2180%" y="580" width="0.1982%" height="15" fill="rgb(242,17,10)" fg:x="79" fg:w="3"/><text x="5.4680%" y="590.50"></text></g><g><title>insert (binary_tree.py:169) (5 samples, 0.33%)</title><rect x="5.1519%" y="356" width="0.3303%" height="15" fill="rgb(242,107,0)" fg:x="78" fg:w="5"/><text x="5.4019%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="5.2180%" y="372" width="0.2642%" height="15" fill="rgb(251,28,31)" fg:x="79" fg:w="4"/><text x="5.4680%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="5.2180%" y="388" width="0.2642%" height="15" fill="rgb(233,223,10)" fg:x="79" fg:w="4"/><text x="5.4680%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="5.1519%" y="340" width="0.3963%" height="15" fill="rgb(215,21,27)" fg:x="78" fg:w="6"/><text x="5.4019%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (16 samples, 1.06%)</title><rect x="4.7556%" y="308" width="1.0568%" height="15" fill="rgb(232,23,21)" fg:x="72" fg:w="16"/><text x="5.0056%" y="318.50"></text></g><g><title>insert (binary_tree.py:176) (10 samples, 0.66%)</title><rect x="5.1519%" y="324" width="0.6605%" height="15" fill="rgb(244,5,23)" fg:x="78" fg:w="10"/><text x="5.4019%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="5.5482%" y="340" width="0.2642%" height="15" fill="rgb(226,81,46)" fg:x="84" fg:w="4"/><text x="5.7982%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="5.5482%" y="356" width="0.2642%" height="15" fill="rgb(247,70,30)" fg:x="84" fg:w="4"/><text x="5.7982%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="5.6143%" y="372" width="0.1982%" height="15" fill="rgb(212,68,19)" fg:x="85" fg:w="3"/><text x="5.8643%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="5.6143%" y="388" width="0.1982%" height="15" fill="rgb(240,187,13)" fg:x="85" fg:w="3"/><text x="5.8643%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="5.6143%" y="404" width="0.1982%" height="15" fill="rgb(223,113,26)" fg:x="85" fg:w="3"/><text x="5.8643%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="5.6143%" y="420" width="0.1982%" height="15" fill="rgb(206,192,2)" fg:x="85" fg:w="3"/><text x="5.8643%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="5.6803%" y="436" width="0.1321%" height="15" fill="rgb(241,108,4)" fg:x="86" fg:w="2"/><text x="5.9303%" y="446.50"></text></g><g><title>insert (binary_tree.py:169) (43 samples, 2.84%)</title><rect x="3.0383%" y="292" width="2.8402%" height="15" fill="rgb(247,173,49)" fg:x="46" fg:w="43"/><text x="3.2883%" y="302.50">in..</text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="5.8785%" y="324" width="0.1321%" height="15" fill="rgb(224,114,35)" fg:x="89" fg:w="2"/><text x="6.1285%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="6.0106%" y="324" width="0.1982%" height="15" fill="rgb(245,159,27)" fg:x="91" fg:w="3"/><text x="6.2606%" y="334.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="5.8785%" y="308" width="0.3963%" height="15" fill="rgb(245,172,44)" fg:x="89" fg:w="6"/><text x="6.1285%" y="318.50"></text></g><g><title>left_subtree_height (row.py:193) (4 samples, 0.26%)</title><rect x="6.4729%" y="404" width="0.2642%" height="15" fill="rgb(236,23,11)" fg:x="98" fg:w="4"/><text x="6.7229%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="6.4069%" y="372" width="0.3963%" height="15" fill="rgb(205,117,38)" fg:x="97" fg:w="6"/><text x="6.6569%" y="382.50"></text></g><g><title>insert (binary_tree.py:183) (5 samples, 0.33%)</title><rect x="6.4729%" y="388" width="0.3303%" height="15" fill="rgb(237,72,25)" fg:x="98" fg:w="5"/><text x="6.7229%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (7 samples, 0.46%)</title><rect x="6.4069%" y="356" width="0.4624%" height="15" fill="rgb(244,70,9)" fg:x="97" fg:w="7"/><text x="6.6569%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (8 samples, 0.53%)</title><rect x="6.4069%" y="340" width="0.5284%" height="15" fill="rgb(217,125,39)" fg:x="97" fg:w="8"/><text x="6.6569%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (12 samples, 0.79%)</title><rect x="6.4069%" y="324" width="0.7926%" height="15" fill="rgb(235,36,10)" fg:x="97" fg:w="12"/><text x="6.6569%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="6.9353%" y="340" width="0.2642%" height="15" fill="rgb(251,123,47)" fg:x="105" fg:w="4"/><text x="7.1853%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="7.0674%" y="356" width="0.1321%" height="15" fill="rgb(221,13,13)" fg:x="107" fg:w="2"/><text x="7.3174%" y="366.50"></text></g><g><title>insert (binary_tree.py:168) (2 samples, 0.13%)</title><rect x="7.5958%" y="468" width="0.1321%" height="15" fill="rgb(238,131,9)" fg:x="115" fg:w="2"/><text x="7.8458%" y="478.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="7.5297%" y="404" width="0.2642%" height="15" fill="rgb(211,50,8)" fg:x="114" fg:w="4"/><text x="7.7797%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="7.5297%" y="420" width="0.2642%" height="15" fill="rgb(245,182,24)" fg:x="114" fg:w="4"/><text x="7.7797%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="7.5958%" y="436" width="0.1982%" height="15" fill="rgb(242,14,37)" fg:x="115" fg:w="3"/><text x="7.8458%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="7.5958%" y="452" width="0.1982%" height="15" fill="rgb(246,228,12)" fg:x="115" fg:w="3"/><text x="7.8458%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="7.5297%" y="388" width="0.3963%" height="15" fill="rgb(213,55,15)" fg:x="114" fg:w="6"/><text x="7.7797%" y="398.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="7.7939%" y="404" width="0.1321%" height="15" fill="rgb(209,9,3)" fg:x="118" fg:w="2"/><text x="8.0439%" y="414.50"></text></g><g><title>right_subtree_height (row.py:197) (2 samples, 0.13%)</title><rect x="7.7939%" y="420" width="0.1321%" height="15" fill="rgb(230,59,30)" fg:x="118" fg:w="2"/><text x="8.0439%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (25 samples, 1.65%)</title><rect x="6.3408%" y="308" width="1.6513%" height="15" fill="rgb(209,121,21)" fg:x="96" fg:w="25"/><text x="6.5908%" y="318.50"></text></g><g><title>insert (binary_tree.py:176) (11 samples, 0.73%)</title><rect x="7.2655%" y="324" width="0.7266%" height="15" fill="rgb(220,109,13)" fg:x="110" fg:w="11"/><text x="7.5155%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (9 samples, 0.59%)</title><rect x="7.3976%" y="340" width="0.5945%" height="15" fill="rgb(232,18,1)" fg:x="112" fg:w="9"/><text x="7.6476%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (8 samples, 0.53%)</title><rect x="7.4637%" y="356" width="0.5284%" height="15" fill="rgb(215,41,42)" fg:x="113" fg:w="8"/><text x="7.7137%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (7 samples, 0.46%)</title><rect x="7.5297%" y="372" width="0.4624%" height="15" fill="rgb(224,123,36)" fg:x="114" fg:w="7"/><text x="7.7797%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (80 samples, 5.28%)</title><rect x="2.7741%" y="276" width="5.2840%" height="15" fill="rgb(240,125,3)" fg:x="42" fg:w="80"/><text x="3.0241%" y="286.50">insert..</text></g><g><title>insert (binary_tree.py:176) (33 samples, 2.18%)</title><rect x="5.8785%" y="292" width="2.1797%" height="15" fill="rgb(205,98,50)" fg:x="89" fg:w="33"/><text x="6.1285%" y="302.50">i..</text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="8.2563%" y="388" width="0.1982%" height="15" fill="rgb(205,185,37)" fg:x="125" fg:w="3"/><text x="8.5063%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="8.2563%" y="404" width="0.1982%" height="15" fill="rgb(238,207,15)" fg:x="125" fg:w="3"/><text x="8.5063%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="8.3223%" y="420" width="0.1321%" height="15" fill="rgb(213,199,42)" fg:x="126" fg:w="2"/><text x="8.5723%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (5 samples, 0.33%)</title><rect x="8.1902%" y="356" width="0.3303%" height="15" fill="rgb(235,201,11)" fg:x="124" fg:w="5"/><text x="8.4402%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="8.2563%" y="372" width="0.2642%" height="15" fill="rgb(207,46,11)" fg:x="125" fg:w="4"/><text x="8.5063%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="8.5205%" y="372" width="0.1321%" height="15" fill="rgb(241,35,35)" fg:x="129" fg:w="2"/><text x="8.7705%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (9 samples, 0.59%)</title><rect x="8.1902%" y="340" width="0.5945%" height="15" fill="rgb(243,32,47)" fg:x="124" fg:w="9"/><text x="8.4402%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="8.5205%" y="356" width="0.2642%" height="15" fill="rgb(247,202,23)" fg:x="129" fg:w="4"/><text x="8.7705%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="8.8507%" y="388" width="0.1321%" height="15" fill="rgb(219,102,11)" fg:x="134" fg:w="2"/><text x="9.1007%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="8.8507%" y="404" width="0.1321%" height="15" fill="rgb(243,110,44)" fg:x="134" fg:w="2"/><text x="9.1007%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="8.8507%" y="420" width="0.1321%" height="15" fill="rgb(222,74,54)" fg:x="134" fg:w="2"/><text x="9.1007%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="8.8507%" y="436" width="0.1321%" height="15" fill="rgb(216,99,12)" fg:x="134" fg:w="2"/><text x="9.1007%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="8.8507%" y="452" width="0.1321%" height="15" fill="rgb(226,22,26)" fg:x="134" fg:w="2"/><text x="9.1007%" y="462.50"></text></g><g><title>insert (binary_tree.py:190) (2 samples, 0.13%)</title><rect x="8.8507%" y="468" width="0.1321%" height="15" fill="rgb(217,163,10)" fg:x="134" fg:w="2"/><text x="9.1007%" y="478.50"></text></g><g><title>right_rotate (binary_tree.py:117) (2 samples, 0.13%)</title><rect x="8.8507%" y="484" width="0.1321%" height="15" fill="rgb(213,25,53)" fg:x="134" fg:w="2"/><text x="9.1007%" y="494.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="8.7847%" y="356" width="0.2642%" height="15" fill="rgb(252,105,26)" fg:x="133" fg:w="4"/><text x="9.0347%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="8.7847%" y="372" width="0.2642%" height="15" fill="rgb(220,39,43)" fg:x="133" fg:w="4"/><text x="9.0347%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (6 samples, 0.40%)</title><rect x="8.7847%" y="340" width="0.3963%" height="15" fill="rgb(229,68,48)" fg:x="133" fg:w="6"/><text x="9.0347%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.0489%" y="356" width="0.1321%" height="15" fill="rgb(252,8,32)" fg:x="137" fg:w="2"/><text x="9.2989%" y="366.50"></text></g><g><title>insert (binary_tree.py:183) (2 samples, 0.13%)</title><rect x="9.0489%" y="372" width="0.1321%" height="15" fill="rgb(223,20,43)" fg:x="137" fg:w="2"/><text x="9.2989%" y="382.50"></text></g><g><title>left_subtree_height (row.py:193) (2 samples, 0.13%)</title><rect x="9.0489%" y="388" width="0.1321%" height="15" fill="rgb(229,81,49)" fg:x="137" fg:w="2"/><text x="9.2989%" y="398.50"></text></g><g><title>left_child (row.py:189) (2 samples, 0.13%)</title><rect x="9.0489%" y="404" width="0.1321%" height="15" fill="rgb(236,28,36)" fg:x="137" fg:w="2"/><text x="9.2989%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (16 samples, 1.06%)</title><rect x="8.1902%" y="324" width="1.0568%" height="15" fill="rgb(249,185,26)" fg:x="124" fg:w="16"/><text x="8.4402%" y="334.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="9.2470%" y="340" width="0.1982%" height="15" fill="rgb(249,174,33)" fg:x="140" fg:w="3"/><text x="9.4970%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.3131%" y="356" width="0.1321%" height="15" fill="rgb(233,201,37)" fg:x="141" fg:w="2"/><text x="9.5631%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.3131%" y="372" width="0.1321%" height="15" fill="rgb(221,78,26)" fg:x="141" fg:w="2"/><text x="9.5631%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.5773%" y="388" width="0.1321%" height="15" fill="rgb(250,127,30)" fg:x="145" fg:w="2"/><text x="9.8273%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.5773%" y="404" width="0.1321%" height="15" fill="rgb(230,49,44)" fg:x="145" fg:w="2"/><text x="9.8273%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.5773%" y="420" width="0.1321%" height="15" fill="rgb(229,67,23)" fg:x="145" fg:w="2"/><text x="9.8273%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.5773%" y="436" width="0.1321%" height="15" fill="rgb(249,83,47)" fg:x="145" fg:w="2"/><text x="9.8273%" y="446.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="9.5773%" y="452" width="0.1321%" height="15" fill="rgb(215,43,3)" fg:x="145" fg:w="2"/><text x="9.8273%" y="462.50"></text></g><g><title>__init__ (row.py:23) (2 samples, 0.13%)</title><rect x="9.5773%" y="468" width="0.1321%" height="15" fill="rgb(238,154,13)" fg:x="145" fg:w="2"/><text x="9.8273%" y="478.50"></text></g><g><title>validate_val (row.py:81) (2 samples, 0.13%)</title><rect x="9.5773%" y="484" width="0.1321%" height="15" fill="rgb(219,56,2)" fg:x="145" fg:w="2"/><text x="9.8273%" y="494.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="9.5773%" y="372" width="0.2642%" height="15" fill="rgb(233,0,4)" fg:x="145" fg:w="4"/><text x="9.8273%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (5 samples, 0.33%)</title><rect x="9.5773%" y="356" width="0.3303%" height="15" fill="rgb(235,30,7)" fg:x="145" fg:w="5"/><text x="9.8273%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.9075%" y="372" width="0.1321%" height="15" fill="rgb(250,79,13)" fg:x="150" fg:w="2"/><text x="10.1575%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.9075%" y="388" width="0.1321%" height="15" fill="rgb(211,146,34)" fg:x="150" fg:w="2"/><text x="10.1575%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.9075%" y="404" width="0.1321%" height="15" fill="rgb(228,22,38)" fg:x="150" fg:w="2"/><text x="10.1575%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.9075%" y="420" width="0.1321%" height="15" fill="rgb(235,168,5)" fg:x="150" fg:w="2"/><text x="10.1575%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.9075%" y="436" width="0.1321%" height="15" fill="rgb(221,155,16)" fg:x="150" fg:w="2"/><text x="10.1575%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.9075%" y="452" width="0.1321%" height="15" fill="rgb(215,215,53)" fg:x="150" fg:w="2"/><text x="10.1575%" y="462.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="9.9075%" y="468" width="0.1321%" height="15" fill="rgb(223,4,10)" fg:x="150" fg:w="2"/><text x="10.1575%" y="478.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="9.9075%" y="484" width="0.1321%" height="15" fill="rgb(234,103,6)" fg:x="150" fg:w="2"/><text x="10.1575%" y="494.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="9.9075%" y="500" width="0.1321%" height="15" fill="rgb(227,97,0)" fg:x="150" fg:w="2"/><text x="10.1575%" y="510.50"></text></g><g><title>right_subtree_height (row.py:197) (2 samples, 0.13%)</title><rect x="9.9075%" y="516" width="0.1321%" height="15" fill="rgb(234,150,53)" fg:x="150" fg:w="2"/><text x="10.1575%" y="526.50"></text></g><g><title>right_child (row.py:185) (2 samples, 0.13%)</title><rect x="9.9075%" y="532" width="0.1321%" height="15" fill="rgb(228,201,54)" fg:x="150" fg:w="2"/><text x="10.1575%" y="542.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="10.0396%" y="388" width="0.1321%" height="15" fill="rgb(222,22,37)" fg:x="152" fg:w="2"/><text x="10.2896%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="10.0396%" y="404" width="0.1321%" height="15" fill="rgb(237,53,32)" fg:x="152" fg:w="2"/><text x="10.2896%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="10.0396%" y="420" width="0.1321%" height="15" fill="rgb(233,25,53)" fg:x="152" fg:w="2"/><text x="10.2896%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="10.0396%" y="436" width="0.1321%" height="15" fill="rgb(210,40,34)" fg:x="152" fg:w="2"/><text x="10.2896%" y="446.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="10.0396%" y="452" width="0.1321%" height="15" fill="rgb(241,220,44)" fg:x="152" fg:w="2"/><text x="10.2896%" y="462.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="10.0396%" y="468" width="0.1321%" height="15" fill="rgb(235,28,35)" fg:x="152" fg:w="2"/><text x="10.2896%" y="478.50"></text></g><g><title>insert (binary_tree.py:202) (2 samples, 0.13%)</title><rect x="10.0396%" y="484" width="0.1321%" height="15" fill="rgb(210,56,17)" fg:x="152" fg:w="2"/><text x="10.2896%" y="494.50"></text></g><g><title>left_rotate (binary_tree.py:151) (2 samples, 0.13%)</title><rect x="10.0396%" y="500" width="0.1321%" height="15" fill="rgb(224,130,29)" fg:x="152" fg:w="2"/><text x="10.2896%" y="510.50"></text></g><g><title>__new__ (row.py:78) (2 samples, 0.13%)</title><rect x="10.0396%" y="516" width="0.1321%" height="15" fill="rgb(235,212,8)" fg:x="152" fg:w="2"/><text x="10.2896%" y="526.50"></text></g><g><title>insert (binary_tree.py:176) (12 samples, 0.79%)</title><rect x="9.5112%" y="340" width="0.7926%" height="15" fill="rgb(223,33,50)" fg:x="144" fg:w="12"/><text x="9.7612%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (6 samples, 0.40%)</title><rect x="9.9075%" y="356" width="0.3963%" height="15" fill="rgb(219,149,13)" fg:x="150" fg:w="6"/><text x="10.1575%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="10.0396%" y="372" width="0.2642%" height="15" fill="rgb(250,156,29)" fg:x="152" fg:w="4"/><text x="10.2896%" y="382.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="10.1717%" y="388" width="0.1321%" height="15" fill="rgb(216,193,19)" fg:x="154" fg:w="2"/><text x="10.4217%" y="398.50"></text></g><g><title>__init__ (row.py:23) (2 samples, 0.13%)</title><rect x="10.1717%" y="404" width="0.1321%" height="15" fill="rgb(216,135,14)" fg:x="154" fg:w="2"/><text x="10.4217%" y="414.50"></text></g><g><title>validate_val (row.py:85) (2 samples, 0.13%)</title><rect x="10.1717%" y="420" width="0.1321%" height="15" fill="rgb(241,47,5)" fg:x="154" fg:w="2"/><text x="10.4217%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (36 samples, 2.38%)</title><rect x="8.1902%" y="308" width="2.3778%" height="15" fill="rgb(233,42,35)" fg:x="124" fg:w="36"/><text x="8.4402%" y="318.50">in..</text></g><g><title>insert (binary_tree.py:176) (20 samples, 1.32%)</title><rect x="9.2470%" y="324" width="1.3210%" height="15" fill="rgb(231,13,6)" fg:x="140" fg:w="20"/><text x="9.4970%" y="334.50"></text></g><g><title>insert (binary_tree.py:183) (4 samples, 0.26%)</title><rect x="10.3038%" y="340" width="0.2642%" height="15" fill="rgb(207,181,40)" fg:x="156" fg:w="4"/><text x="10.5538%" y="350.50"></text></g><g><title>left_subtree_height (row.py:193) (3 samples, 0.20%)</title><rect x="10.3699%" y="356" width="0.1982%" height="15" fill="rgb(254,173,49)" fg:x="157" fg:w="3"/><text x="10.6199%" y="366.50"></text></g><g><title>insert (binary_tree.py:174) (2 samples, 0.13%)</title><rect x="10.5680%" y="308" width="0.1321%" height="15" fill="rgb(221,1,38)" fg:x="160" fg:w="2"/><text x="10.8180%" y="318.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="10.7662%" y="340" width="0.1321%" height="15" fill="rgb(206,124,46)" fg:x="163" fg:w="2"/><text x="11.0162%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="10.8983%" y="356" width="0.1321%" height="15" fill="rgb(249,21,11)" fg:x="165" fg:w="2"/><text x="11.1483%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (6 samples, 0.40%)</title><rect x="10.7001%" y="324" width="0.3963%" height="15" fill="rgb(222,201,40)" fg:x="162" fg:w="6"/><text x="10.9501%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="10.8983%" y="340" width="0.1982%" height="15" fill="rgb(235,61,29)" fg:x="165" fg:w="3"/><text x="11.1483%" y="350.50"></text></g><g><title>insert (binary_tree.py:163) (2 samples, 0.13%)</title><rect x="11.1625%" y="340" width="0.1321%" height="15" fill="rgb(219,207,3)" fg:x="169" fg:w="2"/><text x="11.4125%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="11.2946%" y="356" width="0.1982%" height="15" fill="rgb(222,56,46)" fg:x="171" fg:w="3"/><text x="11.5446%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="11.2946%" y="372" width="0.1982%" height="15" fill="rgb(239,76,54)" fg:x="171" fg:w="3"/><text x="11.5446%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.3606%" y="388" width="0.1321%" height="15" fill="rgb(231,124,27)" fg:x="172" fg:w="2"/><text x="11.6106%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.3606%" y="404" width="0.1321%" height="15" fill="rgb(249,195,6)" fg:x="172" fg:w="2"/><text x="11.6106%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.3606%" y="420" width="0.1321%" height="15" fill="rgb(237,174,47)" fg:x="172" fg:w="2"/><text x="11.6106%" y="430.50"></text></g><g><title>insert (binary_tree.py:174) (2 samples, 0.13%)</title><rect x="11.3606%" y="436" width="0.1321%" height="15" fill="rgb(206,201,31)" fg:x="172" fg:w="2"/><text x="11.6106%" y="446.50"></text></g><g><title>left_subtree_height (row.py:193) (2 samples, 0.13%)</title><rect x="11.3606%" y="452" width="0.1321%" height="15" fill="rgb(231,57,52)" fg:x="172" fg:w="2"/><text x="11.6106%" y="462.50"></text></g><g><title>left_child (row.py:189) (2 samples, 0.13%)</title><rect x="11.3606%" y="468" width="0.1321%" height="15" fill="rgb(248,177,22)" fg:x="172" fg:w="2"/><text x="11.6106%" y="478.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.4927%" y="372" width="0.1321%" height="15" fill="rgb(215,211,37)" fg:x="174" fg:w="2"/><text x="11.7427%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.4927%" y="388" width="0.1321%" height="15" fill="rgb(241,128,51)" fg:x="174" fg:w="2"/><text x="11.7427%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.4927%" y="404" width="0.1321%" height="15" fill="rgb(227,165,31)" fg:x="174" fg:w="2"/><text x="11.7427%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.4927%" y="420" width="0.1321%" height="15" fill="rgb(228,167,24)" fg:x="174" fg:w="2"/><text x="11.7427%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.4927%" y="436" width="0.1321%" height="15" fill="rgb(228,143,12)" fg:x="174" fg:w="2"/><text x="11.7427%" y="446.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.4927%" y="452" width="0.1321%" height="15" fill="rgb(249,149,8)" fg:x="174" fg:w="2"/><text x="11.7427%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.4927%" y="468" width="0.1321%" height="15" fill="rgb(243,35,44)" fg:x="174" fg:w="2"/><text x="11.7427%" y="478.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.4927%" y="484" width="0.1321%" height="15" fill="rgb(246,89,9)" fg:x="174" fg:w="2"/><text x="11.7427%" y="494.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.4927%" y="500" width="0.1321%" height="15" fill="rgb(233,213,13)" fg:x="174" fg:w="2"/><text x="11.7427%" y="510.50"></text></g><g><title>insert (binary_tree.py:169) (8 samples, 0.53%)</title><rect x="11.2946%" y="340" width="0.5284%" height="15" fill="rgb(233,141,41)" fg:x="171" fg:w="8"/><text x="11.5446%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (5 samples, 0.33%)</title><rect x="11.4927%" y="356" width="0.3303%" height="15" fill="rgb(239,167,4)" fg:x="174" fg:w="5"/><text x="11.7427%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="11.6248%" y="372" width="0.1982%" height="15" fill="rgb(209,217,16)" fg:x="176" fg:w="3"/><text x="11.8748%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.6909%" y="388" width="0.1321%" height="15" fill="rgb(219,88,35)" fg:x="177" fg:w="2"/><text x="11.9409%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.6909%" y="404" width="0.1321%" height="15" fill="rgb(220,193,23)" fg:x="177" fg:w="2"/><text x="11.9409%" y="414.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.6909%" y="420" width="0.1321%" height="15" fill="rgb(230,90,52)" fg:x="177" fg:w="2"/><text x="11.9409%" y="430.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="11.6909%" y="436" width="0.1321%" height="15" fill="rgb(252,106,19)" fg:x="177" fg:w="2"/><text x="11.9409%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.6909%" y="452" width="0.1321%" height="15" fill="rgb(206,74,20)" fg:x="177" fg:w="2"/><text x="11.9409%" y="462.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.6909%" y="468" width="0.1321%" height="15" fill="rgb(230,138,44)" fg:x="177" fg:w="2"/><text x="11.9409%" y="478.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="11.6909%" y="484" width="0.1321%" height="15" fill="rgb(235,182,43)" fg:x="177" fg:w="2"/><text x="11.9409%" y="494.50"></text></g><g><title>insert (binary_tree.py:183) (2 samples, 0.13%)</title><rect x="11.6909%" y="500" width="0.1321%" height="15" fill="rgb(242,16,51)" fg:x="177" fg:w="2"/><text x="11.9409%" y="510.50"></text></g><g><title>right_subtree_height (row.py:197) (2 samples, 0.13%)</title><rect x="11.6909%" y="516" width="0.1321%" height="15" fill="rgb(248,9,4)" fg:x="177" fg:w="2"/><text x="11.9409%" y="526.50"></text></g><g><title>right_child (row.py:185) (2 samples, 0.13%)</title><rect x="11.6909%" y="532" width="0.1321%" height="15" fill="rgb(210,31,22)" fg:x="177" fg:w="2"/><text x="11.9409%" y="542.50"></text></g><g><title>get_row (table.py:41) (2 samples, 0.13%)</title><rect x="11.6909%" y="548" width="0.1321%" height="15" fill="rgb(239,54,39)" fg:x="177" fg:w="2"/><text x="11.9409%" y="558.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="11.8890%" y="356" width="0.1982%" height="15" fill="rgb(230,99,41)" fg:x="180" fg:w="3"/><text x="12.1390%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (15 samples, 0.99%)</title><rect x="11.1625%" y="324" width="0.9908%" height="15" fill="rgb(253,106,12)" fg:x="169" fg:w="15"/><text x="11.4125%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="11.8890%" y="340" width="0.2642%" height="15" fill="rgb(213,46,41)" fg:x="180" fg:w="4"/><text x="12.1390%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (23 samples, 1.52%)</title><rect x="10.7001%" y="308" width="1.5192%" height="15" fill="rgb(215,133,35)" fg:x="162" fg:w="23"/><text x="10.9501%" y="318.50"></text></g><g><title>insert (binary_tree.py:181) (3 samples, 0.20%)</title><rect x="12.2193%" y="308" width="0.1982%" height="15" fill="rgb(213,28,5)" fg:x="185" fg:w="3"/><text x="12.4693%" y="318.50"></text></g><g><title>insert (binary_tree.py:169) (66 samples, 4.36%)</title><rect x="8.1242%" y="292" width="4.3593%" height="15" fill="rgb(215,77,49)" fg:x="123" fg:w="66"/><text x="8.3742%" y="302.50">inser..</text></g><g><title>insert (binary_tree.py:174) (3 samples, 0.20%)</title><rect x="12.4835%" y="292" width="0.1982%" height="15" fill="rgb(248,100,22)" fg:x="189" fg:w="3"/><text x="12.7335%" y="302.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.6816%" y="340" width="0.1321%" height="15" fill="rgb(208,67,9)" fg:x="192" fg:w="2"/><text x="12.9316%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.8137%" y="372" width="0.1321%" height="15" fill="rgb(219,133,21)" fg:x="194" fg:w="2"/><text x="13.0637%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.8137%" y="388" width="0.1321%" height="15" fill="rgb(246,46,29)" fg:x="194" fg:w="2"/><text x="13.0637%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.8137%" y="404" width="0.1321%" height="15" fill="rgb(246,185,52)" fg:x="194" fg:w="2"/><text x="13.0637%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.8137%" y="420" width="0.1321%" height="15" fill="rgb(252,136,11)" fg:x="194" fg:w="2"/><text x="13.0637%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="12.8137%" y="436" width="0.1321%" height="15" fill="rgb(219,138,53)" fg:x="194" fg:w="2"/><text x="13.0637%" y="446.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.8137%" y="452" width="0.1321%" height="15" fill="rgb(211,51,23)" fg:x="194" fg:w="2"/><text x="13.0637%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.8137%" y="468" width="0.1321%" height="15" fill="rgb(247,221,28)" fg:x="194" fg:w="2"/><text x="13.0637%" y="478.50"></text></g><g><title>insert (binary_tree.py:190) (2 samples, 0.13%)</title><rect x="12.8137%" y="484" width="0.1321%" height="15" fill="rgb(251,222,45)" fg:x="194" fg:w="2"/><text x="13.0637%" y="494.50"></text></g><g><title>right_rotate (binary_tree.py:119) (2 samples, 0.13%)</title><rect x="12.8137%" y="500" width="0.1321%" height="15" fill="rgb(217,162,53)" fg:x="194" fg:w="2"/><text x="13.0637%" y="510.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="12.8137%" y="356" width="0.2642%" height="15" fill="rgb(229,93,14)" fg:x="194" fg:w="4"/><text x="13.0637%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="12.9458%" y="372" width="0.1321%" height="15" fill="rgb(209,67,49)" fg:x="196" fg:w="2"/><text x="13.1958%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="12.9458%" y="388" width="0.1321%" height="15" fill="rgb(213,87,29)" fg:x="196" fg:w="2"/><text x="13.1958%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="13.1440%" y="404" width="0.1321%" height="15" fill="rgb(205,151,52)" fg:x="199" fg:w="2"/><text x="13.3940%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (5 samples, 0.33%)</title><rect x="13.0779%" y="372" width="0.3303%" height="15" fill="rgb(253,215,39)" fg:x="198" fg:w="5"/><text x="13.3279%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="13.1440%" y="388" width="0.2642%" height="15" fill="rgb(221,220,41)" fg:x="199" fg:w="4"/><text x="13.3940%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="13.2761%" y="404" width="0.1321%" height="15" fill="rgb(218,133,21)" fg:x="201" fg:w="2"/><text x="13.5261%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (13 samples, 0.86%)</title><rect x="12.6816%" y="324" width="0.8587%" height="15" fill="rgb(221,193,43)" fg:x="192" fg:w="13"/><text x="12.9316%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (11 samples, 0.73%)</title><rect x="12.8137%" y="340" width="0.7266%" height="15" fill="rgb(240,128,52)" fg:x="194" fg:w="11"/><text x="13.0637%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (7 samples, 0.46%)</title><rect x="13.0779%" y="356" width="0.4624%" height="15" fill="rgb(253,114,12)" fg:x="198" fg:w="7"/><text x="13.3279%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="13.4082%" y="372" width="0.1321%" height="15" fill="rgb(215,223,47)" fg:x="203" fg:w="2"/><text x="13.6582%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="13.4082%" y="388" width="0.1321%" height="15" fill="rgb(248,225,23)" fg:x="203" fg:w="2"/><text x="13.6582%" y="398.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="13.4082%" y="404" width="0.1321%" height="15" fill="rgb(250,108,0)" fg:x="203" fg:w="2"/><text x="13.6582%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="13.4082%" y="420" width="0.1321%" height="15" fill="rgb(228,208,7)" fg:x="203" fg:w="2"/><text x="13.6582%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="13.4082%" y="436" width="0.1321%" height="15" fill="rgb(244,45,10)" fg:x="203" fg:w="2"/><text x="13.6582%" y="446.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="13.4082%" y="452" width="0.1321%" height="15" fill="rgb(207,125,25)" fg:x="203" fg:w="2"/><text x="13.6582%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="13.4082%" y="468" width="0.1321%" height="15" fill="rgb(210,195,18)" fg:x="203" fg:w="2"/><text x="13.6582%" y="478.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="13.4082%" y="484" width="0.1321%" height="15" fill="rgb(249,80,12)" fg:x="203" fg:w="2"/><text x="13.6582%" y="494.50"></text></g><g><title>insert (binary_tree.py:170) (2 samples, 0.13%)</title><rect x="13.6063%" y="356" width="0.1321%" height="15" fill="rgb(221,65,9)" fg:x="206" fg:w="2"/><text x="13.8563%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="13.5403%" y="340" width="0.2642%" height="15" fill="rgb(235,49,36)" fg:x="205" fg:w="4"/><text x="13.7903%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (6 samples, 0.40%)</title><rect x="13.5403%" y="324" width="0.3963%" height="15" fill="rgb(225,32,20)" fg:x="205" fg:w="6"/><text x="13.7903%" y="334.50"></text></g><g><title>insert (binary_tree.py:169) (21 samples, 1.39%)</title><rect x="12.6816%" y="308" width="1.3871%" height="15" fill="rgb(215,141,46)" fg:x="192" fg:w="21"/><text x="12.9316%" y="318.50"></text></g><g><title>insert (binary_tree.py:181) (2 samples, 0.13%)</title><rect x="13.9366%" y="324" width="0.1321%" height="15" fill="rgb(250,160,47)" fg:x="211" fg:w="2"/><text x="14.1866%" y="334.50"></text></g><g><title>__init__ (row.py:23) (2 samples, 0.13%)</title><rect x="13.9366%" y="340" width="0.1321%" height="15" fill="rgb(216,222,40)" fg:x="211" fg:w="2"/><text x="14.1866%" y="350.50"></text></g><g><title>validate_val (row.py:84) (2 samples, 0.13%)</title><rect x="13.9366%" y="356" width="0.1321%" height="15" fill="rgb(234,217,39)" fg:x="211" fg:w="2"/><text x="14.1866%" y="366.50"></text></g><g><title>insert (binary_tree.py:163) (2 samples, 0.13%)</title><rect x="14.2008%" y="388" width="0.1321%" height="15" fill="rgb(207,178,40)" fg:x="215" fg:w="2"/><text x="14.4508%" y="398.50"></text></g><g><title>__repr__ (row.py:170) (2 samples, 0.13%)</title><rect x="14.2008%" y="404" width="0.1321%" height="15" fill="rgb(221,136,13)" fg:x="215" fg:w="2"/><text x="14.4508%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (5 samples, 0.33%)</title><rect x="14.1347%" y="356" width="0.3303%" height="15" fill="rgb(249,199,10)" fg:x="214" fg:w="5"/><text x="14.3847%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="14.2008%" y="372" width="0.2642%" height="15" fill="rgb(249,222,13)" fg:x="215" fg:w="4"/><text x="14.4508%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.3329%" y="388" width="0.1321%" height="15" fill="rgb(244,185,38)" fg:x="217" fg:w="2"/><text x="14.5829%" y="398.50"></text></g><g><title>insert (binary_tree.py:183) (2 samples, 0.13%)</title><rect x="14.3329%" y="404" width="0.1321%" height="15" fill="rgb(236,202,9)" fg:x="217" fg:w="2"/><text x="14.5829%" y="414.50"></text></g><g><title>right_subtree_height (row.py:197) (2 samples, 0.13%)</title><rect x="14.3329%" y="420" width="0.1321%" height="15" fill="rgb(250,229,37)" fg:x="217" fg:w="2"/><text x="14.5829%" y="430.50"></text></g><g><title>right_child (row.py:185) (2 samples, 0.13%)</title><rect x="14.3329%" y="436" width="0.1321%" height="15" fill="rgb(206,174,23)" fg:x="217" fg:w="2"/><text x="14.5829%" y="446.50"></text></g><g><title>get_row (table.py:46) (2 samples, 0.13%)</title><rect x="14.3329%" y="452" width="0.1321%" height="15" fill="rgb(211,33,43)" fg:x="217" fg:w="2"/><text x="14.5829%" y="462.50"></text></g><g><title>insert (binary_tree.py:169) (8 samples, 0.53%)</title><rect x="14.1347%" y="340" width="0.5284%" height="15" fill="rgb(245,58,50)" fg:x="214" fg:w="8"/><text x="14.3847%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (3 samples, 0.20%)</title><rect x="14.4650%" y="356" width="0.1982%" height="15" fill="rgb(244,68,36)" fg:x="219" fg:w="3"/><text x="14.7150%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.5310%" y="372" width="0.1321%" height="15" fill="rgb(232,229,15)" fg:x="220" fg:w="2"/><text x="14.7810%" y="382.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.5310%" y="388" width="0.1321%" height="15" fill="rgb(254,30,23)" fg:x="220" fg:w="2"/><text x="14.7810%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.5310%" y="404" width="0.1321%" height="15" fill="rgb(235,160,14)" fg:x="220" fg:w="2"/><text x="14.7810%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="14.5310%" y="420" width="0.1321%" height="15" fill="rgb(212,155,44)" fg:x="220" fg:w="2"/><text x="14.7810%" y="430.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.5310%" y="436" width="0.1321%" height="15" fill="rgb(226,2,50)" fg:x="220" fg:w="2"/><text x="14.7810%" y="446.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.5310%" y="452" width="0.1321%" height="15" fill="rgb(234,177,6)" fg:x="220" fg:w="2"/><text x="14.7810%" y="462.50"></text></g><g><title>insert (binary_tree.py:163) (2 samples, 0.13%)</title><rect x="14.5310%" y="468" width="0.1321%" height="15" fill="rgb(217,24,9)" fg:x="220" fg:w="2"/><text x="14.7810%" y="478.50"></text></g><g><title>__repr__ (row.py:170) (2 samples, 0.13%)</title><rect x="14.5310%" y="484" width="0.1321%" height="15" fill="rgb(220,13,46)" fg:x="220" fg:w="2"/><text x="14.7810%" y="494.50"></text></g><g><title>__str__ (row.py:26) (2 samples, 0.13%)</title><rect x="14.5310%" y="500" width="0.1321%" height="15" fill="rgb(239,221,27)" fg:x="220" fg:w="2"/><text x="14.7810%" y="510.50"></text></g><g><title>insert (binary_tree.py:169) (3 samples, 0.20%)</title><rect x="14.6631%" y="356" width="0.1982%" height="15" fill="rgb(222,198,25)" fg:x="222" fg:w="3"/><text x="14.9131%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.7292%" y="372" width="0.1321%" height="15" fill="rgb(211,99,13)" fg:x="223" fg:w="2"/><text x="14.9792%" y="382.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="14.7292%" y="388" width="0.1321%" height="15" fill="rgb(232,111,31)" fg:x="223" fg:w="2"/><text x="14.9792%" y="398.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="14.7292%" y="404" width="0.1321%" height="15" fill="rgb(245,82,37)" fg:x="223" fg:w="2"/><text x="14.9792%" y="414.50"></text></g><g><title>insert (binary_tree.py:169) (13 samples, 0.86%)</title><rect x="14.0687%" y="324" width="0.8587%" height="15" fill="rgb(227,149,46)" fg:x="213" fg:w="13"/><text x="14.3187%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (4 samples, 0.26%)</title><rect x="14.6631%" y="340" width="0.2642%" height="15" fill="rgb(218,36,50)" fg:x="222" fg:w="4"/><text x="14.9131%" y="350.50"></text></g><g><title>insert (binary_tree.py:169) (2 samples, 0.13%)</title><rect x="14.9934%" y="356" width="0.1321%" height="15" fill="rgb(226,80,48)" fg:x="227" fg:w="2"/><text x="15.2434%" y="366.50"></text></g><g><title>insert (binary_tree.py:169) (4 samples, 0.26%)</title><rect x="14.9934%" y="340" width="0.2642%" height="15" fill="rgb(238,224,15)" fg:x="227" fg:w="4"/><text x="15.2434%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="15.1255%" y="356" width="0.1321%" height="15" fill="rgb(241,136,10)" fg:x="229" fg:w="2"/><text x="15.3755%" y="366.50"></text></g><g><title>insert (binary_tree.py:176) (2 samples, 0.13%)</title><rect x="15.2576%" y="340" width="0.1321%" height="15" fill="rgb(208,32,45)" fg:x="231" fg:w="2"/><text x="15.5076%" y="350.50"></text></g><g><title>insert (binary_tree.py:176) (21 samples, 1.39%)</title><rect x="14.0687%" y="308" width="1.3871%" height="15" fill="rgb(207,135,9)" fg:x="213" fg:w="21"/><text x="14.3187%" y="318.50"></text></g><g><title>insert (binary_tree.py:176) (8 samples, 0.53%)</title><rect x="14.9273%" y="324" width="0.5284%" height="15" fill="rgb(206,86,44)" fg:x="226" fg:w="8"/><text x="15.1773%" y="334.50"></text></g><g><title>insert (binary_tree.py:176) (43 samples, 2.84%)</title><rect x="12.6816%" y="292" width="2.8402%" height="15" fill="rgb(245,177,15)" fg:x="192" fg:w="43"/><text x="12.9316%" y="302.50">in..</text></g><g><title>insert (binary_tree.py:176) (114 samples, 7.53%)</title><rect x="8.0581%" y="276" width="7.5297%" height="15" fill="rgb(206,64,50)" fg:x="122" fg:w="114"/><text x="8.3081%" y="286.50">insert (bi..</text></g><g><title>insert (binary_tree.py:181) (4 samples, 0.26%)</title><rect x="15.6539%" y="276" width="0.2642%" height="15" fill="rgb(234,36,40)" fg:x="237" fg:w="4"/><text x="15.9039%" y="286.50"></text></g><g><title>__new__ (row.py:78) (2 samples, 0.13%)</title><rect x="15.7860%" y="292" width="0.1321%" height="15" fill="rgb(213,64,8)" fg:x="239" fg:w="2"/><text x="16.0360%" y="302.50"></text></g><g><title>insert (table.py:80) (207 samples, 13.67%)</title><rect x="2.3778%" y="260" width="13.6724%" height="15" fill="rgb(210,75,36)" fg:x="36" fg:w="207"/><text x="2.6278%" y="270.50">insert (table.py:80)</text></g><g><title>insert (table.py:85) (992 samples, 65.52%)</title><rect x="16.0502%" y="260" width="65.5218%" height="15" fill="rgb(229,88,21)" fg:x="243" fg:w="992"/><text x="16.3002%" y="270.50">insert (table.py:85)</text></g><g><title>&lt;listcomp&gt; (table.py:85) (988 samples, 65.26%)</title><rect x="16.3144%" y="276" width="65.2576%" height="15" fill="rgb(252,204,47)" fg:x="247" fg:w="988"/><text x="16.5644%" y="286.50">&lt;listcomp&gt; (table.py:85)</text></g><g><title>flush_rows_to_disk (table.py:58) (6 samples, 0.40%)</title><rect x="81.9022%" y="276" width="0.3963%" height="15" fill="rgb(208,77,27)" fg:x="1240" fg:w="6"/><text x="82.1522%" y="286.50"></text></g><g><title>flush_rows_to_disk (table.py:62) (5 samples, 0.33%)</title><rect x="82.2985%" y="276" width="0.3303%" height="15" fill="rgb(221,76,26)" fg:x="1246" fg:w="5"/><text x="82.5485%" y="286.50"></text></g><g><title>seek_db_fd (helper.py:19) (18 samples, 1.19%)</title><rect x="82.6948%" y="292" width="1.1889%" height="15" fill="rgb(225,139,18)" fg:x="1252" fg:w="18"/><text x="82.9448%" y="302.50"></text></g><g><title>flush_rows_to_disk (table.py:63) (54 samples, 3.57%)</title><rect x="82.6288%" y="276" width="3.5667%" height="15" fill="rgb(230,137,11)" fg:x="1251" fg:w="54"/><text x="82.8788%" y="286.50">flus..</text></g><g><title>seek_db_fd (helper.py:20) (35 samples, 2.31%)</title><rect x="83.8838%" y="292" width="2.3118%" height="15" fill="rgb(212,28,1)" fg:x="1270" fg:w="35"/><text x="84.1338%" y="302.50">s..</text></g><g><title>serialize (row.py:211) (16 samples, 1.06%)</title><rect x="86.2616%" y="292" width="1.0568%" height="15" fill="rgb(248,164,17)" fg:x="1306" fg:w="16"/><text x="86.5116%" y="302.50"></text></g><g><title>serialize (row.py:65) (12 samples, 0.79%)</title><rect x="86.5258%" y="308" width="0.7926%" height="15" fill="rgb(222,171,42)" fg:x="1310" fg:w="12"/><text x="86.7758%" y="318.50"></text></g><g><title>serialize (row.py:212) (13 samples, 0.86%)</title><rect x="87.3184%" y="292" width="0.8587%" height="15" fill="rgb(243,84,45)" fg:x="1322" fg:w="13"/><text x="87.5684%" y="302.50"></text></g><g><title>serialize (row.py:119) (12 samples, 0.79%)</title><rect x="87.3844%" y="308" width="0.7926%" height="15" fill="rgb(252,49,23)" fg:x="1323" fg:w="12"/><text x="87.6344%" y="318.50"></text></g><g><title>serialize (row.py:213) (2 samples, 0.13%)</title><rect x="88.1770%" y="292" width="0.1321%" height="15" fill="rgb(215,19,7)" fg:x="1335" fg:w="2"/><text x="88.4270%" y="302.50"></text></g><g><title>serialize (row.py:65) (2 samples, 0.13%)</title><rect x="88.1770%" y="308" width="0.1321%" height="15" fill="rgb(238,81,41)" fg:x="1335" fg:w="2"/><text x="88.4270%" y="318.50"></text></g><g><title>serialize (row.py:214) (4 samples, 0.26%)</title><rect x="88.3091%" y="292" width="0.2642%" height="15" fill="rgb(210,199,37)" fg:x="1337" fg:w="4"/><text x="88.5591%" y="302.50"></text></g><g><title>flush_rows_to_disk (table.py:64) (37 samples, 2.44%)</title><rect x="86.1955%" y="276" width="2.4439%" height="15" fill="rgb(244,192,49)" fg:x="1305" fg:w="37"/><text x="86.4455%" y="286.50">fl..</text></g><g><title>__init__ (row.py:22) (2 samples, 0.13%)</title><rect x="88.8375%" y="292" width="0.1321%" height="15" fill="rgb(226,211,11)" fg:x="1345" fg:w="2"/><text x="89.0875%" y="302.50"></text></g><g><title>validate_val (row.py:81) (2 samples, 0.13%)</title><rect x="88.9696%" y="308" width="0.1321%" height="15" fill="rgb(236,162,54)" fg:x="1347" fg:w="2"/><text x="89.2196%" y="318.50"></text></g><g><title>__init__ (row.py:23) (5 samples, 0.33%)</title><rect x="88.9696%" y="292" width="0.3303%" height="15" fill="rgb(220,229,9)" fg:x="1347" fg:w="5"/><text x="89.2196%" y="302.50"></text></g><g><title>validate_val (row.py:85) (3 samples, 0.20%)</title><rect x="89.1017%" y="308" width="0.1982%" height="15" fill="rgb(250,87,22)" fg:x="1349" fg:w="3"/><text x="89.3517%" y="318.50"></text></g><g><title>flush_rows_to_disk (table.py:68) (15 samples, 0.99%)</title><rect x="88.6394%" y="276" width="0.9908%" height="15" fill="rgb(239,43,17)" fg:x="1342" fg:w="15"/><text x="88.8894%" y="286.50"></text></g><g><title>__new__ (row.py:78) (5 samples, 0.33%)</title><rect x="89.2999%" y="292" width="0.3303%" height="15" fill="rgb(231,177,25)" fg:x="1352" fg:w="5"/><text x="89.5499%" y="302.50"></text></g><g><title>seek_db_fd (helper.py:19) (2 samples, 0.13%)</title><rect x="89.6301%" y="292" width="0.1321%" height="15" fill="rgb(219,179,1)" fg:x="1357" fg:w="2"/><text x="89.8801%" y="302.50"></text></g><g><title>flush_rows_to_disk (table.py:69) (102 samples, 6.74%)</title><rect x="89.6301%" y="276" width="6.7371%" height="15" fill="rgb(238,219,53)" fg:x="1357" fg:w="102"/><text x="89.8801%" y="286.50">flush_row..</text></g><g><title>seek_db_fd (helper.py:20) (100 samples, 6.61%)</title><rect x="89.7622%" y="292" width="6.6050%" height="15" fill="rgb(232,167,36)" fg:x="1359" fg:w="100"/><text x="90.0122%" y="302.50">seek_db_f..</text></g><g><title>flush_rows_to_disk (table.py:71) (3 samples, 0.20%)</title><rect x="96.3672%" y="276" width="0.1982%" height="15" fill="rgb(244,19,51)" fg:x="1459" fg:w="3"/><text x="96.6172%" y="286.50"></text></g><g><title>serialize (row.py:91) (3 samples, 0.20%)</title><rect x="96.3672%" y="292" width="0.1982%" height="15" fill="rgb(224,6,22)" fg:x="1459" fg:w="3"/><text x="96.6172%" y="302.50"></text></g><g><title>insert (table.py:86) (236 samples, 15.59%)</title><rect x="81.5720%" y="260" width="15.5878%" height="15" fill="rgb(224,145,5)" fg:x="1235" fg:w="236"/><text x="81.8220%" y="270.50">insert (table.py:86)</text></g><g><title>flush_rows_to_disk (table.py:72) (9 samples, 0.59%)</title><rect x="96.5654%" y="276" width="0.5945%" height="15" fill="rgb(234,130,49)" fg:x="1462" fg:w="9"/><text x="96.8154%" y="286.50"></text></g><g><title>test_insert_lotta_rows (db/test.py:163) (1,453 samples, 95.97%)</title><rect x="1.2550%" y="244" width="95.9709%" height="15" fill="rgb(254,6,2)" fg:x="19" fg:w="1453"/><text x="1.5050%" y="254.50">test_insert_lotta_rows (db/test.py:163)</text></g><g><title>__init__ (row.py:110) (4 samples, 0.26%)</title><rect x="97.5561%" y="260" width="0.2642%" height="15" fill="rgb(208,96,46)" fg:x="1477" fg:w="4"/><text x="97.8061%" y="270.50"></text></g><g><title>__init__ (row.py:23) (3 samples, 0.20%)</title><rect x="97.6222%" y="276" width="0.1982%" height="15" fill="rgb(239,3,39)" fg:x="1478" fg:w="3"/><text x="97.8722%" y="286.50"></text></g><g><title>__init__ (row.py:162) (21 samples, 1.39%)</title><rect x="97.8864%" y="260" width="1.3871%" height="15" fill="rgb(233,210,1)" fg:x="1482" fg:w="21"/><text x="98.1364%" y="270.50"></text></g><g><title>__new__ (row.py:78) (19 samples, 1.25%)</title><rect x="98.0185%" y="276" width="1.2550%" height="15" fill="rgb(244,137,37)" fg:x="1484" fg:w="19"/><text x="98.2685%" y="286.50"></text></g><g><title>&lt;module&gt; (db/test.py:176) (1,507 samples, 99.54%)</title><rect x="0.0000%" y="68" width="99.5376%" height="15" fill="rgb(240,136,2)" fg:x="0" fg:w="1507"/><text x="0.2500%" y="78.50">&lt;module&gt; (db/test.py:176)</text></g><g><title>__init__ (unittest/main.py:102) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="84" width="99.3395%" height="15" fill="rgb(239,18,37)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="94.50">__init__ (unittest/main.py:102)</text></g><g><title>runTests (unittest/main.py:274) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="100" width="99.3395%" height="15" fill="rgb(218,185,22)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="110.50">runTests (unittest/main.py:274)</text></g><g><title>run (unittest/runner.py:217) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="116" width="99.3395%" height="15" fill="rgb(225,218,4)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="126.50">run (unittest/runner.py:217)</text></g><g><title>__call__ (unittest/suite.py:84) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="132" width="99.3395%" height="15" fill="rgb(230,182,32)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="142.50">__call__ (unittest/suite.py:84)</text></g><g><title>run (unittest/suite.py:122) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="148" width="99.3395%" height="15" fill="rgb(242,56,43)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="158.50">run (unittest/suite.py:122)</text></g><g><title>__call__ (unittest/suite.py:84) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="164" width="99.3395%" height="15" fill="rgb(233,99,24)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="174.50">__call__ (unittest/suite.py:84)</text></g><g><title>run (unittest/suite.py:122) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="180" width="99.3395%" height="15" fill="rgb(234,209,42)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="190.50">run (unittest/suite.py:122)</text></g><g><title>__call__ (unittest/case.py:678) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="196" width="99.3395%" height="15" fill="rgb(227,7,12)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="206.50">__call__ (unittest/case.py:678)</text></g><g><title>run (unittest/case.py:623) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="212" width="99.3395%" height="15" fill="rgb(245,203,43)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="222.50">run (unittest/case.py:623)</text></g><g><title>_callTestMethod (unittest/case.py:579) (1,504 samples, 99.34%)</title><rect x="0.1982%" y="228" width="99.3395%" height="15" fill="rgb(238,205,33)" fg:x="3" fg:w="1504"/><text x="0.4482%" y="238.50">_callTestMethod (unittest/case.py:579)</text></g><g><title>test_insert_lotta_rows (db/test.py:164) (35 samples, 2.31%)</title><rect x="97.2259%" y="244" width="2.3118%" height="15" fill="rgb(231,56,7)" fg:x="1472" fg:w="35"/><text x="97.4759%" y="254.50">t..</text></g><g><title>__init__ (row.py:23) (4 samples, 0.26%)</title><rect x="99.2734%" y="260" width="0.2642%" height="15" fill="rgb(244,186,29)" fg:x="1503" fg:w="4"/><text x="99.5234%" y="270.50"></text></g><g><title>validate_val (row.py:55) (2 samples, 0.13%)</title><rect x="99.4055%" y="276" width="0.1321%" height="15" fill="rgb(234,111,31)" fg:x="1505" fg:w="2"/><text x="99.6555%" y="286.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:61) (2 samples, 0.13%)</title><rect x="99.5376%" y="164" width="0.1321%" height="15" fill="rgb(241,149,10)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="99.5376%" y="180" width="0.1321%" height="15" fill="rgb(249,206,44)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="99.5376%" y="196" width="0.1321%" height="15" fill="rgb(251,153,30)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.13%)</title><rect x="99.5376%" y="212" width="0.1321%" height="15" fill="rgb(239,152,38)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.13%)</title><rect x="99.5376%" y="228" width="0.1321%" height="15" fill="rgb(249,139,47)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="99.5376%" y="244" width="0.1321%" height="15" fill="rgb(244,64,35)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="254.50"></text></g><g><title>&lt;module&gt; (unittest/case.py:6) (2 samples, 0.13%)</title><rect x="99.5376%" y="260" width="0.1321%" height="15" fill="rgb(216,46,15)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="99.5376%" y="276" width="0.1321%" height="15" fill="rgb(250,74,19)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="99.5376%" y="292" width="0.1321%" height="15" fill="rgb(249,42,33)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.13%)</title><rect x="99.5376%" y="308" width="0.1321%" height="15" fill="rgb(242,149,17)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.13%)</title><rect x="99.5376%" y="324" width="0.1321%" height="15" fill="rgb(244,29,21)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="99.5376%" y="340" width="0.1321%" height="15" fill="rgb(220,130,37)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="350.50"></text></g><g><title>&lt;module&gt; (pprint.py:38) (2 samples, 0.13%)</title><rect x="99.5376%" y="356" width="0.1321%" height="15" fill="rgb(211,67,2)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="99.5376%" y="372" width="0.1321%" height="15" fill="rgb(235,68,52)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="99.5376%" y="388" width="0.1321%" height="15" fill="rgb(246,142,3)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.13%)</title><rect x="99.5376%" y="404" width="0.1321%" height="15" fill="rgb(241,25,7)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.13%)</title><rect x="99.5376%" y="420" width="0.1321%" height="15" fill="rgb(242,119,39)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="99.5376%" y="436" width="0.1321%" height="15" fill="rgb(241,98,45)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="446.50"></text></g><g><title>&lt;module&gt; (dataclasses.py:5) (2 samples, 0.13%)</title><rect x="99.5376%" y="452" width="0.1321%" height="15" fill="rgb(254,28,30)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="99.5376%" y="468" width="0.1321%" height="15" fill="rgb(241,142,54)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="99.5376%" y="484" width="0.1321%" height="15" fill="rgb(222,85,15)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.13%)</title><rect x="99.5376%" y="500" width="0.1321%" height="15" fill="rgb(210,85,47)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.13%)</title><rect x="99.5376%" y="516" width="0.1321%" height="15" fill="rgb(224,206,25)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="99.5376%" y="532" width="0.1321%" height="15" fill="rgb(243,201,19)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="542.50"></text></g><g><title>&lt;module&gt; (inspect.py:141) (2 samples, 0.13%)</title><rect x="99.5376%" y="548" width="0.1321%" height="15" fill="rgb(236,59,4)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="99.5376%" y="564" width="0.1321%" height="15" fill="rgb(254,179,45)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1126) (2 samples, 0.13%)</title><rect x="99.5376%" y="580" width="0.1321%" height="15" fill="rgb(226,14,10)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="99.5376%" y="596" width="0.1321%" height="15" fill="rgb(244,27,41)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (2 samples, 0.13%)</title><rect x="99.5376%" y="612" width="0.1321%" height="15" fill="rgb(235,35,32)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (2 samples, 0.13%)</title><rect x="99.5376%" y="628" width="0.1321%" height="15" fill="rgb(218,68,31)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (2 samples, 0.13%)</title><rect x="99.5376%" y="644" width="0.1321%" height="15" fill="rgb(207,120,37)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:936) (2 samples, 0.13%)</title><rect x="99.5376%" y="660" width="0.1321%" height="15" fill="rgb(227,98,0)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="670.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:1041) (2 samples, 0.13%)</title><rect x="99.5376%" y="676" width="0.1321%" height="15" fill="rgb(207,7,3)" fg:x="1507" fg:w="2"/><text x="99.7876%" y="686.50"></text></g><g><title>&lt;module&gt; (db/test.py:4) (3 samples, 0.20%)</title><rect x="99.5376%" y="68" width="0.1982%" height="15" fill="rgb(206,98,19)" fg:x="1507" fg:w="3"/><text x="99.7876%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (3 samples, 0.20%)</title><rect x="99.5376%" y="84" width="0.1982%" height="15" fill="rgb(217,5,26)" fg:x="1507" fg:w="3"/><text x="99.7876%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (3 samples, 0.20%)</title><rect x="99.5376%" y="100" width="0.1982%" height="15" fill="rgb(235,190,38)" fg:x="1507" fg:w="3"/><text x="99.7876%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.20%)</title><rect x="99.5376%" y="116" width="0.1982%" height="15" fill="rgb(247,86,24)" fg:x="1507" fg:w="3"/><text x="99.7876%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.20%)</title><rect x="99.5376%" y="132" width="0.1982%" height="15" fill="rgb(205,101,16)" fg:x="1507" fg:w="3"/><text x="99.7876%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.20%)</title><rect x="99.5376%" y="148" width="0.1982%" height="15" fill="rgb(246,168,33)" fg:x="1507" fg:w="3"/><text x="99.7876%" y="158.50"></text></g><g><title>all (1,514 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(231,114,1)" fg:x="0" fg:w="1514"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (db/test.py:7) (4 samples, 0.26%)</title><rect x="99.7358%" y="68" width="0.2642%" height="15" fill="rgb(207,184,53)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (4 samples, 0.26%)</title><rect x="99.7358%" y="84" width="0.2642%" height="15" fill="rgb(224,95,51)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (4 samples, 0.26%)</title><rect x="99.7358%" y="100" width="0.2642%" height="15" fill="rgb(212,188,45)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (4 samples, 0.26%)</title><rect x="99.7358%" y="116" width="0.2642%" height="15" fill="rgb(223,154,38)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (4 samples, 0.26%)</title><rect x="99.7358%" y="132" width="0.2642%" height="15" fill="rgb(251,22,52)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (4 samples, 0.26%)</title><rect x="99.7358%" y="148" width="0.2642%" height="15" fill="rgb(229,209,22)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="158.50"></text></g><g><title>&lt;module&gt; (db/main.py:6) (4 samples, 0.26%)</title><rect x="99.7358%" y="164" width="0.2642%" height="15" fill="rgb(234,138,34)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (4 samples, 0.26%)</title><rect x="99.7358%" y="180" width="0.2642%" height="15" fill="rgb(212,95,11)" fg:x="1510" fg:w="4"/><text x="99.9858%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (3 samples, 0.20%)</title><rect x="99.8018%" y="196" width="0.1982%" height="15" fill="rgb(240,179,47)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.20%)</title><rect x="99.8018%" y="212" width="0.1982%" height="15" fill="rgb(240,163,11)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.20%)</title><rect x="99.8018%" y="228" width="0.1982%" height="15" fill="rgb(236,37,12)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.20%)</title><rect x="99.8018%" y="244" width="0.1982%" height="15" fill="rgb(232,164,16)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="254.50"></text></g><g><title>&lt;module&gt; (helper.py:4) (3 samples, 0.20%)</title><rect x="99.8018%" y="260" width="0.1982%" height="15" fill="rgb(244,205,15)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (3 samples, 0.20%)</title><rect x="99.8018%" y="276" width="0.1982%" height="15" fill="rgb(223,117,47)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (3 samples, 0.20%)</title><rect x="99.8018%" y="292" width="0.1982%" height="15" fill="rgb(244,107,35)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.20%)</title><rect x="99.8018%" y="308" width="0.1982%" height="15" fill="rgb(205,140,8)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.20%)</title><rect x="99.8018%" y="324" width="0.1982%" height="15" fill="rgb(228,84,46)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.20%)</title><rect x="99.8018%" y="340" width="0.1982%" height="15" fill="rgb(254,188,9)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="350.50"></text></g><g><title>&lt;module&gt; (config.py:3) (3 samples, 0.20%)</title><rect x="99.8018%" y="356" width="0.1982%" height="15" fill="rgb(206,112,54)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (3 samples, 0.20%)</title><rect x="99.8018%" y="372" width="0.1982%" height="15" fill="rgb(216,84,49)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (3 samples, 0.20%)</title><rect x="99.8018%" y="388" width="0.1982%" height="15" fill="rgb(214,194,35)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.20%)</title><rect x="99.8018%" y="404" width="0.1982%" height="15" fill="rgb(249,28,3)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (3 samples, 0.20%)</title><rect x="99.8018%" y="420" width="0.1982%" height="15" fill="rgb(222,56,52)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 0.20%)</title><rect x="99.8018%" y="436" width="0.1982%" height="15" fill="rgb(245,217,50)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="446.50"></text></g><g><title>&lt;module&gt; (logging/config.py:30) (3 samples, 0.20%)</title><rect x="99.8018%" y="452" width="0.1982%" height="15" fill="rgb(213,201,24)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1176) (3 samples, 0.20%)</title><rect x="99.8018%" y="468" width="0.1982%" height="15" fill="rgb(248,116,28)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1147) (3 samples, 0.20%)</title><rect x="99.8018%" y="484" width="0.1982%" height="15" fill="rgb(219,72,43)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:690) (3 samples, 0.20%)</title><rect x="99.8018%" y="500" width="0.1982%" height="15" fill="rgb(209,138,14)" fg:x="1511" fg:w="3"/><text x="100.0518%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:940) (2 samples, 0.13%)</title><rect x="99.8679%" y="516" width="0.1321%" height="15" fill="rgb(222,18,33)" fg:x="1512" fg:w="2"/><text x="100.1179%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.13%)</title><rect x="99.8679%" y="532" width="0.1321%" height="15" fill="rgb(213,199,7)" fg:x="1512" fg:w="2"/><text x="100.1179%" y="542.50"></text></g></svg></svg>